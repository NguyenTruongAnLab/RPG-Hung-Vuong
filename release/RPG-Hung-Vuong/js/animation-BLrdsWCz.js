import{C as Ft,G as wt,T as At,g as re,R as gt,S as ut,M as Gt,A as ot,p as Ct,a as ne}from"./pixi-Bgh5T4sh.js";let D=class V{constructor(){this.hashCode=V._hashCode++,this._isInPool=!1}static _returnObject(t){const e=t.constructor.toString(),i=e in V._maxCountMap?V._maxCountMap[e]:V._defaultMaxCount,s=V._poolsMap[e]=V._poolsMap[e]||[];s.length<i&&(t._isInPool?console.warn("The object is already in the pool."):(t._isInPool=!0,s.push(t)))}static toString(){throw new Error}static setMaxCount(t,e){if((e<0||e!=e)&&(e=0),t!==null){const i=t.toString(),s=i in V._poolsMap?V._poolsMap[i]:null;s!==null&&s.length>e&&(s.length=e),V._maxCountMap[i]=e}else{V._defaultMaxCount=e;for(let i in V._poolsMap){const s=V._poolsMap[i];s.length>e&&(s.length=e),i in V._maxCountMap&&(V._maxCountMap[i]=e)}}}static clearPool(t=null){if(t!==null){const e=t.toString(),i=e in V._poolsMap?V._poolsMap[e]:null;i!==null&&i.length>0&&(i.length=0)}else for(let e in V._poolsMap)V._poolsMap[e].length=0}static borrowObject(t){const e=t.toString(),i=e in V._poolsMap?V._poolsMap[e]:null;if(i!==null&&i.length>0){const a=i.pop();return a._isInPool=!1,a}const s=new t;return s._onClear(),s}returnToPool(){this._onClear(),V._returnObject(this)}};D._hashCode=0,D._defaultMaxCount=3e3,D._maxCountMap={},D._poolsMap={};let mt=class{constructor(t=1,e=1,i=1,s=1,a=0,r=0,n=0,o=0){this.alphaMultiplier=t,this.redMultiplier=e,this.greenMultiplier=i,this.blueMultiplier=s,this.alphaOffset=a,this.redOffset=r,this.greenOffset=n,this.blueOffset=o}copyFrom(t){this.alphaMultiplier=t.alphaMultiplier,this.redMultiplier=t.redMultiplier,this.greenMultiplier=t.greenMultiplier,this.blueMultiplier=t.blueMultiplier,this.alphaOffset=t.alphaOffset,this.redOffset=t.redOffset,this.greenOffset=t.greenOffset,this.blueOffset=t.blueOffset}identity(){this.alphaMultiplier=this.redMultiplier=this.greenMultiplier=this.blueMultiplier=1,this.alphaOffset=this.redOffset=this.greenOffset=this.blueOffset=0}},bt=class{constructor(t=0,e=0,i=0,s=0){this.x=t,this.y=e,this.width=i,this.height=s}copyFrom(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height}clear(){this.x=this.y=0,this.width=this.height=0}},F=class zt{static normalizeRadian(t){return t=(t+Math.PI)%(2*Math.PI),t+=t>0?-Math.PI:Math.PI}constructor(t=0,e=0,i=0,s=0,a=1,r=1){this.x=t,this.y=e,this.skew=i,this.rotation=s,this.scaleX=a,this.scaleY=r}toString(){return"[object dragonBones.Transform] x:"+this.x+" y:"+this.y+" skewX:"+180*this.skew/Math.PI+" skewY:"+180*this.rotation/Math.PI+" scaleX:"+this.scaleX+" scaleY:"+this.scaleY}copyFrom(t){return this.x=t.x,this.y=t.y,this.skew=t.skew,this.rotation=t.rotation,this.scaleX=t.scaleX,this.scaleY=t.scaleY,this}identity(){return this.x=this.y=0,this.skew=this.rotation=0,this.scaleX=this.scaleY=1,this}add(t){return this.x+=t.x,this.y+=t.y,this.skew+=t.skew,this.rotation+=t.rotation,this.scaleX*=t.scaleX,this.scaleY*=t.scaleY,this}minus(t){return this.x-=t.x,this.y-=t.y,this.skew-=t.skew,this.rotation-=t.rotation,this.scaleX/=t.scaleX,this.scaleY/=t.scaleY,this}fromMatrix(t){const e=this.scaleX,i=this.scaleY,s=zt.PI_Q;this.x=t.tx,this.y=t.ty,this.rotation=Math.atan(t.b/t.a);let a=Math.atan(-t.c/t.d);return this.scaleX=this.rotation>-s&&this.rotation<s?t.a/Math.cos(this.rotation):t.b/Math.sin(this.rotation),this.scaleY=a>-s&&a<s?t.d/Math.cos(a):-t.c/Math.sin(a),e>=0&&this.scaleX<0&&(this.scaleX=-this.scaleX,this.rotation=this.rotation-Math.PI),i>=0&&this.scaleY<0&&(this.scaleY=-this.scaleY,a-=Math.PI),this.skew=a-this.rotation,this}toMatrix(t){return this.rotation===0?(t.a=1,t.b=0):(t.a=Math.cos(this.rotation),t.b=Math.sin(this.rotation)),this.skew===0?(t.c=-t.b,t.d=t.a):(t.c=-Math.sin(this.skew+this.rotation),t.d=Math.cos(this.skew+this.rotation)),this.scaleX!==1&&(t.a*=this.scaleX,t.b*=this.scaleX),this.scaleY!==1&&(t.c*=this.scaleY,t.d*=this.scaleY),t.tx=this.x,t.ty=this.y,this}};F.PI=Math.PI,F.PI_D=2*Math.PI,F.PI_H=Math.PI/2,F.PI_Q=Math.PI/4,F.RAD_DEG=180/Math.PI,F.DEG_RAD=Math.PI/180;let ft=class{constructor(t=0,e=0){this.x=t,this.y=e}copyFrom(t){this.x=t.x,this.y=t.y}clear(){this.x=this.y=0}},St=class{constructor(){this.weight=null}clear(){this.isShared||this.weight===null||this.weight.returnToPool(),this.isShared=!1,this.inheritDeform=!1,this.offset=0,this.data=null,this.weight=null}shareFrom(t){this.isShared=!0,this.offset=t.offset,this.weight=t.weight}get vertexCount(){return this.data.intArray[this.offset+0]}get triangleCount(){return this.data.intArray[this.offset+1]}},nt=class extends D{constructor(){super(...arguments),this.transform=new F}_onClear(){this.name="",this.path="",this.transform.identity(),this.parent=null}},le=class extends nt{constructor(){super(...arguments),this.pivot=new ft}static toString(){return"[class dragonBones.ImageDisplayData]"}_onClear(){super._onClear(),this.type=0,this.pivot.clear(),this.texture=null}},oe=class extends nt{constructor(){super(...arguments),this.actions=[]}static toString(){return"[class dragonBones.ArmatureDisplayData]"}_onClear(){super._onClear();for(const t of this.actions)t.returnToPool();this.type=1,this.inheritAnimation=!1,this.actions.length=0,this.armature=null}addAction(t){this.actions.push(t)}},he=class extends nt{constructor(){super(...arguments),this.geometry=new St}static toString(){return"[class dragonBones.MeshDisplayData]"}_onClear(){super._onClear(),this.type=2,this.geometry.clear(),this.texture=null}},_e=class extends nt{constructor(){super(...arguments),this.boundingBox=null}static toString(){return"[class dragonBones.BoundingBoxDisplayData]"}_onClear(){super._onClear(),this.boundingBox!==null&&this.boundingBox.returnToPool(),this.type=3,this.boundingBox=null}},Bt=class extends nt{constructor(){super(...arguments),this.geometry=new St,this.curveLengths=[]}static toString(){return"[class dragonBones.PathDisplayData]"}_onClear(){super._onClear(),this.type=4,this.closed=!1,this.constantSpeed=!1,this.geometry.clear(),this.curveLengths.length=0}},Ht=class extends D{constructor(){super(...arguments),this.bones=[]}static toString(){return"[class dragonBones.WeightData]"}_onClear(){this.count=0,this.offset=0,this.bones.length=0}addBone(t){this.bones.push(t)}},ue=class extends D{constructor(){super(...arguments),this.aabb=new bt,this.animationNames=[],this.sortedBones=[],this.sortedSlots=[],this.defaultActions=[],this.actions=[],this.bones={},this.slots={},this.constraints={},this.skins={},this.animations={},this.canvas=null,this.userData=null}static toString(){return"[class dragonBones.ArmatureData]"}_onClear(){for(const t of this.defaultActions)t.returnToPool();for(const t of this.actions)t.returnToPool();for(let t in this.bones)this.bones[t].returnToPool(),delete this.bones[t];for(let t in this.slots)this.slots[t].returnToPool(),delete this.slots[t];for(let t in this.constraints)this.constraints[t].returnToPool(),delete this.constraints[t];for(let t in this.skins)this.skins[t].returnToPool(),delete this.skins[t];for(let t in this.animations)this.animations[t].returnToPool(),delete this.animations[t];this.canvas!==null&&this.canvas.returnToPool(),this.userData!==null&&this.userData.returnToPool(),this.type=0,this.frameRate=0,this.cacheFrameRate=0,this.scale=1,this.name="",this.aabb.clear(),this.animationNames.length=0,this.sortedBones.length=0,this.sortedSlots.length=0,this.defaultActions.length=0,this.actions.length=0,this.defaultSkin=null,this.defaultAnimation=null,this.canvas=null,this.userData=null,this.parent=null}sortBones(){const t=this.sortedBones.length;if(t<=0)return;const e=this.sortedBones.concat();let i=0,s=0;for(this.sortedBones.length=0;s<t;){const a=e[i++];if(i>=t&&(i=0),this.sortedBones.indexOf(a)>=0)continue;let r=!1;for(let n in this.constraints){const o=this.constraints[n];if(o.root===a&&this.sortedBones.indexOf(o.target)<0){r=!0;break}}r||a.parent!==null&&this.sortedBones.indexOf(a.parent)<0||(this.sortedBones.push(a),s++)}}cacheFrames(t){if(!(this.cacheFrameRate>0)){this.cacheFrameRate=t;for(let e in this.animations)this.animations[e].cacheFrames(this.cacheFrameRate)}}setCacheFrame(t,e){const i=this.parent.cachedFrames;let s=i.length;return i.length+=10,i[s]=t.a,i[s+1]=t.b,i[s+2]=t.c,i[s+3]=t.d,i[s+4]=t.tx,i[s+5]=t.ty,i[s+6]=e.rotation,i[s+7]=e.skew,i[s+8]=e.scaleX,i[s+9]=e.scaleY,s}getCacheFrame(t,e,i){const s=this.parent.cachedFrames;t.a=s[i],t.b=s[i+1],t.c=s[i+2],t.d=s[i+3],t.tx=s[i+4],t.ty=s[i+5],e.rotation=s[i+6],e.skew=s[i+7],e.scaleX=s[i+8],e.scaleY=s[i+9],e.x=t.tx,e.y=t.ty}addBone(t){t.name in this.bones?console.warn("Same bone: "+t.name):(this.bones[t.name]=t,this.sortedBones.push(t))}addSlot(t){t.name in this.slots?console.warn("Same slot: "+t.name):(this.slots[t.name]=t,this.sortedSlots.push(t))}addConstraint(t){t.name in this.constraints?console.warn("Same constraint: "+t.name):this.constraints[t.name]=t}addSkin(t){t.name in this.skins?console.warn("Same skin: "+t.name):(t.parent=this,this.skins[t.name]=t,this.defaultSkin===null&&(this.defaultSkin=t),t.name==="default"&&(this.defaultSkin=t))}addAnimation(t){t.name in this.animations?console.warn("Same animation: "+t.name):(t.parent=this,this.animations[t.name]=t,this.animationNames.push(t.name),this.defaultAnimation===null&&(this.defaultAnimation=t))}addAction(t,e){e?this.defaultActions.push(t):this.actions.push(t)}getBone(t){return t in this.bones?this.bones[t]:null}getSlot(t){return t in this.slots?this.slots[t]:null}getConstraint(t){return t in this.constraints?this.constraints[t]:null}getSkin(t){return t in this.skins?this.skins[t]:null}getMesh(t,e,i){const s=this.getSkin(t);return s===null?null:s.getDisplay(e,i)}getAnimation(t){return t in this.animations?this.animations[t]:null}},Wt=class extends D{constructor(){super(...arguments),this.transform=new F,this.userData=null}static toString(){return"[class dragonBones.BoneData]"}_onClear(){this.userData!==null&&this.userData.returnToPool(),this.inheritTranslation=!1,this.inheritRotation=!1,this.inheritScale=!1,this.inheritReflection=!1,this.type=0,this.length=0,this.alpha=1,this.name="",this.transform.identity(),this.userData=null,this.parent=null}},me=class extends Wt{constructor(){super(...arguments),this.geometry=new St}static toString(){return"[class dragonBones.SurfaceData]"}_onClear(){super._onClear(),this.type=1,this.segmentX=0,this.segmentY=0,this.geometry.clear()}},ht=class extends D{constructor(){super(...arguments),this.color=null,this.userData=null}static createColor(){return new mt}static toString(){return"[class dragonBones.SlotData]"}_onClear(){this.userData!==null&&this.userData.returnToPool(),this.blendMode=0,this.displayIndex=0,this.zOrder=0,this.zIndex=0,this.alpha=1,this.name="",this.color=null,this.userData=null,this.parent=null}};ht.DEFAULT_COLOR=new mt;let P=class _t extends D{static actionDataToInstance(t,e,i){t.type===0?e.type=_t.FRAME_EVENT:e.type=t.type===10?_t.FRAME_EVENT:_t.SOUND_EVENT,e.name=t.name,e.armature=i,e.actionData=t,e.data=t.data,t.bone!==null&&(e.bone=i.getBone(t.bone.name)),t.slot!==null&&(e.slot=i.getSlot(t.slot.name))}static toString(){return"[class dragonBones.EventObject]"}_onClear(){this.time=0,this.type="",this.name="",this.armature=null,this.bone=null,this.slot=null,this.animationState=null,this.actionData=null,this.data=null}};P.START="start",P.LOOP_COMPLETE="loopComplete",P.COMPLETE="complete",P.FADE_IN="fadeIn",P.FADE_IN_COMPLETE="fadeInComplete",P.FADE_OUT="fadeOut",P.FADE_OUT_COMPLETE="fadeOutComplete",P.FRAME_EVENT="frameEvent",P.SOUND_EVENT="soundEvent";let ct=class extends D{_onClear(){this.dirty=!1,this.playState=-1,this.currentPlayTimes=0,this.currentTime=-1,this.target=null,this._isTween=!1,this._valueOffset=0,this._frameValueOffset=0,this._frameOffset=0,this._frameRate=0,this._frameCount=0,this._frameIndex=-1,this._frameRateR=0,this._position=0,this._duration=0,this._timeScale=1,this._timeOffset=0,this._animationData=null,this._timelineData=null,this._armature=null,this._animationState=null,this._actionTimeline=null,this._frameArray=null,this._valueArray=null,this._timelineArray=null,this._frameIndices=null}_setCurrentTime(t){const e=this.playState,i=this.currentPlayTimes,s=this.currentTime;if(this._actionTimeline!==null&&this._frameCount<=1)this.playState=this._actionTimeline.playState>=0?1:-1,this.currentPlayTimes=1,this.currentTime=this._actionTimeline.currentTime;else if(this._actionTimeline===null||this._timeScale!==1||this._timeOffset!==0){const a=this._animationState.playTimes,r=a*this._duration;t*=this._timeScale,this._timeOffset!==0&&(t+=this._timeOffset*this._animationData.duration),a>0&&(t>=r||t<=-r)?(this.playState<=0&&this._animationState._playheadState===3&&(this.playState=1),this.currentPlayTimes=a,this.currentTime=t<0?0:this.playState===1?this._duration+1e-6:this._duration):(this.playState!==0&&this._animationState._playheadState===3&&(this.playState=0),t<0?(t=-t,this.currentPlayTimes=Math.floor(t/this._duration),this.currentTime=this._duration-t%this._duration):(this.currentPlayTimes=Math.floor(t/this._duration),this.currentTime=t%this._duration)),this.currentTime+=this._position}else this.playState=this._actionTimeline.playState,this.currentPlayTimes=this._actionTimeline.currentPlayTimes,this.currentTime=this._actionTimeline.currentTime;return(this.currentPlayTimes!==i||this.currentTime!==s)&&((e<0&&this.playState!==e||this.playState<=0&&this.currentPlayTimes!==i)&&(this._frameIndex=-1),!0)}init(t,e,i){if(this._armature=t,this._animationState=e,this._timelineData=i,this._actionTimeline=this._animationState._actionTimeline,this===this._actionTimeline&&(this._actionTimeline=null),this._animationData=this._animationState.animationData,this._frameRate=this._animationData.parent.frameRate,this._frameRateR=1/this._frameRate,this._position=this._animationState._position,this._duration=this._animationState._duration,this._timelineData!==null){const s=this._animationData.parent.parent;this._frameArray=s.frameArray,this._timelineArray=s.timelineArray,this._frameIndices=s.frameIndices,this._frameCount=this._timelineArray[this._timelineData.offset+2],this._frameValueOffset=this._timelineArray[this._timelineData.offset+4],this._timeScale=100/this._timelineArray[this._timelineData.offset+0],this._timeOffset=.01*this._timelineArray[this._timelineData.offset+1]}}fadeOut(){this.dirty=!1}update(t){if(this._setCurrentTime(t)){if(this._frameCount>1){const e=Math.floor(this.currentTime*this._frameRate),i=this._frameIndices[this._timelineData.frameIndicesOffset+e];this._frameIndex!==i&&(this._frameIndex=i,this._frameOffset=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+5+this._frameIndex],this._onArriveAtFrame())}else this._frameIndex<0&&(this._frameIndex=0,this._timelineData!==null&&(this._frameOffset=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+5]),this._onArriveAtFrame());(this._isTween||this.dirty)&&this._onUpdateFrame()}}blend(t){}},dt=class Dt extends ct{static _getEasingValue(t,e,i){let s=e;switch(t){case 3:s=Math.pow(e,2);break;case 4:s=1-Math.pow(1-e,2);break;case 5:s=.5*(1-Math.cos(e*Math.PI))}return(s-e)*i+e}static _getEasingCurveValue(t,e,i,s){if(t<=0)return 0;if(t>=1)return 1;const a=i>0,r=i+1,n=Math.floor(t*r);let o=0,h=0;return a?(o=n===0?0:e[s+n-1],h=n===r-1?1e4:e[s+n]):(o=e[s+n-1],h=e[s+n]),1e-4*(o+(h-o)*(t*r-n))}_onClear(){super._onClear(),this._tweenType=0,this._curveCount=0,this._framePosition=0,this._frameDurationR=0,this._tweenEasing=0,this._tweenProgress=0,this._valueScale=1}_onArriveAtFrame(){if(this._frameCount>1&&(this._frameIndex!==this._frameCount-1||this._animationState.playTimes===0||this._animationState.currentPlayTimes<this._animationState.playTimes-1))if(this._tweenType=this._frameArray[this._frameOffset+1],this._isTween=this._tweenType!==0,this._isTween?this._tweenType===2?this._curveCount=this._frameArray[this._frameOffset+2]:this._tweenType!==0&&this._tweenType!==1&&(this._tweenEasing=.01*this._frameArray[this._frameOffset+2]):this.dirty=!0,this._framePosition=this._frameArray[this._frameOffset]*this._frameRateR,this._frameIndex===this._frameCount-1)this._frameDurationR=1/(this._animationData.duration-this._framePosition);else{const t=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+5+this._frameIndex+1],e=this._frameArray[t]*this._frameRateR-this._framePosition;this._frameDurationR=e>0?1/e:0}else this.dirty=!0,this._isTween=!1}_onUpdateFrame(){this._isTween&&(this.dirty=!0,this._tweenProgress=(this.currentTime-this._framePosition)*this._frameDurationR,this._tweenType===2?this._tweenProgress=Dt._getEasingCurveValue(this._tweenProgress,this._frameArray,this._curveCount,this._frameOffset+3):this._tweenType!==1&&(this._tweenProgress=Dt._getEasingValue(this._tweenType,this._tweenProgress,this._tweenEasing)))}},pt=class extends dt{_onClear(){super._onClear(),this._current=0,this._difference=0,this._result=0}_onArriveAtFrame(){if(super._onArriveAtFrame(),this._timelineData!==null){const t=this._valueScale,e=this._valueArray,i=this._valueOffset+this._frameValueOffset+this._frameIndex;if(this._isTween){const s=this._frameIndex===this._frameCount-1?this._valueOffset+this._frameValueOffset:i+1;t===1?(this._current=e[i],this._difference=e[s]-this._current):(this._current=e[i]*t,this._difference=e[s]*t-this._current)}else this._result=e[i]*t}else this._result=0}_onUpdateFrame(){super._onUpdateFrame(),this._isTween&&(this._result=this._current+this._difference*this._tweenProgress)}},lt=class extends dt{_onClear(){super._onClear(),this._currentA=0,this._currentB=0,this._differenceA=0,this._differenceB=0,this._resultA=0,this._resultB=0}_onArriveAtFrame(){if(super._onArriveAtFrame(),this._timelineData!==null){const t=this._valueScale,e=this._valueArray,i=this._valueOffset+this._frameValueOffset+2*this._frameIndex;if(this._isTween){const s=this._frameIndex===this._frameCount-1?this._valueOffset+this._frameValueOffset:i+2;t===1?(this._currentA=e[i],this._currentB=e[i+1],this._differenceA=e[s]-this._currentA,this._differenceB=e[s+1]-this._currentB):(this._currentA=e[i]*t,this._currentB=e[i+1]*t,this._differenceA=e[s]*t-this._currentA,this._differenceB=e[s+1]*t-this._currentB)}else this._resultA=e[i]*t,this._resultB=e[i+1]*t}else this._resultA=0,this._resultB=0}_onUpdateFrame(){super._onUpdateFrame(),this._isTween&&(this._resultA=this._currentA+this._differenceA*this._tweenProgress,this._resultB=this._currentB+this._differenceB*this._tweenProgress)}},Ot=class extends dt{constructor(){super(...arguments),this._rd=[]}_onClear(){super._onClear(),this._valueCount=0,this._rd.length=0}_onArriveAtFrame(){super._onArriveAtFrame();const t=this._valueCount,e=this._rd;if(this._timelineData!==null){const i=this._valueScale,s=this._valueArray,a=this._valueOffset+this._frameValueOffset+this._frameIndex*t;if(this._isTween){const r=this._frameIndex===this._frameCount-1?this._valueOffset+this._frameValueOffset:a+t;if(i===1)for(let n=0;n<t;++n)e[t+n]=s[r+n]-s[a+n];else for(let n=0;n<t;++n)e[t+n]=(s[r+n]-s[a+n])*i}else if(i===1)for(let r=0;r<t;++r)e[r]=s[a+r];else for(let r=0;r<t;++r)e[r]=s[a+r]*i}else for(let i=0;i<t;++i)e[i]=0}_onUpdateFrame(){if(super._onUpdateFrame(),this._isTween){const t=this._valueCount,e=this._valueScale,i=this._tweenProgress,s=this._valueArray,a=this._rd,r=this._valueOffset+this._frameValueOffset+this._frameIndex*t;if(e===1)for(let n=0;n<t;++n)a[n]=s[r+n]+a[t+n]*i;else for(let n=0;n<t;++n)a[n]=s[r+n]*e+a[t+n]*i}}},fe=class extends ct{static toString(){return"[class dragonBones.ActionTimelineState]"}_onCrossFrame(t){const e=this._armature.eventDispatcher;if(this._animationState.actionEnabled){const i=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+5+t],s=this._frameArray[i+1],a=this._animationData.parent.actions;for(let r=0;r<s;++r){const n=a[this._frameArray[i+2+r]];if(n.type===0){const o=D.borrowObject(P);o.time=this._frameArray[i]/this._frameRate,o.animationState=this._animationState,P.actionDataToInstance(n,o,this._armature),this._armature._bufferAction(o,!0)}else{const o=n.type===10?P.FRAME_EVENT:P.SOUND_EVENT;if(n.type===11||e.hasDBEventListener(o)){const h=D.borrowObject(P);h.time=this._frameArray[i]/this._frameRate,h.animationState=this._animationState,P.actionDataToInstance(n,h,this._armature),this._armature._dragonBones.bufferEvent(h)}}}}}_onArriveAtFrame(){}_onUpdateFrame(){}update(t){const e=this.playState;let i=this.currentPlayTimes,s=this.currentTime;if(this._setCurrentTime(t)){const a=this._animationState._parent===null&&this._animationState.actionEnabled,r=this._armature.eventDispatcher;if(e<0){if(this.playState===e)return;if(this._animationState.displayControl&&this._animationState.resetToPose&&this._armature._sortZOrder(null,0),a&&r.hasDBEventListener(P.START)){const _=D.borrowObject(P);_.type=P.START,_.armature=this._armature,_.animationState=this._animationState,this._armature._dragonBones.bufferEvent(_)}}const n=this._animationState.timeScale<0;let o=null,h=null;if(a&&this.currentPlayTimes!==i&&(r.hasDBEventListener(P.LOOP_COMPLETE)&&(o=D.borrowObject(P),o.type=P.LOOP_COMPLETE,o.armature=this._armature,o.animationState=this._animationState),this.playState>0&&r.hasDBEventListener(P.COMPLETE)&&(h=D.borrowObject(P),h.type=P.COMPLETE,h.armature=this._armature,h.animationState=this._animationState)),this._frameCount>1){const _=this._timelineData,u=Math.floor(this.currentTime*this._frameRate),m=this._frameIndices[_.frameIndicesOffset+u];if(this._frameIndex!==m){let p=this._frameIndex;if(this._frameIndex=m,this._timelineArray!==null)if(this._frameOffset=this._animationData.frameOffset+this._timelineArray[_.offset+5+this._frameIndex],n){if(p<0){const f=Math.floor(s*this._frameRate);p=this._frameIndices[_.frameIndicesOffset+f],this.currentPlayTimes===i&&p===m&&(p=-1)}for(;p>=0;){const f=this._animationData.frameOffset+this._timelineArray[_.offset+5+p],y=this._frameArray[f]/this._frameRate;if(this._position<=y&&y<=this._position+this._duration&&this._onCrossFrame(p),o!==null&&p===0&&(this._armature._dragonBones.bufferEvent(o),o=null),p>0?p--:p=this._frameCount-1,p===m)break}}else{if(p<0){const f=Math.floor(s*this._frameRate);p=this._frameIndices[_.frameIndicesOffset+f];const y=this._animationData.frameOffset+this._timelineArray[_.offset+5+p],T=this._frameArray[y]/this._frameRate;this.currentPlayTimes===i&&(s<=T?p>0?p--:p=this._frameCount-1:p===m&&(p=-1))}for(;p>=0;){p<this._frameCount-1?p++:p=0;const f=this._animationData.frameOffset+this._timelineArray[_.offset+5+p],y=this._frameArray[f]/this._frameRate;if(this._position<=y&&y<=this._position+this._duration&&this._onCrossFrame(p),o!==null&&p===0&&(this._armature._dragonBones.bufferEvent(o),o=null),p===m)break}}}}else if(this._frameIndex<0&&(this._frameIndex=0,this._timelineData!==null)){this._frameOffset=this._animationData.frameOffset+this._timelineArray[this._timelineData.offset+5];const _=this._frameArray[this._frameOffset]/this._frameRate;this.currentPlayTimes===i?s<=_&&this._onCrossFrame(this._frameIndex):this._position<=_&&(n||o===null||(this._armature._dragonBones.bufferEvent(o),o=null),this._onCrossFrame(this._frameIndex))}o!==null&&this._armature._dragonBones.bufferEvent(o),h!==null&&this._armature._dragonBones.bufferEvent(h)}}setCurrentTime(t){this._setCurrentTime(t),this._frameIndex=-1}};class ce extends ct{static toString(){return"[class dragonBones.ZOrderTimelineState]"}_onArriveAtFrame(){this.playState>=0&&(this._frameArray[this._frameOffset+1]>0?this._armature._sortZOrder(this._frameArray,this._frameOffset+2):this._armature._sortZOrder(null,0))}_onUpdateFrame(){}}class Pt extends Ot{static toString(){return"[class dragonBones.BoneAllTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame(),this._isTween&&this._frameIndex===this._frameCount-1&&(this._rd[2]=F.normalizeRadian(this._rd[2]),this._rd[3]=F.normalizeRadian(this._rd[3])),this._timelineData===null&&(this._rd[4]=1,this._rd[5]=1)}init(t,e,i){super.init(t,e,i),this._valueOffset=this._animationData.frameFloatOffset,this._valueCount=6,this._valueArray=this._animationData.parent.parent.frameFloatArray}fadeOut(){this.dirty=!1,this._rd[2]=F.normalizeRadian(this._rd[2]),this._rd[3]=F.normalizeRadian(this._rd[3])}blend(t){const e=this._armature.armatureData.scale,i=this._rd,s=this.target,a=s.target,r=s.blendWeight,n=a.animationPose;s.dirty>1?(n.x+=i[0]*r*e,n.y+=i[1]*r*e,n.rotation+=i[2]*r,n.skew+=i[3]*r,n.scaleX+=(i[4]-1)*r,n.scaleY+=(i[5]-1)*r):(n.x=i[0]*r*e,n.y=i[1]*r*e,n.rotation=i[2]*r,n.skew=i[3]*r,n.scaleX=(i[4]-1)*r+1,n.scaleY=(i[5]-1)*r+1),(t||this.dirty)&&(this.dirty=!1,a._transformDirty=!0)}}let de=class extends lt{static toString(){return"[class dragonBones.BoneTranslateTimelineState]"}init(t,e,i){super.init(t,e,i),this._valueOffset=this._animationData.frameFloatOffset,this._valueScale=this._armature.armatureData.scale,this._valueArray=this._animationData.parent.parent.frameFloatArray}blend(t){const e=this.target,i=e.target,s=e.blendWeight,a=i.animationPose;e.dirty>1?(a.x+=this._resultA*s,a.y+=this._resultB*s):s!==1?(a.x=this._resultA*s,a.y=this._resultB*s):(a.x=this._resultA,a.y=this._resultB),(t||this.dirty)&&(this.dirty=!1,i._transformDirty=!0)}},pe=class extends lt{static toString(){return"[class dragonBones.BoneRotateTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame(),this._isTween&&this._frameIndex===this._frameCount-1&&(this._differenceA=F.normalizeRadian(this._differenceA),this._differenceB=F.normalizeRadian(this._differenceB))}init(t,e,i){super.init(t,e,i),this._valueOffset=this._animationData.frameFloatOffset,this._valueArray=this._animationData.parent.parent.frameFloatArray}fadeOut(){this.dirty=!1,this._resultA=F.normalizeRadian(this._resultA),this._resultB=F.normalizeRadian(this._resultB)}blend(t){const e=this.target,i=e.target,s=e.blendWeight,a=i.animationPose;e.dirty>1?(a.rotation+=this._resultA*s,a.skew+=this._resultB*s):s!==1?(a.rotation=this._resultA*s,a.skew=this._resultB*s):(a.rotation=this._resultA,a.skew=this._resultB),(t||this.dirty)&&(this.dirty=!1,i._transformDirty=!0)}};class ge extends lt{static toString(){return"[class dragonBones.BoneScaleTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame(),this._timelineData===null&&(this._resultA=1,this._resultB=1)}init(t,e,i){super.init(t,e,i),this._valueOffset=this._animationData.frameFloatOffset,this._valueArray=this._animationData.parent.parent.frameFloatArray}blend(t){const e=this.target,i=e.target,s=e.blendWeight,a=i.animationPose;e.dirty>1?(a.scaleX+=(this._resultA-1)*s,a.scaleY+=(this._resultB-1)*s):s!==1?(a.scaleX=(this._resultA-1)*s+1,a.scaleY=(this._resultB-1)*s+1):(a.scaleX=this._resultA,a.scaleY=this._resultB),(t||this.dirty)&&(this.dirty=!1,i._transformDirty=!0)}}class Nt extends Ot{static toString(){return"[class dragonBones.SurfaceTimelineState]"}_onClear(){super._onClear(),this._deformCount=0,this._deformOffset=0,this._sameValueOffset=0}init(t,e,i){if(super.init(t,e,i),this._timelineData!==null){const s=this._animationData.parent.parent,a=s.frameIntArray,r=this._animationData.frameIntOffset+this._timelineArray[this._timelineData.offset+3];this._valueOffset=this._animationData.frameFloatOffset,this._valueCount=a[r+2],this._deformCount=a[r+1],this._deformOffset=a[r+3],this._sameValueOffset=a[r+4]+this._animationData.frameFloatOffset,this._valueScale=this._armature.armatureData.scale,this._valueArray=s.frameFloatArray,this._rd.length=2*this._valueCount}else this._deformCount=this.target.target._deformVertices.length}blend(t){const e=this.target,i=e.target,s=e.blendWeight,a=i._deformVertices,r=this._valueArray;if(r!==null){const n=this._valueCount,o=this._deformOffset,h=this._sameValueOffset,_=this._rd;for(let u=0;u<this._deformCount;++u){let m=0;m=u<o?r[h+u]:u<o+n?_[u-o]:r[h+u-n],e.dirty>1?a[u]+=m*s:a[u]=m*s}}else if(e.dirty===1)for(let n=0;n<this._deformCount;++n)a[n]=0;(t||this.dirty)&&(this.dirty=!1,i._transformDirty=!0)}}class vt extends pt{static toString(){return"[class dragonBones.AlphaTimelineState]"}_onArriveAtFrame(){super._onArriveAtFrame(),this._timelineData===null&&(this._result=1)}init(t,e,i){super.init(t,e,i),this._valueOffset=this._animationData.frameIntOffset,this._valueScale=.01,this._valueArray=this._animationData.parent.parent.frameIntArray}blend(t){const e=this.target,i=e.target,s=e.blendWeight;e.dirty>1?(i._alpha+=this._result*s,i._alpha>1&&(i._alpha=1)):i._alpha=this._result*s,(t||this.dirty)&&(this.dirty=!1,this._armature._alphaDirty=!0)}}let Rt=class extends ct{static toString(){return"[class dragonBones.SlotDisplayTimelineState]"}_onArriveAtFrame(){if(this.playState>=0){const t=this.target,e=this._timelineData!==null?this._frameArray[this._frameOffset+1]:t._slotData.displayIndex;t.displayIndex!==e&&t._setDisplayIndex(e,!0)}}_onUpdateFrame(){}};class kt extends dt{constructor(){super(...arguments),this._current=[0,0,0,0,0,0,0,0],this._difference=[0,0,0,0,0,0,0,0],this._result=[0,0,0,0,0,0,0,0]}static toString(){return"[class dragonBones.SlotColorTimelineState]"}_onArriveAtFrame(){if(super._onArriveAtFrame(),this._timelineData!==null){const t=this._animationData.parent.parent,e=t.colorArray,i=t.frameIntArray,s=this._animationData.frameIntOffset+this._frameValueOffset+this._frameIndex;let a=i[s];a<0&&(a+=65536),this._isTween?(this._current[0]=e[a++],this._current[1]=e[a++],this._current[2]=e[a++],this._current[3]=e[a++],this._current[4]=e[a++],this._current[5]=e[a++],this._current[6]=e[a++],this._current[7]=e[a++],a=this._frameIndex===this._frameCount-1?i[this._animationData.frameIntOffset+this._frameValueOffset]:i[s+1],a<0&&(a+=65536),this._difference[0]=e[a++]-this._current[0],this._difference[1]=e[a++]-this._current[1],this._difference[2]=e[a++]-this._current[2],this._difference[3]=e[a++]-this._current[3],this._difference[4]=e[a++]-this._current[4],this._difference[5]=e[a++]-this._current[5],this._difference[6]=e[a++]-this._current[6],this._difference[7]=e[a++]-this._current[7]):(this._result[0]=.01*e[a++],this._result[1]=.01*e[a++],this._result[2]=.01*e[a++],this._result[3]=.01*e[a++],this._result[4]=e[a++],this._result[5]=e[a++],this._result[6]=e[a++],this._result[7]=e[a++])}else{const t=this.target.slotData.color;this._result[0]=t.alphaMultiplier,this._result[1]=t.redMultiplier,this._result[2]=t.greenMultiplier,this._result[3]=t.blueMultiplier,this._result[4]=t.alphaOffset,this._result[5]=t.redOffset,this._result[6]=t.greenOffset,this._result[7]=t.blueOffset}}_onUpdateFrame(){super._onUpdateFrame(),this._isTween&&(this._result[0]=.01*(this._current[0]+this._difference[0]*this._tweenProgress),this._result[1]=.01*(this._current[1]+this._difference[1]*this._tweenProgress),this._result[2]=.01*(this._current[2]+this._difference[2]*this._tweenProgress),this._result[3]=.01*(this._current[3]+this._difference[3]*this._tweenProgress),this._result[4]=this._current[4]+this._difference[4]*this._tweenProgress,this._result[5]=this._current[5]+this._difference[5]*this._tweenProgress,this._result[6]=this._current[6]+this._difference[6]*this._tweenProgress,this._result[7]=this._current[7]+this._difference[7]*this._tweenProgress)}fadeOut(){this._isTween=!1}update(t){if(super.update(t),this._isTween||this.dirty){const e=this.target,i=e._colorTransform;if(this._animationState._fadeState!==0||this._animationState._subFadeState!==0){if(i.alphaMultiplier!==this._result[0]||i.redMultiplier!==this._result[1]||i.greenMultiplier!==this._result[2]||i.blueMultiplier!==this._result[3]||i.alphaOffset!==this._result[4]||i.redOffset!==this._result[5]||i.greenOffset!==this._result[6]||i.blueOffset!==this._result[7]){const s=Math.pow(this._animationState._fadeProgress,4);i.alphaMultiplier+=(this._result[0]-i.alphaMultiplier)*s,i.redMultiplier+=(this._result[1]-i.redMultiplier)*s,i.greenMultiplier+=(this._result[2]-i.greenMultiplier)*s,i.blueMultiplier+=(this._result[3]-i.blueMultiplier)*s,i.alphaOffset+=(this._result[4]-i.alphaOffset)*s,i.redOffset+=(this._result[5]-i.redOffset)*s,i.greenOffset+=(this._result[6]-i.greenOffset)*s,i.blueOffset+=(this._result[7]-i.blueOffset)*s,e._colorDirty=!0}}else this.dirty&&(this.dirty=!1,i.alphaMultiplier===this._result[0]&&i.redMultiplier===this._result[1]&&i.greenMultiplier===this._result[2]&&i.blueMultiplier===this._result[3]&&i.alphaOffset===this._result[4]&&i.redOffset===this._result[5]&&i.greenOffset===this._result[6]&&i.blueOffset===this._result[7]||(i.alphaMultiplier=this._result[0],i.redMultiplier=this._result[1],i.greenMultiplier=this._result[2],i.blueMultiplier=this._result[3],i.alphaOffset=this._result[4],i.redOffset=this._result[5],i.greenOffset=this._result[6],i.blueOffset=this._result[7],e._colorDirty=!0))}}}let ye=class extends pt{static toString(){return"[class dragonBones.SlotZIndexTimelineState]"}_onArriveAtFrame(){if(super._onArriveAtFrame(),this._timelineData===null){const t=this.target.target;this._result=t.slotData.zIndex}}init(t,e,i){super.init(t,e,i),this._valueOffset=this._animationData.frameIntOffset,this._valueArray=this._animationData.parent.parent.frameIntArray}blend(t){const e=this.target,i=e.target,s=e.blendWeight;e.dirty>1?i._zIndex+=this._result*s:i._zIndex=this._result*s,(t||this.dirty)&&(this.dirty=!1,this._armature._zIndexDirty=!0)}};class Lt extends Ot{static toString(){return"[class dragonBones.DeformTimelineState]"}_onClear(){super._onClear(),this.displayFrame=null,this._deformCount=0,this._deformOffset=0,this._sameValueOffset=0}init(t,e,i){if(super.init(t,e,i),this._timelineData!==null){const s=this._animationData.frameIntOffset+this._timelineArray[this._timelineData.offset+3],a=this._animationData.parent.parent,r=a.frameIntArray;this._valueOffset=this._animationData.frameFloatOffset,this._valueCount=r[s+2],this._deformCount=r[s+1],this._deformOffset=r[s+3],this._sameValueOffset=r[s+4],this._sameValueOffset<0&&(this._sameValueOffset+=65536),this._sameValueOffset+=this._animationData.frameFloatOffset,this._valueScale=this._armature.armatureData.scale,this._valueArray=a.frameFloatArray,this._rd.length=2*this._valueCount}else this._deformCount=this.displayFrame.deformVertices.length}blend(t){const e=this.target,i=e.target,s=e.blendWeight,a=this.displayFrame.deformVertices,r=this._valueArray;if(r!==null){const n=this._valueCount,o=this._deformOffset,h=this._sameValueOffset,_=this._rd;for(let u=0;u<this._deformCount;++u){let m=0;m=u<o?r[h+u]:u<o+n?_[u-o]:r[h+u-n],e.dirty>1?a[u]+=m*s:a[u]=m*s}}else if(e.dirty===1)for(let n=0;n<this._deformCount;++n)a[n]=0;(t||this.dirty)&&(this.dirty=!1,i._geometryData===this.displayFrame.getGeometryData()&&(i._verticesDirty=!0))}}class Vt extends lt{static toString(){return"[class dragonBones.IKConstraintTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;if(this._timelineData!==null)t._bendPositive=this._currentA>0,t._weight=this._currentB;else{const e=t._constraintData;t._bendPositive=e.bendPositive,t._weight=e.weight}t.invalidUpdate(),this.dirty=!1}init(t,e,i){super.init(t,e,i),this._valueOffset=this._animationData.frameIntOffset,this._valueScale=.01,this._valueArray=this._animationData.parent.parent.frameIntArray}}let Te=class extends pt{static toString(){return"[class dragonBones.AnimationProgressTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;t._parent!==null&&(t.currentTime=this._result*t.totalTime),this.dirty=!1}init(t,e,i){super.init(t,e,i),this._valueOffset=this._animationData.frameIntOffset,this._valueScale=1e-4,this._valueArray=this._animationData.parent.parent.frameIntArray}};class Ae extends pt{static toString(){return"[class dragonBones.AnimationWeightTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;t._parent!==null&&(t.weight=this._result),this.dirty=!1}init(t,e,i){super.init(t,e,i),this._valueOffset=this._animationData.frameIntOffset,this._valueScale=1e-4,this._valueArray=this._animationData.parent.parent.frameIntArray}}class be extends lt{static toString(){return"[class dragonBones.AnimationParametersTimelineState]"}_onUpdateFrame(){super._onUpdateFrame();const t=this.target;t._parent!==null&&(t.parameterX=this._resultA,t.parameterY=this._resultB),this.dirty=!1}init(t,e,i){super.init(t,e,i),this._valueOffset=this._animationData.frameIntOffset,this._valueScale=1e-4,this._valueArray=this._animationData.parent.parent.frameIntArray}}let De=class extends D{constructor(){super(...arguments),this._boneMask=[],this._boneTimelines=[],this._boneBlendTimelines=[],this._slotTimelines=[],this._slotBlendTimelines=[],this._constraintTimelines=[],this._animationTimelines=[],this._poseTimelines=[],this._actionTimeline=null,this._zOrderTimeline=null}static toString(){return"[class dragonBones.AnimationState]"}_onClear(){for(const t of this._boneTimelines)t.returnToPool();for(const t of this._boneBlendTimelines)t.returnToPool();for(const t of this._slotTimelines)t.returnToPool();for(const t of this._slotBlendTimelines)t.returnToPool();for(const t of this._constraintTimelines)t.returnToPool();for(const t of this._animationTimelines){const e=t.target;e._parent===this&&(e._fadeState=1,e._subFadeState=1,e._parent=null),t.returnToPool()}this._actionTimeline!==null&&this._actionTimeline.returnToPool(),this._zOrderTimeline!==null&&this._zOrderTimeline.returnToPool(),this.actionEnabled=!1,this.additive=!1,this.displayControl=!1,this.resetToPose=!1,this.blendType=0,this.playTimes=1,this.layer=0,this.timeScale=1,this._weight=1,this.parameterX=0,this.parameterY=0,this.positionX=0,this.positionY=0,this.autoFadeOutTime=0,this.fadeTotalTime=0,this.name="",this.group="",this._timelineDirty=2,this._playheadState=0,this._fadeState=-1,this._subFadeState=-1,this._position=0,this._duration=0,this._fadeTime=0,this._time=0,this._fadeProgress=0,this._weightResult=0,this._boneMask.length=0,this._boneTimelines.length=0,this._boneBlendTimelines.length=0,this._slotTimelines.length=0,this._slotBlendTimelines.length=0,this._constraintTimelines.length=0,this._animationTimelines.length=0,this._poseTimelines.length=0,this._animationData=null,this._armature=null,this._actionTimeline=null,this._zOrderTimeline=null,this._activeChildA=null,this._activeChildB=null,this._parent=null}_updateTimelines(){for(const t of this._armature._constraints){const e=this._animationData.getConstraintTimelines(t.name);if(e!==null)for(const i of e)switch(i.type){case 30:{const s=D.borrowObject(Vt);s.target=t,s.init(this._armature,this,i),this._constraintTimelines.push(s);break}}else if(this.resetToPose){const i=D.borrowObject(Vt);i.target=t,i.init(this._armature,this,null),this._constraintTimelines.push(i),this._poseTimelines.push(i)}}}_updateBoneAndSlotTimelines(){{const t={};for(const e of this._boneTimelines){const i=e.target.target.name;i in t||(t[i]=[]),t[i].push(e)}for(const e of this._boneBlendTimelines){const i=e.target.target.name;i in t||(t[i]=[]),t[i].push(e)}for(const e of this._armature.getBones()){const i=e.name;if(this.containsBoneMask(i))if(i in t)delete t[i];else{const s=this._animationData.getBoneTimelines(i),a=this._armature.animation.getBlendState(W.BONE_TRANSFORM,e.name,e);if(s!==null)for(const r of s)switch(r.type){case 10:{const n=D.borrowObject(Pt);n.target=a,n.init(this._armature,this,r),this._boneTimelines.push(n);break}case 11:{const n=D.borrowObject(de);n.target=a,n.init(this._armature,this,r),this._boneTimelines.push(n);break}case 12:{const n=D.borrowObject(pe);n.target=a,n.init(this._armature,this,r),this._boneTimelines.push(n);break}case 13:{const n=D.borrowObject(ge);n.target=a,n.init(this._armature,this,r),this._boneTimelines.push(n);break}case 60:{const n=D.borrowObject(vt);n.target=this._armature.animation.getBlendState(W.BONE_ALPHA,e.name,e),n.init(this._armature,this,r),this._boneBlendTimelines.push(n);break}case 50:{const n=D.borrowObject(Nt);n.target=this._armature.animation.getBlendState(W.SURFACE,e.name,e),n.init(this._armature,this,r),this._boneBlendTimelines.push(n);break}}else if(this.resetToPose)if(e._boneData.type===0){const r=D.borrowObject(Pt);r.target=a,r.init(this._armature,this,null),this._boneTimelines.push(r),this._poseTimelines.push(r)}else{const r=D.borrowObject(Nt);r.target=this._armature.animation.getBlendState(W.SURFACE,e.name,e),r.init(this._armature,this,null),this._boneBlendTimelines.push(r),this._poseTimelines.push(r)}}}for(let e in t)for(const i of t[e]){let s=this._boneTimelines.indexOf(i);s>=0&&(this._boneTimelines.splice(s,1),i.returnToPool()),s=this._boneBlendTimelines.indexOf(i),s>=0&&(this._boneBlendTimelines.splice(s,1),i.returnToPool())}}{const t={},e=[];for(const i of this._slotTimelines){const s=i.target.name;s in t||(t[s]=[]),t[s].push(i)}for(const i of this._slotBlendTimelines){const s=i.target.target.name;s in t||(t[s]=[]),t[s].push(i)}for(const i of this._armature.getSlots()){const s=i.parent.name;if(!this.containsBoneMask(s))continue;const a=i.name;if(a in t)delete t[a];else{let r=!1,n=!1;e.length=0;const o=this._animationData.getSlotTimelines(a);if(o!==null)for(const h of o)switch(h.type){case 20:{const _=D.borrowObject(Rt);_.target=i,_.init(this._armature,this,h),this._slotTimelines.push(_),r=!0;break}case 23:{const _=D.borrowObject(ye);_.target=this._armature.animation.getBlendState(W.SLOT_Z_INDEX,i.name,i),_.init(this._armature,this,h),this._slotBlendTimelines.push(_);break}case 21:{const _=D.borrowObject(kt);_.target=i,_.init(this._armature,this,h),this._slotTimelines.push(_),n=!0;break}case 22:{const _=this._animationData.parent.parent,u=_.timelineArray,m=this._animationData.frameIntOffset+u[h.offset+3];let p=_.frameIntArray[m+0];p<0&&(p+=65536);for(let f=0,y=i.displayFrameCount;f<y;++f){const T=i.getDisplayFrameAt(f),d=T.getGeometryData();if(d!==null&&d.offset===p){const c=D.borrowObject(Lt);c.target=this._armature.animation.getBlendState(W.SLOT_DEFORM,T.rawDisplayData.name,i),c.displayFrame=T,c.init(this._armature,this,h),this._slotBlendTimelines.push(c),T.updateDeformVertices(),e.push(p);break}}break}case 24:{const _=D.borrowObject(vt);_.target=this._armature.animation.getBlendState(W.SLOT_ALPHA,i.name,i),_.init(this._armature,this,h),this._slotBlendTimelines.push(_);break}}if(this.resetToPose){if(!r){const h=D.borrowObject(Rt);h.target=i,h.init(this._armature,this,null),this._slotTimelines.push(h),this._poseTimelines.push(h)}if(!n){const h=D.borrowObject(kt);h.target=i,h.init(this._armature,this,null),this._slotTimelines.push(h),this._poseTimelines.push(h)}for(let h=0,_=i.displayFrameCount;h<_;++h){const u=i.getDisplayFrameAt(h);if(u.deformVertices.length===0)continue;const m=u.getGeometryData();if(m!==null&&e.indexOf(m.offset)<0){const p=D.borrowObject(Lt);p.displayFrame=u,p.target=this._armature.animation.getBlendState(W.SLOT_DEFORM,i.name,i),p.init(this._armature,this,null),this._slotBlendTimelines.push(p),this._poseTimelines.push(p)}}}}}for(let i in t)for(const s of t[i]){let a=this._slotTimelines.indexOf(s);a>=0&&(this._slotTimelines.splice(a,1),s.returnToPool()),a=this._slotBlendTimelines.indexOf(s),a>=0&&(this._slotBlendTimelines.splice(a,1),s.returnToPool())}}}_advanceFadeTime(t){const e=this._fadeState>0;if(this._subFadeState<0&&(this._subFadeState=0,this._parent===null&&this.actionEnabled)){const i=e?P.FADE_OUT:P.FADE_IN;if(this._armature.eventDispatcher.hasDBEventListener(i)){const s=D.borrowObject(P);s.type=i,s.armature=this._armature,s.animationState=this,this._armature._dragonBones.bufferEvent(s)}}if(t<0&&(t=-t),this._fadeTime+=t,this._fadeTime>=this.fadeTotalTime?(this._subFadeState=1,this._fadeProgress=e?0:1):this._fadeTime>0?this._fadeProgress=e?1-this._fadeTime/this.fadeTotalTime:this._fadeTime/this.fadeTotalTime:this._fadeProgress=e?1:0,this._subFadeState>0&&(e||(this._playheadState|=1,this._fadeState=0),this._parent===null&&this.actionEnabled)){const i=e?P.FADE_OUT_COMPLETE:P.FADE_IN_COMPLETE;if(this._armature.eventDispatcher.hasDBEventListener(i)){const s=D.borrowObject(P);s.type=i,s.armature=this._armature,s.animationState=this,this._armature._dragonBones.bufferEvent(s)}}}init(t,e,i){if(this._armature===null){if(this._armature=t,this._animationData=e,this.resetToPose=i.resetToPose,this.additive=i.additive,this.displayControl=i.displayControl,this.actionEnabled=i.actionEnabled,this.blendType=e.blendType,this.layer=i.layer,this.playTimes=i.playTimes,this.timeScale=i.timeScale,this.fadeTotalTime=i.fadeInTime,this.autoFadeOutTime=i.autoFadeOutTime,this.name=i.name.length>0?i.name:i.animation,this.group=i.group,this._weight=i.weight,i.pauseFadeIn?this._playheadState=2:this._playheadState=3,i.duration<0?(this._position=0,this._duration=this._animationData.duration,i.position!==0?this.timeScale>=0?this._time=i.position:this._time=i.position-this._duration:this._time=0):(this._position=i.position,this._duration=i.duration,this._time=0),this.timeScale<0&&this._time===0&&(this._time=-1e-6),this.fadeTotalTime<=0&&(this._fadeProgress=.999999),i.boneMask.length>0){this._boneMask.length=i.boneMask.length;for(let s=0,a=this._boneMask.length;s<a;++s)this._boneMask[s]=i.boneMask[s]}this._actionTimeline=D.borrowObject(fe),this._actionTimeline.init(this._armature,this,this._animationData.actionTimeline),this._actionTimeline.currentTime=this._time,this._actionTimeline.currentTime<0&&(this._actionTimeline.currentTime=this._duration-this._actionTimeline.currentTime),this._animationData.zOrderTimeline!==null&&(this._zOrderTimeline=D.borrowObject(ce),this._zOrderTimeline.init(this._armature,this,this._animationData.zOrderTimeline))}}advanceTime(t,e){this._fadeState===0&&this._subFadeState===0||this._advanceFadeTime(t),this._playheadState===3&&(this.timeScale!==1&&(t*=this.timeScale),this._time+=t),this._timelineDirty!==0&&(this._timelineDirty===2&&this._updateTimelines(),this._timelineDirty=0,this._updateBoneAndSlotTimelines());const i=this._fadeState!==0||this._subFadeState===0,s=this._fadeState===0&&e>0;let a=!0,r=!0,n=this._time;if(this._weightResult=this._weight*this._fadeProgress,this._parent!==null&&(this._weightResult*=this._parent._weightResult),this._actionTimeline.playState<=0&&this._actionTimeline.update(n),this._weight!==0){if(s){const o=2*e;this._actionTimeline.currentTime=Math.floor(this._actionTimeline.currentTime*o)/o}if(this._zOrderTimeline!==null&&this._zOrderTimeline.playState<=0&&this._zOrderTimeline.update(n),s){const o=Math.floor(this._actionTimeline.currentTime*e);this._armature._cacheFrameIndex===o?(a=!1,r=!1):(this._armature._cacheFrameIndex=o,this._animationData.cachedFrames[o]?r=!1:this._animationData.cachedFrames[o]=!0)}if(a){let o=!1,h=null;if(r)for(let _=0,u=this._boneTimelines.length;_<u;++_){const m=this._boneTimelines[_];if(m.playState<=0&&m.update(n),m.target!==h){const p=m.target;if(o=p.update(this),h=p,p.dirty===1){const f=p.target.animationPose;f.x=0,f.y=0,f.rotation=0,f.skew=0,f.scaleX=1,f.scaleY=1}}o&&m.blend(i)}for(let _=0,u=this._boneBlendTimelines.length;_<u;++_){const m=this._boneBlendTimelines[_];m.playState<=0&&m.update(n),m.target.update(this)&&m.blend(i)}if(this.displayControl)for(let _=0,u=this._slotTimelines.length;_<u;++_){const m=this._slotTimelines[_];if(m.playState<=0){const p=m.target.displayController;p!==null&&p!==this.name&&p!==this.group||m.update(n)}}for(let _=0,u=this._slotBlendTimelines.length;_<u;++_){const m=this._slotBlendTimelines[_];if(m.playState<=0){const p=m.target;m.update(n),p.update(this)&&m.blend(i)}}for(let _=0,u=this._constraintTimelines.length;_<u;++_){const m=this._constraintTimelines[_];m.playState<=0&&m.update(n)}if(this._animationTimelines.length>0){let _=100,u=100,m=null,p=null;for(let f=0,y=this._animationTimelines.length;f<y;++f){const T=this._animationTimelines[f];if(T.playState<=0&&T.update(n),this.blendType===1){const d=T.target,c=this.parameterX-d.positionX;c>=0?c<_&&(_=c,m=d):-c<u&&(u=-c,p=d)}}m!==null&&(this._activeChildA!==m&&(this._activeChildA!==null&&(this._activeChildA.weight=0),this._activeChildA=m,this._activeChildA.activeTimeline()),this._activeChildB!==p&&(this._activeChildB!==null&&(this._activeChildB.weight=0),this._activeChildB=p),m.weight=u/(_+u),p&&(p.weight=1-m.weight))}}if(this._fadeState===0){if(this._subFadeState>0&&(this._subFadeState=0,this._poseTimelines.length>0)){for(const o of this._poseTimelines){let h=this._boneTimelines.indexOf(o);h>=0?(this._boneTimelines.splice(h,1),o.returnToPool()):(h=this._boneBlendTimelines.indexOf(o),h>=0?(this._boneBlendTimelines.splice(h,1),o.returnToPool()):(h=this._slotTimelines.indexOf(o),h>=0?(this._slotTimelines.splice(h,1),o.returnToPool()):(h=this._slotBlendTimelines.indexOf(o),h>=0?(this._slotBlendTimelines.splice(h,1),o.returnToPool()):(h=this._constraintTimelines.indexOf(o),h>=0&&(this._constraintTimelines.splice(h,1),o.returnToPool())))))}this._poseTimelines.length=0}this._actionTimeline.playState>0&&this.autoFadeOutTime>=0&&this.fadeOut(this.autoFadeOutTime)}}}play(){this._playheadState=3}stop(){this._playheadState&=1}fadeOut(t,e=!0){if(t<0&&(t=0),e&&(this._playheadState&=2),this._fadeState>0){if(t>this.fadeTotalTime-this._fadeTime)return}else{this._fadeState=1,this._subFadeState=-1,(t<=0||this._fadeProgress<=0)&&(this._fadeProgress=1e-6);for(const i of this._boneTimelines)i.fadeOut();for(const i of this._boneBlendTimelines)i.fadeOut();for(const i of this._slotTimelines)i.fadeOut();for(const i of this._slotBlendTimelines)i.fadeOut();for(const i of this._constraintTimelines)i.fadeOut();for(const i of this._animationTimelines)i.fadeOut(),i.target.fadeOut(999999,!0)}this.displayControl=!1,this.fadeTotalTime=this._fadeProgress>1e-6?t/this._fadeProgress:0,this._fadeTime=this.fadeTotalTime*(1-this._fadeProgress)}containsBoneMask(t){return this._boneMask.length===0||this._boneMask.indexOf(t)>=0}addBoneMask(t,e=!0){const i=this._armature.getBone(t);if(i!==null){if(this._boneMask.indexOf(t)<0&&this._boneMask.push(t),e)for(const s of this._armature.getBones())this._boneMask.indexOf(s.name)<0&&i.contains(s)&&this._boneMask.push(s.name);this._timelineDirty=1}}removeBoneMask(t,e=!0){const i=this._boneMask.indexOf(t);if(i>=0&&this._boneMask.splice(i,1),e){const s=this._armature.getBone(t);if(s!==null){const a=this._armature.getBones();if(this._boneMask.length>0)for(const r of a){const n=this._boneMask.indexOf(r.name);n>=0&&s.contains(r)&&this._boneMask.splice(n,1)}else for(const r of a)r!==s&&(s.contains(r)||this._boneMask.push(r.name))}}this._timelineDirty=1}removeAllBoneMask(){this._boneMask.length=0,this._timelineDirty=1}addState(t,e=null){if(e!==null)for(const i of e)switch(i.type){case 40:{const s=D.borrowObject(Te);if(s.target=t,s.init(this._armature,this,i),this._animationTimelines.push(s),this.blendType!==0){const a=i;t.positionX=a.x,t.positionY=a.y,t.weight=0}t._parent=this,this.resetToPose=!1;break}case 41:{const s=D.borrowObject(Ae);s.target=t,s.init(this._armature,this,i),this._animationTimelines.push(s);break}case 42:{const s=D.borrowObject(be);s.target=t,s.init(this._armature,this,i),this._animationTimelines.push(s);break}}t._parent===null&&(t._parent=this)}activeTimeline(){for(const t of this._slotTimelines)t.dirty=!0,t.currentTime=-1}get isFadeIn(){return this._fadeState<0}get isFadeOut(){return this._fadeState>0}get isFadeComplete(){return this._fadeState===0}get isPlaying(){return!!(2&this._playheadState)&&this._actionTimeline.playState<=0}get isCompleted(){return this._actionTimeline.playState>0}get currentPlayTimes(){return this._actionTimeline.currentPlayTimes}get totalTime(){return this._duration}get currentTime(){return this._actionTimeline.currentTime}set currentTime(t){const e=this._actionTimeline.currentPlayTimes-(this._actionTimeline.playState>0?1:0);if((t<0||this._duration<t)&&(t=t%this._duration+e*this._duration)<0&&(t+=this._duration),this.playTimes>0&&e===this.playTimes-1&&t===this._duration&&this._parent===null&&(t=this._duration-1e-6),this._time!==t){this._time=t,this._actionTimeline.setCurrentTime(this._time),this._zOrderTimeline!==null&&(this._zOrderTimeline.playState=-1);for(const i of this._boneTimelines)i.playState=-1;for(const i of this._slotTimelines)i.playState=-1}}get weight(){return this._weight}set weight(t){if(this._weight!==t){this._weight=t;for(const e of this._boneTimelines)e.dirty=!0;for(const e of this._boneBlendTimelines)e.dirty=!0;for(const e of this._slotBlendTimelines)e.dirty=!0}}get animationData(){return this._animationData}};class W extends D{static toString(){return"[class dragonBones.BlendState]"}_onClear(){this.reset(),this.target=null}update(t){const e=t.layer;let i=t._weightResult;if(this.dirty>0){if(this.leftWeight>0){if(this.layer!==e){if(this.layerWeight>=this.leftWeight)return this.dirty++,this.layer=e,this.leftWeight=0,this.blendWeight=0,!1;this.layer=e,this.leftWeight-=this.layerWeight,this.layerWeight=0}return i*=this.leftWeight,this.dirty++,this.blendWeight=i,this.layerWeight+=this.blendWeight,!0}return!1}return this.dirty++,this.layer=e,this.leftWeight=1,this.blendWeight=i,this.layerWeight=i,!0}reset(){this.dirty=0,this.layer=0,this.leftWeight=0,this.layerWeight=0,this.blendWeight=0}}W.BONE_TRANSFORM="boneTransform",W.BONE_ALPHA="boneAlpha",W.SURFACE="surface",W.SLOT_DEFORM="slotDeform",W.SLOT_ALPHA="slotAlpha",W.SLOT_Z_INDEX="slotZIndex";let xe=class{constructor(t=0){this.time=0,this.timeScale=1,this._animatebles=[],this.time=t}advanceTime(t){if(t===0)return;t*=this.timeScale,this.time+=t;const e=this._animatebles;let i=0,s=0,a=e.length;for(;i<a;++i){const r=e[i];r!==null?(s>0&&(e[i-s]=r,e[i]=null),r.stopped||r.advanceTime(t)):s++}if(s>0){for(a=e.length;i<a;++i){const r=e[i];r!==null?e[i-s]=r:s++}if(s<8)for(let r=0;r<s;r+=1)e.pop();else e.splice(-s)}}contains(t){return this._animatebles.indexOf(t)>=0}add(t){this._animatebles.indexOf(t)<0&&(this._animatebles.push(t),t.clock=this)}remove(t){const e=this._animatebles.indexOf(t);e>=0&&(this._animatebles[e]=null,t.clock=null)}clear(){for(const t of this._animatebles)t!==null&&(t.clock=null)}},q=class{constructor(t){this._clock=new xe,this._events=[],this._objects=[],this._eventManager=null,this._eventManager=t}advanceTime(t){if(this._objects.length>0){for(const e of this._objects)e.returnToPool();this._objects.length=0}if(this._clock.advanceTime(t),this._events.length>0){for(let e=0;e<this._events.length;++e){const i=this._events[e],s=i.armature;s._armatureData!==null&&(s.eventDispatcher.dispatchDBEvent(i.type,i),i.type===P.SOUND_EVENT&&this._eventManager.dispatchDBEvent(i.type,i)),this.bufferObject(i)}this._events.length=0}}bufferEvent(t){this._events.indexOf(t)<0&&this._events.push(t)}bufferObject(t){this._objects.indexOf(t)<0&&this._objects.push(t)}get clock(){return this._clock}get eventManager(){return this._eventManager}};q.VERSION="5.7.000",q.yDown=!0,q.debug=!1,q.debugDraw=!1;let Se=class extends D{constructor(){super(...arguments),this.boneMask=[]}static toString(){return"[class dragonBones.AnimationConfig]"}_onClear(){this.pauseFadeOut=!0,this.fadeOutMode=4,this.fadeOutTweenType=1,this.fadeOutTime=-1,this.actionEnabled=!0,this.additive=!1,this.displayControl=!0,this.pauseFadeIn=!0,this.resetToPose=!0,this.fadeInTweenType=1,this.playTimes=-1,this.layer=0,this.position=0,this.duration=-1,this.timeScale=-100,this.weight=1,this.fadeInTime=-1,this.autoFadeOutTime=-1,this.name="",this.animation="",this.group="",this.boneMask.length=0}clear(){this._onClear()}copyFrom(t){this.pauseFadeOut=t.pauseFadeOut,this.fadeOutMode=t.fadeOutMode,this.autoFadeOutTime=t.autoFadeOutTime,this.fadeOutTweenType=t.fadeOutTweenType,this.actionEnabled=t.actionEnabled,this.additive=t.additive,this.displayControl=t.displayControl,this.pauseFadeIn=t.pauseFadeIn,this.resetToPose=t.resetToPose,this.playTimes=t.playTimes,this.layer=t.layer,this.position=t.position,this.duration=t.duration,this.timeScale=t.timeScale,this.fadeInTime=t.fadeInTime,this.fadeOutTime=t.fadeOutTime,this.fadeInTweenType=t.fadeInTweenType,this.weight=t.weight,this.name=t.name,this.animation=t.animation,this.group=t.group,this.boneMask.length=t.boneMask.length;for(let e=0,i=this.boneMask.length;e<i;++e)this.boneMask[e]=t.boneMask[e]}},Oe=class extends D{constructor(){super(...arguments),this._animationNames=[],this._animationStates=[],this._animations={},this._blendStates={},this._animationConfig=null}static toString(){return"[class dragonBones.Animation]"}_onClear(){for(const t of this._animationStates)t.returnToPool();for(let t in this._animations)delete this._animations[t];for(let t in this._blendStates){const e=this._blendStates[t];for(let i in e)e[i].returnToPool();delete this._blendStates[t]}this._animationConfig!==null&&this._animationConfig.returnToPool(),this.timeScale=1,this._animationDirty=!1,this._inheritTimeScale=1,this._animationNames.length=0,this._animationStates.length=0,this._armature=null,this._animationConfig=null,this._lastAnimationState=null}_fadeOut(t){switch(t.fadeOutMode){case 1:for(const e of this._animationStates)e._parent===null&&e.layer===t.layer&&e.fadeOut(t.fadeOutTime,t.pauseFadeOut);break;case 2:for(const e of this._animationStates)e._parent===null&&e.group===t.group&&e.fadeOut(t.fadeOutTime,t.pauseFadeOut);break;case 3:for(const e of this._animationStates)e._parent===null&&e.layer===t.layer&&e.group===t.group&&e.fadeOut(t.fadeOutTime,t.pauseFadeOut);break;case 4:for(const e of this._animationStates)e._parent===null&&e.fadeOut(t.fadeOutTime,t.pauseFadeOut)}}init(t){this._armature===null&&(this._armature=t,this._animationConfig=D.borrowObject(Se))}advanceTime(t){t<0&&(t=-t),this._armature.inheritAnimation&&this._armature._parent!==null?this._inheritTimeScale=this._armature._parent._armature.animation._inheritTimeScale*this.timeScale:this._inheritTimeScale=this.timeScale,this._inheritTimeScale!==1&&(t*=this._inheritTimeScale);for(let i in this._blendStates){const s=this._blendStates[i];for(let a in s)s[a].reset()}const e=this._animationStates.length;if(e===1){const i=this._animationStates[0];if(i._fadeState>0&&i._subFadeState>0)this._armature._dragonBones.bufferObject(i),this._animationStates.length=0,this._lastAnimationState=null;else{const s=i.animationData,a=s.cacheFrameRate;if(this._animationDirty&&a>0){this._animationDirty=!1;for(const r of this._armature.getBones())r._cachedFrameIndices=s.getBoneCachedFrameIndices(r.name);for(const r of this._armature.getSlots()){if(r.displayFrameCount>0){const n=r.getDisplayFrameAt(0).rawDisplayData;if(n!==null&&n.parent===this._armature.armatureData.defaultSkin){r._cachedFrameIndices=s.getSlotCachedFrameIndices(r.name);continue}}r._cachedFrameIndices=null}}i.advanceTime(t,a)}}else if(e>1){for(let i=0,s=0;i<e;++i){const a=this._animationStates[i];a._fadeState>0&&a._subFadeState>0?(s++,this._armature._dragonBones.bufferObject(a),this._animationDirty=!0,this._lastAnimationState===a&&(this._lastAnimationState=null)):(s>0&&(this._animationStates[i-s]=a),a.advanceTime(t,0)),i===e-1&&s>0&&(this._animationStates.length-=s,this._lastAnimationState===null&&this._animationStates.length>0&&(this._lastAnimationState=this._animationStates[this._animationStates.length-1]))}this._armature._cacheFrameIndex=-1}else this._armature._cacheFrameIndex=-1}reset(){for(const t of this._animationStates)t.returnToPool();this._animationDirty=!1,this._animationConfig.clear(),this._animationStates.length=0,this._lastAnimationState=null}stop(t=null){if(t!==null){const e=this.getState(t);e!==null&&e.stop()}else for(const e of this._animationStates)e.stop()}playConfig(t){const e=t.animation;if(!(e in this._animations))return console.warn(`Non-existent animation.
`,"DragonBones name: "+this._armature.armatureData.parent.name,"Armature name: "+this._armature.name,"Animation name: "+e),null;const i=this._animations[e];if(t.fadeOutMode===5){for(const a of this._animationStates)if(a._fadeState<1&&a.layer===t.layer&&a.animationData===i)return a}this._animationStates.length===0?t.fadeInTime=0:t.fadeInTime<0&&(t.fadeInTime=i.fadeInTime),t.fadeOutTime<0&&(t.fadeOutTime=t.fadeInTime),t.timeScale<=-100&&(t.timeScale=1/i.scale),i.frameCount>0?(t.position<0?(t.position%=i.duration,t.position=i.duration-t.position):t.position===i.duration?t.position-=1e-6:t.position>i.duration&&(t.position%=i.duration),t.duration>0&&t.position+t.duration>i.duration&&(t.duration=i.duration-t.position),t.playTimes<0&&(t.playTimes=i.playTimes)):(t.playTimes=1,t.position=0,t.duration>0&&(t.duration=0)),t.duration===0&&(t.duration=-1),this._fadeOut(t);const s=D.borrowObject(De);if(s.init(this._armature,i,t),this._animationDirty=!0,this._armature._cacheFrameIndex=-1,this._animationStates.length>0){let a=!1;for(let r=0,n=this._animationStates.length;r<n;++r){if(s.layer>this._animationStates[r].layer){a=!0,this._animationStates.splice(r,0,s);break}if(r!==n-1&&s.layer>this._animationStates[r+1].layer){a=!0,this._animationStates.splice(r+1,0,s);break}}a||this._animationStates.push(s)}else this._animationStates.push(s);for(const a of this._armature.getSlots()){const r=a.childArmature;r!==null&&r.inheritAnimation&&r.animation.hasAnimation(e)&&r.animation.getState(e)===null&&r.animation.fadeIn(e)}for(let a in i.animationTimelines){const r=this.fadeIn(a,0,1,s.layer,"",5);if(r===null)continue;const n=i.animationTimelines[a];r.actionEnabled=!1,r.resetToPose=!1,r.stop(),s.addState(r,n);const o=this._animationStates.indexOf(s),h=this._animationStates.indexOf(r);h<o&&(this._animationStates.splice(o,1),this._animationStates.splice(h,0,s))}return this._lastAnimationState=s,s}play(t=null,e=-1){if(this._animationConfig.clear(),this._animationConfig.resetToPose=!0,this._animationConfig.playTimes=e,this._animationConfig.fadeInTime=0,this._animationConfig.animation=t!==null?t:"",t!==null&&t.length>0)this.playConfig(this._animationConfig);else if(this._lastAnimationState===null){const i=this._armature.armatureData.defaultAnimation;i!==null&&(this._animationConfig.animation=i.name,this.playConfig(this._animationConfig))}else this._lastAnimationState.isPlaying||this._lastAnimationState.isCompleted?(this._animationConfig.animation=this._lastAnimationState.name,this.playConfig(this._animationConfig)):this._lastAnimationState.play();return this._lastAnimationState}fadeIn(t,e=-1,i=-1,s=0,a=null,r=3){return this._animationConfig.clear(),this._animationConfig.fadeOutMode=r,this._animationConfig.playTimes=i,this._animationConfig.layer=s,this._animationConfig.fadeInTime=e,this._animationConfig.animation=t,this._animationConfig.group=a!==null?a:"",this.playConfig(this._animationConfig)}gotoAndPlayByTime(t,e=0,i=-1){return this._animationConfig.clear(),this._animationConfig.resetToPose=!0,this._animationConfig.playTimes=i,this._animationConfig.position=e,this._animationConfig.fadeInTime=0,this._animationConfig.animation=t,this.playConfig(this._animationConfig)}gotoAndPlayByFrame(t,e=0,i=-1){this._animationConfig.clear(),this._animationConfig.resetToPose=!0,this._animationConfig.playTimes=i,this._animationConfig.fadeInTime=0,this._animationConfig.animation=t;const s=t in this._animations?this._animations[t]:null;return s!==null&&(this._animationConfig.position=s.frameCount>0?s.duration*e/s.frameCount:0),this.playConfig(this._animationConfig)}gotoAndPlayByProgress(t,e=0,i=-1){this._animationConfig.clear(),this._animationConfig.resetToPose=!0,this._animationConfig.playTimes=i,this._animationConfig.fadeInTime=0,this._animationConfig.animation=t;const s=t in this._animations?this._animations[t]:null;return s!==null&&(this._animationConfig.position=s.duration*(e>0?e:0)),this.playConfig(this._animationConfig)}gotoAndStopByTime(t,e=0){const i=this.gotoAndPlayByTime(t,e,1);return i!==null&&i.stop(),i}gotoAndStopByFrame(t,e=0){const i=this.gotoAndPlayByFrame(t,e,1);return i!==null&&i.stop(),i}gotoAndStopByProgress(t,e=0){const i=this.gotoAndPlayByProgress(t,e,1);return i!==null&&i.stop(),i}getBlendState(t,e,i){t in this._blendStates||(this._blendStates[t]={});const s=this._blendStates[t];return e in s||((s[e]=D.borrowObject(W)).target=i),s[e]}getState(t,e=-1){let i=this._animationStates.length;for(;i--;){const s=this._animationStates[i];if(s.name===t&&(e<0||s.layer===e))return s}return null}hasAnimation(t){return t in this._animations}getStates(){return this._animationStates}get isPlaying(){for(const t of this._animationStates)if(t.isPlaying)return!0;return!1}get isCompleted(){for(const t of this._animationStates)if(!t.isCompleted)return!1;return this._animationStates.length>0}get lastAnimationName(){return this._lastAnimationState!==null?this._lastAnimationState.name:""}get animationNames(){return this._animationNames}get animations(){return this._animations}set animations(t){if(this._animations!==t){this._animationNames.length=0;for(let e in this._animations)delete this._animations[e];for(let e in t)this._animationNames.push(e),this._animations[e]=t[e]}}get animationConfig(){return this._animationConfig.clear(),this._animationConfig}get lastAnimationState(){return this._lastAnimationState}},et=class $t extends D{constructor(){super(...arguments),this.stopped=!1,this._bones=[],this._slots=[],this._constraints=[],this._actions=[],this._animation=null,this._proxy=null,this._replaceTextureAtlasData=null,this._clock=null}static toString(){return"[class dragonBones.Armature]"}static _onSortSlots(t,e){return 1e3*t._zIndex+t._zOrder>1e3*e._zIndex+e._zOrder?1:-1}_onClear(){this._clock!==null&&this._clock.remove(this);for(const t of this._bones)t.returnToPool();for(const t of this._slots)t.returnToPool();for(const t of this._constraints)t.returnToPool();for(const t of this._actions)t.returnToPool();this._animation!==null&&this._animation.returnToPool(),this._proxy!==null&&this._proxy.dbClear(),this._replaceTextureAtlasData!==null&&this._replaceTextureAtlasData.returnToPool(),this.inheritAnimation=!0,this.userData=null,this._lockUpdate=!1,this._slotsDirty=!0,this._zOrderDirty=!1,this._zIndexDirty=!1,this._alphaDirty=!0,this._flipX=!1,this._flipY=!1,this._cacheFrameIndex=-1,this._alpha=1,this._globalAlpha=1,this._bones.length=0,this._slots.length=0,this._constraints.length=0,this._actions.length=0,this._armatureData=null,this._animation=null,this._proxy=null,this._display=null,this._replaceTextureAtlasData=null,this._replacedTexture=null,this._dragonBones=null,this._clock=null,this._parent=null}_sortZOrder(t,e){const i=this._armatureData.sortedSlots,s=t===null;if(this._zOrderDirty||!s){for(let a=0,r=i.length;a<r;++a){const n=s?a:t[e+a];if(n<0||n>=r)continue;const o=i[n],h=this.getSlot(o.name);h!==null&&h._setZOrder(a)}this._slotsDirty=!0,this._zOrderDirty=!s}}_addBone(t){this._bones.indexOf(t)<0&&this._bones.push(t)}_addSlot(t){this._slots.indexOf(t)<0&&this._slots.push(t)}_addConstraint(t){this._constraints.indexOf(t)<0&&this._constraints.push(t)}_bufferAction(t,e){this._actions.indexOf(t)<0&&(e?this._actions.push(t):this._actions.unshift(t))}dispose(){this._armatureData!==null&&(this._lockUpdate=!0,this._dragonBones.bufferObject(this))}init(t,e,i,s){this._armatureData===null&&(this._armatureData=t,this._animation=D.borrowObject(Oe),this._proxy=e,this._display=i,this._dragonBones=s,this._proxy.dbInit(this),this._animation.init(this),this._animation.animations=this._armatureData.animations)}advanceTime(t){if(this._lockUpdate)return;if(this._lockUpdate=!0,this._armatureData===null)return void console.warn("The armature has been disposed.");if(this._armatureData.parent===null)return void console.warn(`The armature data has been disposed.
Please make sure dispose armature before call factory.clear().`);const e=this._cacheFrameIndex;if(this._animation.advanceTime(t),this._slotsDirty||this._zIndexDirty){if(this._slots.sort($t._onSortSlots),this._zIndexDirty)for(let i=0,s=this._slots.length;i<s;++i)this._slots[i]._setZOrder(i);this._slotsDirty=!1,this._zIndexDirty=!1}if(this._alphaDirty){this._alphaDirty=!1,this._globalAlpha=this._alpha*(this._parent!==null?this._parent._globalAlpha:1);for(const i of this._bones)i._updateAlpha();for(const i of this._slots)i._updateAlpha()}if(this._cacheFrameIndex<0||this._cacheFrameIndex!==e){let i=0,s=0;for(i=0,s=this._bones.length;i<s;++i)this._bones[i].update(this._cacheFrameIndex);for(i=0,s=this._slots.length;i<s;++i)this._slots[i].update(this._cacheFrameIndex)}if(this._actions.length>0){for(const i of this._actions){const s=i.actionData;if(s!==null&&s.type===0)if(i.slot!==null){const a=i.slot.childArmature;a!==null&&a.animation.fadeIn(s.name)}else if(i.bone!==null){for(const a of this.getSlots())if(a.parent===i.bone){const r=a.childArmature;r!==null&&r.animation.fadeIn(s.name)}}else this._animation.fadeIn(s.name);i.returnToPool()}this._actions.length=0}if(this.clock==null)for(const i of this._slots){const s=i.childArmature;s===null||s.clock!=null||s.stopped||s.advanceTime(t)}this._lockUpdate=!1,this._proxy.dbUpdate()}invalidUpdate(t=null,e=!1){if(t!==null&&t.length>0){const i=this.getBone(t);if(i!==null&&(i.invalidUpdate(),e))for(const s of this._slots)s.parent===i&&s.invalidUpdate()}else{for(const i of this._bones)i.invalidUpdate();if(e)for(const i of this._slots)i.invalidUpdate()}}containsPoint(t,e){for(const i of this._slots)if(i.containsPoint(t,e))return i;return null}intersectsSegment(t,e,i,s,a=null,r=null,n=null){const o=t===i;let h=0,_=0,u=0,m=0,p=0,f=0,y=0,T=0,d=null,c=null;for(const A of this._slots)if(A.intersectsSegment(t,e,i,s,a,r,n)>0){if(a===null&&r===null){d=A;break}if(a!==null){let b=o?a.y-e:a.x-t;b<0&&(b=-b),(d===null||b<h)&&(h=b,u=a.x,m=a.y,d=A,n&&(y=n.x))}if(r!==null){let b=r.x-t;b<0&&(b=-b),(c===null||b>_)&&(_=b,p=r.x,f=r.y,c=A,n!==null&&(T=n.y))}}return d!==null&&a!==null&&(a.x=u,a.y=m,n!==null&&(n.x=y)),c!==null&&r!==null&&(r.x=p,r.y=f,n!==null&&(n.y=T)),d}getBone(t){for(const e of this._bones)if(e.name===t)return e;return null}getBoneByDisplay(t){const e=this.getSlotByDisplay(t);return e!==null?e.parent:null}getSlot(t){for(const e of this._slots)if(e.name===t)return e;return null}getSlotByDisplay(t){if(t!==null){for(const e of this._slots)if(e.display===t)return e}return null}getBones(){return this._bones}getSlots(){return this._slots}get flipX(){return this._flipX}set flipX(t){this._flipX!==t&&(this._flipX=t,this.invalidUpdate())}get flipY(){return this._flipY}set flipY(t){this._flipY!==t&&(this._flipY=t,this.invalidUpdate())}get cacheFrameRate(){return this._armatureData.cacheFrameRate}set cacheFrameRate(t){if(this._armatureData.cacheFrameRate!==t){this._armatureData.cacheFrames(t);for(const e of this._slots){const i=e.childArmature;i!==null&&(i.cacheFrameRate=t)}}}get name(){return this._armatureData.name}get armatureData(){return this._armatureData}get animation(){return this._animation}get proxy(){return this._proxy}get eventDispatcher(){return this._proxy}get display(){return this._display}get replacedTexture(){return this._replacedTexture}set replacedTexture(t){if(this._replacedTexture!==t){this._replaceTextureAtlasData!==null&&(this._replaceTextureAtlasData.returnToPool(),this._replaceTextureAtlasData=null),this._replacedTexture=t;for(const e of this._slots)e.invalidUpdate(),e.update(-1)}}get clock(){return this._clock}set clock(t){if(this._clock!==t){this._clock!==null&&this._clock.remove(this),this._clock=t,this._clock&&this._clock.add(this);for(const e of this._slots){const i=e.childArmature;i!==null&&(i.clock=this._clock)}}}get parent(){return this._parent}getDisplay(){return this._display}},it=class{constructor(t=1,e=0,i=0,s=1,a=0,r=0){this.a=t,this.b=e,this.c=i,this.d=s,this.tx=a,this.ty=r}toString(){return"[object dragonBones.Matrix] a:"+this.a+" b:"+this.b+" c:"+this.c+" d:"+this.d+" tx:"+this.tx+" ty:"+this.ty}copyFrom(t){return this.a=t.a,this.b=t.b,this.c=t.c,this.d=t.d,this.tx=t.tx,this.ty=t.ty,this}copyFromArray(t,e=0){return this.a=t[e],this.b=t[e+1],this.c=t[e+2],this.d=t[e+3],this.tx=t[e+4],this.ty=t[e+5],this}identity(){return this.a=this.d=1,this.b=this.c=0,this.tx=this.ty=0,this}concat(t){let e=this.a*t.a,i=0,s=0,a=this.d*t.d,r=this.tx*t.a+t.tx,n=this.ty*t.d+t.ty;return this.b===0&&this.c===0||(e+=this.b*t.c,i+=this.b*t.d,s+=this.c*t.a,a+=this.c*t.b),t.b===0&&t.c===0||(i+=this.a*t.b,s+=this.d*t.c,r+=this.ty*t.c,n+=this.tx*t.b),this.a=e,this.b=i,this.c=s,this.d=a,this.tx=r,this.ty=n,this}invert(){let t=this.a,e=this.b,i=this.c,s=this.d;const a=this.tx,r=this.ty;if(e===0&&i===0)return this.b=this.c=0,t===0||s===0?this.a=this.b=this.tx=this.ty=0:(t=this.a=1/t,s=this.d=1/s,this.tx=-t*a,this.ty=-s*r),this;let n=t*s-e*i;if(n===0)return this.a=this.d=1,this.b=this.c=0,this.tx=this.ty=0,this;n=1/n;let o=this.a=s*n;return e=this.b=-e*n,i=this.c=-i*n,s=this.d=t*n,this.tx=-(o*a+i*r),this.ty=-(e*a+s*r),this}transformPoint(t,e,i,s=!1){i.x=this.a*t+this.c*e,i.y=this.b*t+this.d*e,s||(i.x+=this.tx,i.y+=this.ty)}transformRectangle(t,e=!1){const i=this.a,s=this.b,a=this.c,r=this.d,n=e?0:this.tx,o=e?0:this.ty,h=t.x,_=t.y,u=h+t.width,m=_+t.height;let p=i*h+a*_+n,f=s*h+r*_+o,y=i*u+a*_+n,T=s*u+r*_+o,d=i*u+a*m+n,c=s*u+r*m+o,A=i*h+a*m+n,b=s*h+r*m+o,E=0;p>y&&(E=p,p=y,y=E),d>A&&(E=d,d=A,A=E),t.x=Math.floor(p<d?p:d),t.width=Math.ceil((y>A?y:A)-t.x),f>T&&(E=f,f=T,T=E),c>b&&(E=c,c=b,b=E),t.y=Math.floor(f<c?f:c),t.height=Math.ceil((T>b?T:b)-t.y)}},at=class extends D{constructor(){super(...arguments),this.globalTransformMatrix=new it,this.global=new F,this.offset=new F}_onClear(){this.globalTransformMatrix.identity(),this.global.identity(),this.offset.identity(),this.origin=null,this.userData=null,this._globalDirty=!1,this._alpha=1,this._globalAlpha=1,this._armature=null}updateGlobalTransform(){this._globalDirty&&(this._globalDirty=!1,this.global.fromMatrix(this.globalTransformMatrix))}get armature(){return this._armature}};at._helpMatrix=new it,at._helpTransform=new F,at._helpPoint=new ft;let Kt=class extends at{constructor(){super(...arguments),this.animationPose=new F}static toString(){return"[class dragonBones.Bone]"}_onClear(){super._onClear(),this.offsetMode=1,this.animationPose.identity(),this._transformDirty=!1,this._childrenTransformDirty=!1,this._localDirty=!0,this._hasConstraint=!1,this._visible=!0,this._cachedFrameIndex=-1,this._boneData=null,this._parent=null,this._cachedFrameIndices=null}_updateGlobalTransformMatrix(t){const e=this._boneData,i=this.global,s=this.globalTransformMatrix,a=this.origin,r=this.offset,n=this.animationPose,o=this._parent,h=this._armature.flipX,_=this._armature.flipY===q.yDown;let u=o!==null,m=0;if(this.offsetMode===1?a!==null?(i.x=a.x+r.x+n.x,i.scaleX=a.scaleX*r.scaleX*n.scaleX,i.scaleY=a.scaleY*r.scaleY*n.scaleY,q.yDown?(i.y=a.y+r.y+n.y,i.skew=a.skew+r.skew+n.skew,i.rotation=a.rotation+r.rotation+n.rotation):(i.y=a.y-r.y+n.y,i.skew=a.skew-r.skew+n.skew,i.rotation=a.rotation-r.rotation+n.rotation)):(i.copyFrom(r),q.yDown||(i.y=-i.y,i.skew=-i.skew,i.rotation=-i.rotation),i.add(n)):this.offsetMode===0?a!==null?i.copyFrom(a).add(n):i.copyFrom(n):(u=!1,i.copyFrom(r),q.yDown||(i.y=-i.y,i.skew=-i.skew,i.rotation=-i.rotation)),u){const p=o._boneData.type===1,f=p?o._bone:null,y=p?o._getGlobalTransformMatrix(i.x,i.y):o.globalTransformMatrix;if(!e.inheritScale||p&&f===null){if(e.inheritTranslation){const T=i.x,d=i.y;i.x=y.a*T+y.c*d+y.tx,i.y=y.b*T+y.d*d+y.ty}else h&&(i.x=-i.x),_&&(i.y=-i.y);e.inheritRotation?(o.updateGlobalTransform(),m=o.global.scaleX<0?i.rotation+o.global.rotation+Math.PI:i.rotation+o.global.rotation,y.a*y.d-y.b*y.c<0&&(m-=2*i.rotation,(h!==_||e.inheritReflection)&&(i.skew+=Math.PI),q.yDown||(i.skew=-i.skew)),i.rotation=m):(h||_)&&(h&&_?m=i.rotation+Math.PI:(m=h?Math.PI-i.rotation:-i.rotation,i.skew+=Math.PI),i.rotation=m),i.toMatrix(s)}else p?(e.inheritRotation&&(i.rotation+=o.global.rotation),f.updateGlobalTransform(),i.scaleX*=f.global.scaleX,i.scaleY*=f.global.scaleY,y.transformPoint(i.x,i.y,i),i.toMatrix(s),e.inheritTranslation?(i.x=s.tx,i.y=s.ty):(s.tx=i.x,s.ty=i.y)):(e.inheritRotation||(o.updateGlobalTransform(),m=h&&_?i.rotation-(o.global.rotation+Math.PI):h?i.rotation+o.global.rotation+Math.PI:_?i.rotation+o.global.rotation:i.rotation-o.global.rotation,i.rotation=m),i.toMatrix(s),s.concat(y),e.inheritTranslation?(i.x=s.tx,i.y=s.ty):(s.tx=i.x,s.ty=i.y),t?i.fromMatrix(s):this._globalDirty=!0)}else(h||_)&&(h&&(i.x=-i.x),_&&(i.y=-i.y),h&&_?m=i.rotation+Math.PI:(m=h?Math.PI-i.rotation:-i.rotation,i.skew+=Math.PI),i.rotation=m),i.toMatrix(s)}_updateAlpha(){this._parent!==null?this._globalAlpha=this._alpha*this._parent._globalAlpha:this._globalAlpha=this._alpha*this._armature._globalAlpha}init(t,e){this._boneData===null&&(this._boneData=t,this._armature=e,this._alpha=this._boneData.alpha,this._boneData.parent!==null&&(this._parent=this._armature.getBone(this._boneData.parent.name)),this._armature._addBone(this),this.origin=this._boneData.transform)}update(t){if(t>=0&&this._cachedFrameIndices!==null){const e=this._cachedFrameIndices[t];if(e>=0&&this._cachedFrameIndex===e)this._transformDirty=!1;else if(e>=0)this._transformDirty=!0,this._cachedFrameIndex=e;else{if(this._hasConstraint)for(const i of this._armature._constraints)i._root===this&&i.update();this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty?(this._transformDirty=!0,this._cachedFrameIndex=-1):this._cachedFrameIndex>=0?(this._transformDirty=!1,this._cachedFrameIndices[t]=this._cachedFrameIndex):(this._transformDirty=!0,this._cachedFrameIndex=-1)}}else{if(this._hasConstraint)for(const e of this._armature._constraints)e._root===this&&e.update();(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty)&&(t=-1,this._transformDirty=!0,this._cachedFrameIndex=-1)}if(this._transformDirty)if(this._transformDirty=!1,this._childrenTransformDirty=!0,this._cachedFrameIndex<0){const e=t>=0;this._localDirty&&this._updateGlobalTransformMatrix(e),e&&this._cachedFrameIndices!==null&&(this._cachedFrameIndex=this._cachedFrameIndices[t]=this._armature._armatureData.setCacheFrame(this.globalTransformMatrix,this.global))}else this._armature._armatureData.getCacheFrame(this.globalTransformMatrix,this.global,this._cachedFrameIndex);else this._childrenTransformDirty&&(this._childrenTransformDirty=!1);this._localDirty=!0}updateByConstraint(){this._localDirty&&(this._localDirty=!1,(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty)&&this._updateGlobalTransformMatrix(!0),this._transformDirty=!0)}invalidUpdate(){this._transformDirty=!0}contains(t){if(t===this)return!1;let e=t;for(;e!==this&&e!==null;)e=e.parent;return e===this}get boneData(){return this._boneData}get visible(){return this._visible}set visible(t){if(this._visible!==t){this._visible=t;for(const e of this._armature.getSlots())e.parent===this&&e._updateVisible()}}get name(){return this._boneData.name}get parent(){return this._parent}},rt=class extends D{_onClear(){this._armature=null,this._target=null,this._root=null,this._bone=null}get name(){return this._constraintData.name}};rt._helpMatrix=new it,rt._helpTransform=new F,rt._helpPoint=new ft;let Yt=class extends rt{static toString(){return"[class dragonBones.IKConstraint]"}_onClear(){super._onClear(),this._bendPositive=!1,this._weight=1,this._constraintData=null}_computeA(){const t=this._target.global,e=this._root.global,i=this._root.globalTransformMatrix;let s=Math.atan2(t.y-e.y,t.x-e.x);e.scaleX<0&&(s+=Math.PI),e.rotation+=F.normalizeRadian(s-e.rotation)*this._weight,e.toMatrix(i)}_computeB(){const t=this._bone._boneData.length,e=this._root,i=this._target.global,s=e.global,a=this._bone.global,r=this._bone.globalTransformMatrix,n=r.a*t,o=r.b*t,h=n*n+o*o,_=Math.sqrt(h);let u=a.x-s.x,m=a.y-s.y;const p=u*u+m*m,f=Math.sqrt(p),y=a.rotation,T=s.rotation,d=Math.atan2(m,u);u=i.x-s.x,m=i.y-s.y;const c=u*u+m*m,A=Math.sqrt(c);let b=0;if(_+f<=A||A+_<=f||A+f<=_)b=Math.atan2(i.y-s.y,i.x-s.x),_+f<=A||f<_&&(b+=Math.PI);else{const x=(p-h+c)/(2*c),I=Math.sqrt(p-x*x*c)/A,C=s.x+u*x,k=s.y+m*x,R=-m*I,N=u*I;let w=!1;const v=e.parent;if(v!==null){const U=v.globalTransformMatrix;w=U.a*U.d-U.b*U.c<0}w!==this._bendPositive?(a.x=C-R,a.y=k-N):(a.x=C+R,a.y=k+N),b=Math.atan2(a.y-s.y,a.x-s.x)}const E=F.normalizeRadian(b-d);s.rotation=T+E*this._weight,s.toMatrix(e.globalTransformMatrix);const O=d+E*this._weight;a.x=s.x+Math.cos(O)*f,a.y=s.y+Math.sin(O)*f;let S=Math.atan2(i.y-a.y,i.x-a.x);a.scaleX<0&&(S+=Math.PI),a.rotation=s.rotation+y-T+F.normalizeRadian(S-E-y)*this._weight,a.toMatrix(r)}init(t,e){if(this._constraintData===null){this._constraintData=t,this._armature=e,this._target=this._armature.getBone(this._constraintData.target.name),this._root=this._armature.getBone(this._constraintData.root.name),this._bone=this._constraintData.bone!==null?this._armature.getBone(this._constraintData.bone.name):null;{const i=this._constraintData;this._bendPositive=i.bendPositive,this._weight=i.weight}this._root._hasConstraint=!0}}update(){this._root.updateByConstraint(),this._bone!==null?(this._bone.updateByConstraint(),this._computeB()):this._computeA()}invalidUpdate(){this._root.invalidUpdate(),this._bone!==null&&this._bone.invalidUpdate()}},Me=class extends rt{constructor(){super(...arguments),this._bones=[],this._spaces=[],this._positions=[],this._curves=[],this._boneLengths=[],this._pathGlobalVertices=[],this._segments=[10]}static toString(){return"[class dragonBones.PathConstraint]"}_onClear(){super._onClear(),this.dirty=!1,this.pathOffset=0,this.position=0,this.spacing=0,this.rotateOffset=0,this.rotateMix=1,this.translateMix=1,this._pathSlot=null,this._bones.length=0,this._spaces.length=0,this._positions.length=0,this._curves.length=0,this._boneLengths.length=0,this._pathGlobalVertices.length=0}_updatePathVertices(t){const e=this._armature,i=e.armatureData.parent,s=e.armatureData.scale,a=i.intArray,r=i.floatArray,n=t.offset,o=a[n+0],h=a[n+2];this._pathGlobalVertices.length=2*o;const _=t.weight;if(_===null){const T=this._pathSlot.parent;T.updateByConstraint();const d=T.globalTransformMatrix;for(let c=0,A=h;c<o;c+=2){const b=r[A++]*s,E=r[A++]*s,O=d.a*b+d.c*E+d.tx,S=d.b*b+d.d*E+d.ty;this._pathGlobalVertices[c]=O,this._pathGlobalVertices[c+1]=S}return}const u=this._pathSlot._geometryBones,m=_.bones.length,p=_.offset;let f=a[p+1],y=p+2+m;for(let T=0,d=0;T<o;T++){let c=0,A=0;for(let b=0,E=a[y++];b<E;b++){const O=u[a[y++]];if(O===null)continue;O.updateByConstraint();const S=O.globalTransformMatrix,x=r[f++],I=r[f++]*s,C=r[f++]*s;c+=(S.a*I+S.c*C+S.tx)*x,A+=(S.b*I+S.d*C+S.ty)*x}this._pathGlobalVertices[d++]=c,this._pathGlobalVertices[d++]=A}}_computeVertices(t,e,i,s){for(let a=i,r=t;a<e;a+=2)s[a]=this._pathGlobalVertices[r++],s[a+1]=this._pathGlobalVertices[r++]}_computeBezierCurve(t,e,i,s,a){const r=this._armature.armatureData.parent.intArray[t.geometry.offset+0],n=this._positions,o=this._spaces,h=t.closed,_=Array();let u=2*r,m=u/6,p=-1,f=this.position;n.length=3*e+2;let y=0;if(!t.constantSpeed){const j=t.curveLengths;if(m-=h?1:2,y=j[m],s&&(f*=y),a)for(let Y=0;Y<e;Y++)o[Y]*=y;_.length=8;for(let Y=0,$=0,z=0;Y<e;Y++,$+=3){if(f+=o[Y],h)f%=y,f<0&&(f+=y),z=0;else if(f<0||f>y)continue;let X=0;for(;;z++){const L=j[z];if(!(f>L)){if(z===0)X=f/L;else{const Q=j[z-1];X=(f-Q)/(L-Q)}break}}z!==p&&(p=z,h&&z===m?(this._computeVertices(u-4,4,0,_),this._computeVertices(0,4,4,_)):this._computeVertices(6*z+2,8,0,_)),this.addCurvePosition(X,_[0],_[1],_[2],_[3],_[4],_[5],_[6],_[7],n,$,i)}return}h?(u+=2,_.length=r,this._computeVertices(2,u-4,0,_),this._computeVertices(0,2,u-4,_),_[u-2]=_[0],_[u-1]=_[1]):(m--,u-=4,_.length=u,this._computeVertices(2,u,0,_));let T=new Array(m);y=0;let d,c,A,b,E,O,S,x,I=_[0],C=_[1],k=0,R=0,N=0,w=0,v=0,U=0;for(let j=0,Y=2;j<m;j++,Y+=6)k=_[Y],R=_[Y+1],N=_[Y+2],w=_[Y+3],v=_[Y+4],U=_[Y+5],d=.1875*(I-2*k+N),c=.1875*(C-2*R+w),A=.09375*(3*(k-N)-I+v),b=.09375*(3*(R-w)-C+U),E=2*d+A,O=2*c+b,S=.75*(k-I)+d+.16666667*A,x=.75*(R-C)+c+.16666667*b,y+=Math.sqrt(S*S+x*x),S+=E,x+=O,E+=A,O+=b,y+=Math.sqrt(S*S+x*x),S+=E,x+=O,y+=Math.sqrt(S*S+x*x),S+=E+A,x+=O+b,y+=Math.sqrt(S*S+x*x),T[j]=y,I=v,C=U;if(s&&(f*=y),a)for(let j=0;j<e;j++)o[j]*=y;let Z=this._segments,H=0;for(let j=0,Y=0,$=0,z=0;j<e;j++,Y+=3){f+=o[j];let X=f;if(h)X%=y,X<0&&(X+=y),$=0;else if(X<0||X>y)continue;for(;;$++){const L=T[$];if(!(X>L)){if($===0)X/=L;else{const Q=T[$-1];X=(X-Q)/(L-Q)}break}}if($!==p){p=$;let L=6*$;for(I=_[L],C=_[L+1],k=_[L+2],R=_[L+3],N=_[L+4],w=_[L+5],v=_[L+6],U=_[L+7],d=.03*(I-2*k+N),c=.03*(C-2*R+w),A=.006*(3*(k-N)-I+v),b=.006*(3*(R-w)-C+U),E=2*d+A,O=2*c+b,S=.3*(k-I)+d+.16666667*A,x=.3*(R-C)+c+.16666667*b,H=Math.sqrt(S*S+x*x),Z[0]=H,L=1;L<8;L++)S+=E,x+=O,E+=A,O+=b,H+=Math.sqrt(S*S+x*x),Z[L]=H;S+=E,x+=O,H+=Math.sqrt(S*S+x*x),Z[8]=H,S+=E+A,x+=O+b,H+=Math.sqrt(S*S+x*x),Z[9]=H,z=0}for(X*=H;;z++){const L=Z[z];if(!(X>L)){if(z===0)X/=L;else{const Q=Z[z-1];X=z+(X-Q)/(L-Q)}break}}this.addCurvePosition(.1*X,I,C,k,R,N,w,v,U,n,Y,i)}}addCurvePosition(t,e,i,s,a,r,n,o,h,_,u,m){if(t===0)return _[u]=e,_[u+1]=i,void(_[u+2]=0);if(t===1)return _[u]=o,_[u+1]=h,void(_[u+2]=0);const p=1-t,f=p*p,y=t*t,T=f*p,d=f*t*3,c=p*y*3,A=t*y,b=T*e+d*s+c*r+A*o,E=T*i+d*a+c*n+A*h;_[u]=b,_[u+1]=E,_[u+2]=m?Math.atan2(E-(T*i+d*a+c*n),b-(T*e+d*s+c*r)):0}init(t,e){this._constraintData=t,this._armature=e;let i=t;this.pathOffset=i.pathDisplayData.geometry.offset,this.position=i.position,this.spacing=i.spacing,this.rotateOffset=i.rotateOffset,this.rotateMix=i.rotateMix,this.translateMix=i.translateMix,this._root=this._armature.getBone(i.root.name),this._target=this._armature.getBone(i.target.name),this._pathSlot=this._armature.getSlot(i.pathSlot.name);for(let s=0,a=i.bones.length;s<a;s++){const r=this._armature.getBone(i.bones[s].name);r!==null&&this._bones.push(r)}i.rotateMode===2&&(this._boneLengths.length=this._bones.length),this._root._hasConstraint=!0}update(){const t=this._pathSlot;if(t._geometryData===null||t._geometryData.offset!==this.pathOffset)return;const e=this._constraintData;let i=!1;if(this._root._childrenTransformDirty?(this._updatePathVertices(t._geometryData),i=!0):(t._verticesDirty||t._isBonesUpdate())&&(this._updatePathVertices(t._geometryData),t._verticesDirty=!1,i=!0),!i&&!this.dirty)return;const s=e.positionMode,a=e.spacingMode,r=e.rotateMode,n=this._bones,o=a===0,h=r===2,_=r===0,u=n.length,m=_?u:u+1,p=this.spacing;let f=this._spaces;if(f.length=m,h||o){f[0]=0;for(let O=0,S=m-1;O<S;O++){const x=n[O];x.updateByConstraint();const I=x._boneData.length,C=x.globalTransformMatrix,k=I*C.a,R=I*C.b,N=Math.sqrt(k*k+R*R);h&&(this._boneLengths[O]=N),f[O+1]=(I+p)*N/I}}else for(let O=0;O<m;O++)f[O]=p;this._computeBezierCurve(t._displayFrame.rawDisplayData,m,_,s===1,a===2);const y=this._positions;let T,d=this.rotateOffset,c=y[0],A=y[1];if(d===0)T=r===1;else{T=!1;const O=t.parent;if(O!==null){const S=O.globalTransformMatrix;d*=S.a*S.d-S.b*S.c>0?F.DEG_RAD:-F.DEG_RAD}}const b=this.rotateMix,E=this.translateMix;for(let O=0,S=3;O<u;O++,S+=3){let x=n[O];x.updateByConstraint();let I=x.globalTransformMatrix;I.tx+=(c-I.tx)*E,I.ty+=(A-I.ty)*E;const C=y[S],k=y[S+1],R=C-c,N=k-A;if(h){const w=this._boneLengths[O],v=(Math.sqrt(R*R+N*N)/w-1)*b+1;I.a*=v,I.b*=v}if(c=C,A=k,b>0){let w,v,U,Z=I.a,H=I.b,j=I.c,Y=I.d;if(w=_?y[S-1]:Math.atan2(N,R),w-=Math.atan2(H,Z),T){v=Math.cos(w),U=Math.sin(w);const $=x._boneData.length;c+=($*(v*Z-U*H)-R)*b,A+=($*(U*Z+v*H)-N)*b}else w+=d;w>F.PI?w-=F.PI_D:w<-F.PI&&(w+=F.PI_D),w*=b,v=Math.cos(w),U=Math.sin(w),I.a=v*Z-U*H,I.b=U*Z+v*H,I.c=v*j-U*Y,I.d=U*j+v*Y}x.global.fromMatrix(I)}this.dirty=!1}invalidUpdate(){}};class Ee extends D{constructor(){super(...arguments),this.deformVertices=[]}static toString(){return"[class dragonBones.DisplayFrame]"}_onClear(){this.rawDisplayData=null,this.displayData=null,this.textureData=null,this.display=null,this.deformVertices.length=0}updateDeformVertices(){if(this.rawDisplayData===null||this.deformVertices.length!==0)return;let t;if(this.rawDisplayData.type===2)t=this.rawDisplayData.geometry;else{if(this.rawDisplayData.type!==4)return;t=this.rawDisplayData.geometry}let e=0;e=t.weight!==null?2*t.weight.count:2*t.data.intArray[t.offset+0],this.deformVertices.length=e;for(let i=0,s=this.deformVertices.length;i<s;++i)this.deformVertices[i]=0}getGeometryData(){if(this.displayData!==null){if(this.displayData.type===2)return this.displayData.geometry;if(this.displayData.type===4)return this.displayData.geometry}if(this.rawDisplayData!==null){if(this.rawDisplayData.type===2)return this.rawDisplayData.geometry;if(this.rawDisplayData.type===4)return this.rawDisplayData.geometry}return null}getBoundingBox(){return this.displayData!==null&&this.displayData.type===3?this.displayData.boundingBox:this.rawDisplayData!==null&&this.rawDisplayData.type===3?this.rawDisplayData.boundingBox:null}getTextureData(){if(this.displayData!==null){if(this.displayData.type===0)return this.displayData.texture;if(this.displayData.type===2)return this.displayData.texture}if(this.textureData!==null)return this.textureData;if(this.rawDisplayData!==null){if(this.rawDisplayData.type===0)return this.rawDisplayData.texture;if(this.rawDisplayData.type===2)return this.rawDisplayData.texture}return null}}let Ie=class B extends at{constructor(){super(...arguments),this._localMatrix=new it,this._colorTransform=new mt,this._displayFrames=[],this._geometryBones=[],this._rawDisplay=null,this._meshDisplay=null,this._display=null}_onClear(){super._onClear();const t=[];for(const e of this._displayFrames){const i=e.display;i!==this._rawDisplay&&i!==this._meshDisplay&&t.indexOf(i)<0&&t.push(i),e.returnToPool()}for(const e of t)e instanceof et?e.dispose():this._disposeDisplay(e,!0);this._meshDisplay!==null&&this._meshDisplay!==this._rawDisplay&&this._disposeDisplay(this._meshDisplay,!1),this._rawDisplay!==null&&this._disposeDisplay(this._rawDisplay,!1),this.displayController=null,this._displayDataDirty=!1,this._displayDirty=!1,this._geometryDirty=!1,this._textureDirty=!1,this._visibleDirty=!1,this._blendModeDirty=!1,this._zOrderDirty=!1,this._colorDirty=!1,this._verticesDirty=!1,this._transformDirty=!1,this._visible=!0,this._blendMode=0,this._displayIndex=-1,this._animationDisplayIndex=-1,this._zOrder=0,this._zIndex=0,this._cachedFrameIndex=-1,this._pivotX=0,this._pivotY=0,this._localMatrix.identity(),this._colorTransform.identity(),this._displayFrames.length=0,this._geometryBones.length=0,this._slotData=null,this._displayFrame=null,this._geometryData=null,this._boundingBoxData=null,this._textureData=null,this._rawDisplay=null,this._meshDisplay=null,this._display=null,this._childArmature=null,this._parent=null,this._cachedFrameIndices=null}_hasDisplay(t){for(const e of this._displayFrames)if(e.display===t)return!0;return!1}_isBonesUpdate(){for(const t of this._geometryBones)if(t!==null&&t._childrenTransformDirty)return!0;return!1}_updateAlpha(){const t=this._alpha*this._parent._globalAlpha;this._globalAlpha!==t&&(this._globalAlpha=t,this._colorDirty=!0)}_updateDisplayData(){const t=this._displayFrame,e=this._geometryData,i=this._textureData;let s=null,a=null;if(this._displayFrame=null,this._geometryData=null,this._boundingBoxData=null,this._textureData=null,this._displayIndex>=0&&this._displayIndex<this._displayFrames.length&&(this._displayFrame=this._displayFrames[this._displayIndex],s=this._displayFrame.rawDisplayData,a=this._displayFrame.displayData,this._geometryData=this._displayFrame.getGeometryData(),this._boundingBoxData=this._displayFrame.getBoundingBox(),this._textureData=this._displayFrame.getTextureData()),this._displayFrame!==t||this._geometryData!==e||this._textureData!==i){if(this._geometryData===null&&this._textureData!==null){const r=a!==null&&a.type===0?a:s,n=this._textureData.parent.scale*this._armature._armatureData.scale,o=this._textureData.frame;this._pivotX=r.pivot.x,this._pivotY=r.pivot.y;const h=o!==null?o:this._textureData.region;let _=h.width,u=h.height;this._textureData.rotated&&o===null&&(_=h.height,u=h.width),this._pivotX*=_*n,this._pivotY*=u*n,o!==null&&(this._pivotX+=o.x*n,this._pivotY+=o.y*n),s!==null&&r!==s&&(s.transform.toMatrix(B._helpMatrix),B._helpMatrix.invert(),B._helpMatrix.transformPoint(0,0,B._helpPoint),this._pivotX-=B._helpPoint.x,this._pivotY-=B._helpPoint.y,r.transform.toMatrix(B._helpMatrix),B._helpMatrix.invert(),B._helpMatrix.transformPoint(0,0,B._helpPoint),this._pivotX+=B._helpPoint.x,this._pivotY+=B._helpPoint.y),q.yDown||(this._pivotY=(this._textureData.rotated?this._textureData.region.width:this._textureData.region.height)*n-this._pivotY)}else this._pivotX=0,this._pivotY=0;if(this.origin=s!==null?s.transform:a!==null?a.transform:null,this.origin!==null?this.global.copyFrom(this.origin).add(this.offset).toMatrix(this._localMatrix):this.global.copyFrom(this.offset).toMatrix(this._localMatrix),this._geometryData!==e)if(this._geometryDirty=!0,this._verticesDirty=!0,this._geometryData!==null){if(this._geometryBones.length=0,this._geometryData.weight!==null)for(let r=0,n=this._geometryData.weight.bones.length;r<n;++r){const o=this._armature.getBone(this._geometryData.weight.bones[r].name);this._geometryBones.push(o)}}else this._geometryBones.length=0,this._geometryData=null;this._textureDirty=this._textureData!==i,this._transformDirty=!0}}_updateDisplay(){const t=this._display!==null?this._display:this._rawDisplay,e=this._childArmature;if(this._displayFrame!==null?(this._display=this._displayFrame.display,this._display!==null&&this._display instanceof et?(this._childArmature=this._display,this._display=this._childArmature.display):this._childArmature=null):(this._display=null,this._childArmature=null),(this._display!==null?this._display:this._rawDisplay)!==t&&(this._textureDirty=!0,this._visibleDirty=!0,this._blendModeDirty=!0,this._colorDirty=!0,this._transformDirty=!0,this._onUpdateDisplay(),this._replaceDisplay(t)),this._childArmature!==e&&(e!==null&&(e._parent=null,e.clock=null,e.inheritAnimation&&e.animation.reset()),this._childArmature!==null&&(this._childArmature._parent=this,this._childArmature.clock=this._armature.clock,this._childArmature.inheritAnimation))){if(this._childArmature.cacheFrameRate===0){const i=this._armature.cacheFrameRate;i!==0&&(this._childArmature.cacheFrameRate=i)}if(this._displayFrame!==null){let i=null,s=this._displayFrame.displayData!==null?this._displayFrame.displayData:this._displayFrame.rawDisplayData;if(s!==null&&s.type===1&&(i=s.actions),i!==null&&i.length>0)for(const a of i){const r=D.borrowObject(P);P.actionDataToInstance(a,r,this._armature),r.slot=this,this._armature._bufferAction(r,!1)}else this._childArmature.animation.play()}}}_updateGlobalTransformMatrix(t){const e=this._parent._boneData.type===0?this._parent.globalTransformMatrix:this._parent._getGlobalTransformMatrix(this.global.x,this.global.y);this.globalTransformMatrix.copyFrom(this._localMatrix),this.globalTransformMatrix.concat(e),t?this.global.fromMatrix(this.globalTransformMatrix):this._globalDirty=!0}_setDisplayIndex(t,e=!1){if(e){if(this._animationDisplayIndex===t)return;this._animationDisplayIndex=t}this._displayIndex!==t&&(this._displayIndex=t<this._displayFrames.length?t:this._displayFrames.length-1,this._displayDataDirty=!0,this._displayDirty=this._displayIndex<0||this._display!==this._displayFrames[this._displayIndex].display)}_setZOrder(t){return this._zOrder,this._zOrder=t,this._zOrderDirty=!0,this._zOrderDirty}_setColor(t){return this._colorTransform.copyFrom(t),this._colorDirty=!0}init(t,e,i,s){if(this._slotData!==null)return;this._slotData=t,this._colorDirty=!0,this._blendModeDirty=!0,this._blendMode=this._slotData.blendMode,this._zOrder=this._slotData.zOrder,this._zIndex=this._slotData.zIndex,this._alpha=this._slotData.alpha,this._colorTransform.copyFrom(this._slotData.color),this._rawDisplay=i,this._meshDisplay=s,this._armature=e;const a=this._armature.getBone(this._slotData.parent.name);a!==null&&(this._parent=a),this._armature._addSlot(this),this._initDisplay(this._rawDisplay,!1),this._rawDisplay!==this._meshDisplay&&this._initDisplay(this._meshDisplay,!1),this._onUpdateDisplay(),this._addDisplay()}update(t){if(this._displayDataDirty&&(this._updateDisplayData(),this._displayDataDirty=!1),this._displayDirty&&(this._updateDisplay(),this._displayDirty=!1),(this._geometryDirty||this._textureDirty)&&(this._display!==null&&this._display!==this._rawDisplay&&this._display!==this._meshDisplay||this._updateFrame(),this._geometryDirty=!1,this._textureDirty=!1),this._display!==null){if(this._visibleDirty&&(this._updateVisible(),this._visibleDirty=!1),this._blendModeDirty&&(this._updateBlendMode(),this._blendModeDirty=!1),this._colorDirty&&(this._updateColor(),this._colorDirty=!1),this._zOrderDirty&&(this._updateZOrder(),this._zOrderDirty=!1),this._geometryData!==null&&this._display===this._meshDisplay){const e=this._geometryData.weight!==null,i=this._parent._boneData.type!==0;if((this._verticesDirty||e&&this._isBonesUpdate()||i&&this._parent._childrenTransformDirty)&&(this._verticesDirty=!1,this._updateMesh()),e||i)return}if(t>=0&&this._cachedFrameIndices!==null){const e=this._cachedFrameIndices[t];e>=0&&this._cachedFrameIndex===e?this._transformDirty=!1:e>=0?(this._transformDirty=!0,this._cachedFrameIndex=e):this._transformDirty||this._parent._childrenTransformDirty?(this._transformDirty=!0,this._cachedFrameIndex=-1):this._cachedFrameIndex>=0?(this._transformDirty=!1,this._cachedFrameIndices[t]=this._cachedFrameIndex):(this._transformDirty=!0,this._cachedFrameIndex=-1)}else(this._transformDirty||this._parent._childrenTransformDirty)&&(t=-1,this._transformDirty=!0,this._cachedFrameIndex=-1);if(this._transformDirty){if(this._cachedFrameIndex<0){const e=t>=0;this._updateGlobalTransformMatrix(e),e&&this._cachedFrameIndices!==null&&(this._cachedFrameIndex=this._cachedFrameIndices[t]=this._armature._armatureData.setCacheFrame(this.globalTransformMatrix,this.global))}else this._armature._armatureData.getCacheFrame(this.globalTransformMatrix,this.global,this._cachedFrameIndex);this._updateTransform(),this._transformDirty=!1}}}invalidUpdate(){this._displayDataDirty=!0,this._displayDirty=!0,this._transformDirty=!0}updateTransformAndMatrix(){this._transformDirty&&(this._updateGlobalTransformMatrix(!1),this._transformDirty=!1)}replaceRawDisplayData(t,e=-1){if(e<0)e=this._displayIndex<0?0:this._displayIndex;else if(e>=this._displayFrames.length)return;const i=this._displayFrames[e];if(i.rawDisplayData!==t){if(i.deformVertices.length=0,i.rawDisplayData=t,i.rawDisplayData===null){const s=this._armature._armatureData.defaultSkin;if(s!==null){const a=s.getDisplays(this._slotData.name);a!==null&&e<a.length&&(i.rawDisplayData=a[e])}}e===this._displayIndex&&(this._displayDataDirty=!0)}}replaceDisplayData(t,e=-1){if(e<0)e=this._displayIndex<0?0:this._displayIndex;else if(e>=this._displayFrames.length)return;const i=this._displayFrames[e];i.displayData!==t&&i.rawDisplayData!==t&&(i.displayData=t,e===this._displayIndex&&(this._displayDataDirty=!0))}replaceTextureData(t,e=-1){if(e<0)e=this._displayIndex<0?0:this._displayIndex;else if(e>=this._displayFrames.length)return;const i=this._displayFrames[e];i.textureData!==t&&(i.textureData=t,e===this._displayIndex&&(this._displayDataDirty=!0))}replaceDisplay(t,e=-1){if(e<0)e=this._displayIndex<0?0:this._displayIndex;else if(e>=this._displayFrames.length)return;const i=this._displayFrames[e];if(i.display!==t){const s=i.display;i.display=t,s===null||s===this._rawDisplay||s===this._meshDisplay||this._hasDisplay(s)||s instanceof et||this._disposeDisplay(s,!0),t===null||t===this._rawDisplay||t===this._meshDisplay||this._hasDisplay(s)||t instanceof et||this._initDisplay(t,!0),e===this._displayIndex&&(this._displayDirty=!0)}}containsPoint(t,e){return this._boundingBoxData!==null&&(this.updateTransformAndMatrix(),B._helpMatrix.copyFrom(this.globalTransformMatrix),B._helpMatrix.invert(),B._helpMatrix.transformPoint(t,e,B._helpPoint),this._boundingBoxData.containsPoint(B._helpPoint.x,B._helpPoint.y))}intersectsSegment(t,e,i,s,a=null,r=null,n=null){if(this._boundingBoxData===null)return 0;this.updateTransformAndMatrix(),B._helpMatrix.copyFrom(this.globalTransformMatrix),B._helpMatrix.invert(),B._helpMatrix.transformPoint(t,e,B._helpPoint),t=B._helpPoint.x,e=B._helpPoint.y,B._helpMatrix.transformPoint(i,s,B._helpPoint),i=B._helpPoint.x,s=B._helpPoint.y;const o=this._boundingBoxData.intersectsSegment(t,e,i,s,a,r,n);return o>0&&(o===1||o===2?a!==null?(this.globalTransformMatrix.transformPoint(a.x,a.y,a),r!==null&&(r.x=a.x,r.y=a.y)):r!==null&&this.globalTransformMatrix.transformPoint(r.x,r.y,r):(a!==null&&this.globalTransformMatrix.transformPoint(a.x,a.y,a),r!==null&&this.globalTransformMatrix.transformPoint(r.x,r.y,r)),n!==null&&(this.globalTransformMatrix.transformPoint(Math.cos(n.x),Math.sin(n.x),B._helpPoint,!0),n.x=Math.atan2(B._helpPoint.y,B._helpPoint.x),this.globalTransformMatrix.transformPoint(Math.cos(n.y),Math.sin(n.y),B._helpPoint,!0),n.y=Math.atan2(B._helpPoint.y,B._helpPoint.x))),o}getDisplayFrameAt(t){return this._displayFrames[t]}get visible(){return this._visible}set visible(t){this._visible!==t&&(this._visible=t,this._updateVisible())}get displayFrameCount(){return this._displayFrames.length}set displayFrameCount(t){const e=this._displayFrames.length;if(e<t){this._displayFrames.length=t;for(let i=e;i<t;++i)this._displayFrames[i]=D.borrowObject(Ee)}else if(e>t){for(let i=e-1;i<t;--i)this.replaceDisplay(null,i),this._displayFrames[i].returnToPool();this._displayFrames.length=t}}get displayIndex(){return this._displayIndex}set displayIndex(t){this._setDisplayIndex(t),this.update(-1)}get name(){return this._slotData.name}get displayList(){const t=new Array;for(const e of this._displayFrames)t.push(e.display);return t}set displayList(t){this.displayFrameCount=t.length;let e=0;for(const i of t)this.replaceDisplay(i,e++)}get slotData(){return this._slotData}get boundingBoxData(){return this._boundingBoxData}get rawDisplay(){return this._rawDisplay}get meshDisplay(){return this._meshDisplay}get display(){return this._display}set display(t){this._display!==t&&(this._displayFrames.length===0&&(this.displayFrameCount=1,this._displayIndex=0),this.replaceDisplay(t,this._displayIndex))}get childArmature(){return this._childArmature}set childArmature(t){this._childArmature!==t&&(this.display=t)}get parent(){return this._parent}getDisplay(){return this._display}setDisplay(t){this.display=t}},Fe=class K extends Kt{constructor(){super(...arguments),this._vertices=[],this._deformVertices=[],this._hullCache=[],this._matrixCahce=[]}static toString(){return"[class dragonBones.Surface]"}_onClear(){super._onClear(),this._dX=0,this._dY=0,this._k=0,this._kX=0,this._kY=0,this._vertices.length=0,this._deformVertices.length=0,this._matrixCahce.length=0,this._hullCache.length=0,this._bone=null}_getAffineTransform(t,e,i,s,a,r,n,o,h,_,u,m,p){const f=n-a,y=o-r,T=h-a,d=_-r;u.rotation=Math.atan2(y,f),u.skew=Math.atan2(d,T)-.5*Math.PI-u.rotation,p&&(u.rotation+=Math.PI),u.scaleX=Math.sqrt(f*f+y*y)/i,u.scaleY=Math.sqrt(T*T+d*d)/s,u.toMatrix(m),u.x=m.tx=a-(m.a*t+m.c*e),u.y=m.ty=r-(m.b*t+m.d*e)}_updateVertices(){const t=this._armature.armatureData.parent,e=this._boneData.geometry,i=t.intArray,s=t.floatArray,a=i[e.offset+0],r=i[e.offset+2],n=this._vertices,o=this._deformVertices;if(this._parent!==null)if(this._parent._boneData.type===1)for(let h=0,_=a;h<_;++h){const u=2*h,m=s[r+u]+o[u],p=s[r+u+1]+o[u+1],f=this._parent._getGlobalTransformMatrix(m,p);n[u]=f.a*m+f.c*p+f.tx,n[u+1]=f.b*m+f.d*p+f.ty}else{const h=this._parent.globalTransformMatrix;for(let _=0,u=a;_<u;++_){const m=2*_,p=s[r+m]+o[m],f=s[r+m+1]+o[m+1];n[m]=h.a*p+h.c*f+h.tx,n[m+1]=h.b*p+h.d*f+h.ty}}else for(let h=0,_=a;h<_;++h){const u=2*h;n[u]=s[r+u]+o[u],n[u+1]=s[r+u+1]+o[u+1]}}_updateGlobalTransformMatrix(t){const e=2*this._boneData.segmentX,i=this._vertices.length-2,s=this._vertices[0],a=this._vertices[1],r=this._vertices[e],n=this._vertices[e+1],o=this._vertices[i],h=this._vertices[i+1],_=this._vertices[i-e],u=this._vertices[i-e+1],m=s+.5*(o-s),p=a+.5*(h-a),f=m+.5*(r+.5*(_-r)-m),y=p+.5*(n+.5*(u-n)-p),T=r+.5*(o-r),d=n+.5*(h-n),c=_+.5*(o-_),A=u+.5*(h-u);this._getAffineTransform(0,0,200,200,f,y,T,d,c,A,this.global,this.globalTransformMatrix,!1),this._globalDirty=!1}_getGlobalTransformMatrix(t,e){if(t<-1e3||1e3<t||e<-1e3||1e3<e)return this.globalTransformMatrix;let a=!1;const r=this._boneData,n=r.segmentX,o=r.segmentY,h=2*r.segmentX,_=this._dX,u=this._dY,m=Math.floor((t+200)/_),p=Math.floor((e+200)/u);let f=0,y=m*_-200,T=p*u-200;const d=this._matrixCahce,c=K._helpMatrix;if(t<-200){if(e<-200||e>=200)return this.globalTransformMatrix;if(a=e>this._kX*(t+200)+T,f=7*(2*(n*o+n+o+o+p)+(a?1:0)),d[f]>0)c.copyFromArray(d,f+1);else{const A=p*(h+2),b=this._hullCache[4],E=this._hullCache[5],O=this._hullCache[2]-(o-p)*b,S=this._hullCache[3]-(o-p)*E,x=this._vertices;a?this._getAffineTransform(-200,T+u,800,u,x[A+h+2],x[A+h+3],O+b,S+E,x[A],x[A+1],K._helpTransform,c,!0):this._getAffineTransform(-1e3,T,800,u,O,S,x[A],x[A+1],O+b,S+E,K._helpTransform,c,!1),d[f]=1,d[f+1]=c.a,d[f+2]=c.b,d[f+3]=c.c,d[f+4]=c.d,d[f+5]=c.tx,d[f+6]=c.ty}}else if(t>=200){if(e<-200||e>=200)return this.globalTransformMatrix;if(a=e>this._kX*(t-1e3)+T,f=7*(2*(n*o+n+p)+(a?1:0)),d[f]>0)c.copyFromArray(d,f+1);else{const A=(p+1)*(h+2)-2,b=this._hullCache[4],E=this._hullCache[5],O=this._hullCache[0]+p*b,S=this._hullCache[1]+p*E,x=this._vertices;a?this._getAffineTransform(1e3,T+u,800,u,O+b,S+E,x[A+h+2],x[A+h+3],O,S,K._helpTransform,c,!0):this._getAffineTransform(200,T,800,u,x[A],x[A+1],O,S,x[A+h+2],x[A+h+3],K._helpTransform,c,!1),d[f]=1,d[f+1]=c.a,d[f+2]=c.b,d[f+3]=c.c,d[f+4]=c.d,d[f+5]=c.tx,d[f+6]=c.ty}}else if(e<-200){if(t<-200||t>=200)return this.globalTransformMatrix;if(a=e>this._kY*(t-y-_)-1e3,f=7*(2*(n*o+m)+(a?1:0)),d[f]>0)c.copyFromArray(d,f+1);else{const A=2*m,b=this._hullCache[10],E=this._hullCache[11],O=this._hullCache[8]+m*b,S=this._hullCache[9]+m*E,x=this._vertices;a?this._getAffineTransform(y+_,-200,_,800,x[A+2],x[A+3],x[A],x[A+1],O+b,S+E,K._helpTransform,c,!0):this._getAffineTransform(y,-1e3,_,800,O,S,O+b,S+E,x[A],x[A+1],K._helpTransform,c,!1),d[f]=1,d[f+1]=c.a,d[f+2]=c.b,d[f+3]=c.c,d[f+4]=c.d,d[f+5]=c.tx,d[f+6]=c.ty}}else if(e>=200){if(t<-200||t>=200)return this.globalTransformMatrix;if(a=e>this._kY*(t-y-_)+200,f=7*(2*(n*o+n+o+m)+(a?1:0)),d[f]>0)c.copyFromArray(d,f+1);else{const A=o*(h+2)+2*m,b=this._hullCache[10],E=this._hullCache[11],O=this._hullCache[6]-(n-m)*b,S=this._hullCache[7]-(n-m)*E,x=this._vertices;a?this._getAffineTransform(y+_,1e3,_,800,O+b,S+E,O,S,x[A+2],x[A+3],K._helpTransform,c,!0):this._getAffineTransform(y,200,_,800,x[A],x[A+1],x[A+2],x[A+3],O,S,K._helpTransform,c,!1),d[f]=1,d[f+1]=c.a,d[f+2]=c.b,d[f+3]=c.c,d[f+4]=c.d,d[f+5]=c.tx,d[f+6]=c.ty}}else if(a=e>this._k*(t-y-_)+T,f=7*(2*(n*p+m)+(a?1:0)),d[f]>0)c.copyFromArray(d,f+1);else{const A=2*m+p*(h+2),b=this._vertices;a?this._getAffineTransform(y+_,T+u,_,u,b[A+h+4],b[A+h+5],b[A+h+2],b[A+h+3],b[A+2],b[A+3],K._helpTransform,c,!0):this._getAffineTransform(y,T,_,u,b[A],b[A+1],b[A+2],b[A+3],b[A+h+2],b[A+h+3],K._helpTransform,c,!1),d[f]=1,d[f+1]=c.a,d[f+2]=c.b,d[f+3]=c.c,d[f+4]=c.d,d[f+5]=c.tx,d[f+6]=c.ty}return c}init(t,e){if(this._boneData!==null)return;super.init(t,e);const i=t.segmentX,s=t.segmentY,a=this._armature.armatureData.parent.intArray[t.geometry.offset+0];this._dX=400/i,this._dY=400/s,this._k=-this._dY/this._dX,this._kX=-this._dY/800,this._kY=-800/this._dX,this._vertices.length=2*a,this._deformVertices.length=2*a,this._matrixCahce.length=2*(i*s+2*i+2*s)*7,this._hullCache.length=10;for(let r=0;r<2*a;++r)this._deformVertices[r]=0;this._parent!==null&&(this._parent.boneData.type===0?this._bone=this._parent:this._bone=this._parent._bone)}update(t){if(t>=0&&this._cachedFrameIndices!==null){const e=this._cachedFrameIndices[t];if(e>=0&&this._cachedFrameIndex===e)this._transformDirty=!1;else if(e>=0)this._transformDirty=!0,this._cachedFrameIndex=e;else{if(this._hasConstraint)for(const i of this._armature._constraints)i._root===this&&i.update();this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty?(this._transformDirty=!0,this._cachedFrameIndex=-1):this._cachedFrameIndex>=0?(this._transformDirty=!1,this._cachedFrameIndices[t]=this._cachedFrameIndex):(this._transformDirty=!0,this._cachedFrameIndex=-1)}}else{if(this._hasConstraint)for(const e of this._armature._constraints)e._root===this&&e.update();(this._transformDirty||this._parent!==null&&this._parent._childrenTransformDirty)&&(t=-1,this._transformDirty=!0,this._cachedFrameIndex=-1)}if(this._transformDirty){this._transformDirty=!1,this._childrenTransformDirty=!0;for(let n=0,o=this._matrixCahce.length;n<o;n+=7)this._matrixCahce[n]=-1;if(this._updateVertices(),this._cachedFrameIndex<0){const n=t>=0;this._localDirty&&this._updateGlobalTransformMatrix(n),n&&this._cachedFrameIndices!==null&&(this._cachedFrameIndex=this._cachedFrameIndices[t]=this._armature._armatureData.setCacheFrame(this.globalTransformMatrix,this.global))}else this._armature._armatureData.getCacheFrame(this.globalTransformMatrix,this.global,this._cachedFrameIndex);const e=1e3,i=200,s=2*this.global.x,a=2*this.global.y,r=K._helpPoint;this.globalTransformMatrix.transformPoint(e,-200,r),this._hullCache[0]=r.x,this._hullCache[1]=r.y,this._hullCache[2]=s-r.x,this._hullCache[3]=a-r.y,this.globalTransformMatrix.transformPoint(0,this._dY,r,!0),this._hullCache[4]=r.x,this._hullCache[5]=r.y,this.globalTransformMatrix.transformPoint(i,e,r),this._hullCache[6]=r.x,this._hullCache[7]=r.y,this._hullCache[8]=s-r.x,this._hullCache[9]=a-r.y,this.globalTransformMatrix.transformPoint(this._dX,0,r,!0),this._hullCache[10]=r.x,this._hullCache[11]=r.y}else this._childrenTransformDirty&&(this._childrenTransformDirty=!1);this._localDirty=!0}},Zt=class extends D{constructor(){super(...arguments),this.cachedFrames=[],this.boneTimelines={},this.slotTimelines={},this.constraintTimelines={},this.animationTimelines={},this.boneCachedFrameIndices={},this.slotCachedFrameIndices={},this.actionTimeline=null,this.zOrderTimeline=null}static toString(){return"[class dragonBones.AnimationData]"}_onClear(){for(let t in this.boneTimelines){for(const e of this.boneTimelines[t])e.returnToPool();delete this.boneTimelines[t]}for(let t in this.slotTimelines){for(const e of this.slotTimelines[t])e.returnToPool();delete this.slotTimelines[t]}for(let t in this.constraintTimelines){for(const e of this.constraintTimelines[t])e.returnToPool();delete this.constraintTimelines[t]}for(let t in this.animationTimelines){for(const e of this.animationTimelines[t])e.returnToPool();delete this.animationTimelines[t]}for(let t in this.boneCachedFrameIndices)delete this.boneCachedFrameIndices[t];for(let t in this.slotCachedFrameIndices)delete this.slotCachedFrameIndices[t];this.actionTimeline!==null&&this.actionTimeline.returnToPool(),this.zOrderTimeline!==null&&this.zOrderTimeline.returnToPool(),this.frameIntOffset=0,this.frameFloatOffset=0,this.frameOffset=0,this.blendType=0,this.frameCount=0,this.playTimes=0,this.duration=0,this.scale=1,this.fadeInTime=0,this.cacheFrameRate=0,this.name="",this.cachedFrames.length=0,this.actionTimeline=null,this.zOrderTimeline=null,this.parent=null}cacheFrames(t){if(this.cacheFrameRate>0)return;this.cacheFrameRate=Math.max(Math.ceil(t*this.scale),1);const e=Math.ceil(this.cacheFrameRate*this.duration)+1;this.cachedFrames.length=e;for(let i=0,s=this.cacheFrames.length;i<s;++i)this.cachedFrames[i]=!1;for(const i of this.parent.sortedBones){const s=new Array(e);for(let a=0,r=s.length;a<r;++a)s[a]=-1;this.boneCachedFrameIndices[i.name]=s}for(const i of this.parent.sortedSlots){const s=new Array(e);for(let a=0,r=s.length;a<r;++a)s[a]=-1;this.slotCachedFrameIndices[i.name]=s}}addBoneTimeline(t,e){const i=t in this.boneTimelines?this.boneTimelines[t]:this.boneTimelines[t]=[];i.indexOf(e)<0&&i.push(e)}addSlotTimeline(t,e){const i=t in this.slotTimelines?this.slotTimelines[t]:this.slotTimelines[t]=[];i.indexOf(e)<0&&i.push(e)}addConstraintTimeline(t,e){const i=t in this.constraintTimelines?this.constraintTimelines[t]:this.constraintTimelines[t]=[];i.indexOf(e)<0&&i.push(e)}addAnimationTimeline(t,e){const i=t in this.animationTimelines?this.animationTimelines[t]:this.animationTimelines[t]=[];i.indexOf(e)<0&&i.push(e)}getBoneTimelines(t){return t in this.boneTimelines?this.boneTimelines[t]:null}getSlotTimelines(t){return t in this.slotTimelines?this.slotTimelines[t]:null}getConstraintTimelines(t){return t in this.constraintTimelines?this.constraintTimelines[t]:null}getAnimationTimelines(t){return t in this.animationTimelines?this.animationTimelines[t]:null}getBoneCachedFrameIndices(t){return t in this.boneCachedFrameIndices?this.boneCachedFrameIndices[t]:null}getSlotCachedFrameIndices(t){return t in this.slotCachedFrameIndices?this.slotCachedFrameIndices[t]:null}},Mt=class extends D{static toString(){return"[class dragonBones.TimelineData]"}_onClear(){this.type=10,this.offset=0,this.frameIndicesOffset=-1}},qt=class extends Mt{static toString(){return"[class dragonBones.AnimationTimelineData]"}_onClear(){super._onClear(),this.x=0,this.y=0}},l=class{static _getArmatureType(t){switch(t.toLowerCase()){case"stage":return 2;case"armature":default:return 0;case"movieclip":return 1}}static _getBoneType(t){switch(t.toLowerCase()){case"bone":default:return 0;case"surface":return 1}}static _getPositionMode(t){switch(t.toLocaleLowerCase()){case"percent":default:return 1;case"fixed":return 0}}static _getSpacingMode(t){switch(t.toLocaleLowerCase()){case"length":default:return 0;case"percent":return 2;case"fixed":return 1}}static _getRotateMode(t){switch(t.toLocaleLowerCase()){case"tangent":default:return 0;case"chain":return 1;case"chainscale":return 2}}static _getDisplayType(t){switch(t.toLowerCase()){case"image":default:return 0;case"mesh":return 2;case"armature":return 1;case"boundingbox":return 3;case"path":return 4}}static _getBoundingBoxType(t){switch(t.toLowerCase()){case"rectangle":default:return 0;case"ellipse":return 1;case"polygon":return 2}}static _getBlendMode(t){switch(t.toLowerCase()){case"normal":default:return 0;case"add":return 1;case"alpha":return 2;case"darken":return 3;case"difference":return 4;case"erase":return 5;case"hardlight":return 6;case"invert":return 7;case"layer":return 8;case"lighten":return 9;case"multiply":return 10;case"overlay":return 11;case"screen":return 12;case"subtract":return 13}}static _getAnimationBlendType(t){switch(t.toLowerCase()){case"none":default:return 0;case"1d":return 1}}static _getActionType(t){switch(t.toLowerCase()){case"play":default:return 0;case"frame":return 10;case"sound":return 11}}};l.DATA_VERSION_2_3="2.3",l.DATA_VERSION_3_0="3.0",l.DATA_VERSION_4_0="4.0",l.DATA_VERSION_4_5="4.5",l.DATA_VERSION_5_0="5.0",l.DATA_VERSION_5_5="5.5",l.DATA_VERSION_5_6="5.6",l.DATA_VERSION=l.DATA_VERSION_5_6,l.DATA_VERSIONS=[l.DATA_VERSION_4_0,l.DATA_VERSION_4_5,l.DATA_VERSION_5_0,l.DATA_VERSION_5_5,l.DATA_VERSION_5_6],l.TEXTURE_ATLAS="textureAtlas",l.SUB_TEXTURE="SubTexture",l.FORMAT="format",l.IMAGE_PATH="imagePath",l.WIDTH="width",l.HEIGHT="height",l.ROTATED="rotated",l.FRAME_X="frameX",l.FRAME_Y="frameY",l.FRAME_WIDTH="frameWidth",l.FRAME_HEIGHT="frameHeight",l.DRADON_BONES="dragonBones",l.USER_DATA="userData",l.ARMATURE="armature",l.CANVAS="canvas",l.BONE="bone",l.SURFACE="surface",l.SLOT="slot",l.CONSTRAINT="constraint",l.SKIN="skin",l.DISPLAY="display",l.FRAME="frame",l.IK="ik",l.PATH_CONSTRAINT="path",l.ANIMATION="animation",l.TIMELINE="timeline",l.FFD="ffd",l.TRANSLATE_FRAME="translateFrame",l.ROTATE_FRAME="rotateFrame",l.SCALE_FRAME="scaleFrame",l.DISPLAY_FRAME="displayFrame",l.COLOR_FRAME="colorFrame",l.DEFAULT_ACTIONS="defaultActions",l.ACTIONS="actions",l.EVENTS="events",l.INTS="ints",l.FLOATS="floats",l.STRINGS="strings",l.TRANSFORM="transform",l.PIVOT="pivot",l.AABB="aabb",l.COLOR="color",l.VERSION="version",l.COMPATIBLE_VERSION="compatibleVersion",l.FRAME_RATE="frameRate",l.TYPE="type",l.SUB_TYPE="subType",l.NAME="name",l.PARENT="parent",l.TARGET="target",l.STAGE="stage",l.SHARE="share",l.PATH="path",l.LENGTH="length",l.DISPLAY_INDEX="displayIndex",l.Z_ORDER="zOrder",l.Z_INDEX="zIndex",l.BLEND_MODE="blendMode",l.INHERIT_TRANSLATION="inheritTranslation",l.INHERIT_ROTATION="inheritRotation",l.INHERIT_SCALE="inheritScale",l.INHERIT_REFLECTION="inheritReflection",l.INHERIT_ANIMATION="inheritAnimation",l.INHERIT_DEFORM="inheritDeform",l.SEGMENT_X="segmentX",l.SEGMENT_Y="segmentY",l.BEND_POSITIVE="bendPositive",l.CHAIN="chain",l.WEIGHT="weight",l.BLEND_TYPE="blendType",l.FADE_IN_TIME="fadeInTime",l.PLAY_TIMES="playTimes",l.SCALE="scale",l.OFFSET="offset",l.POSITION="position",l.DURATION="duration",l.TWEEN_EASING="tweenEasing",l.TWEEN_ROTATE="tweenRotate",l.TWEEN_SCALE="tweenScale",l.CLOCK_WISE="clockwise",l.CURVE="curve",l.SOUND="sound",l.EVENT="event",l.ACTION="action",l.X="x",l.Y="y",l.SKEW_X="skX",l.SKEW_Y="skY",l.SCALE_X="scX",l.SCALE_Y="scY",l.VALUE="value",l.ROTATE="rotate",l.SKEW="skew",l.ALPHA="alpha",l.ALPHA_OFFSET="aO",l.RED_OFFSET="rO",l.GREEN_OFFSET="gO",l.BLUE_OFFSET="bO",l.ALPHA_MULTIPLIER="aM",l.RED_MULTIPLIER="rM",l.GREEN_MULTIPLIER="gM",l.BLUE_MULTIPLIER="bM",l.UVS="uvs",l.VERTICES="vertices",l.TRIANGLES="triangles",l.WEIGHTS="weights",l.SLOT_POSE="slotPose",l.BONE_POSE="bonePose",l.BONES="bones",l.POSITION_MODE="positionMode",l.SPACING_MODE="spacingMode",l.ROTATE_MODE="rotateMode",l.SPACING="spacing",l.ROTATE_OFFSET="rotateOffset",l.ROTATE_MIX="rotateMix",l.TRANSLATE_MIX="translateMix",l.TARGET_DISPLAY="targetDisplay",l.CLOSED="closed",l.CONSTANT_SPEED="constantSpeed",l.VERTEX_COUNT="vertexCount",l.LENGTHS="lengths",l.GOTO_AND_PLAY="gotoAndPlay",l.DEFAULT_NAME="default";let Et=class extends D{_onClear(){this.color=0,this.width=0,this.height=0}},Qt=class tt extends Et{static toString(){return"[class dragonBones.RectangleBoundingBoxData]"}static _computeOutCode(t,e,i,s,a,r){let n=0;return t<i?n|=1:t>a&&(n|=2),e<s?n|=4:e>r&&(n|=8),n}static rectangleIntersectsSegment(t,e,i,s,a,r,n,o,h=null,_=null,u=null){const m=t>a&&t<n&&e>r&&e<o,p=i>a&&i<n&&s>r&&s<o;if(m&&p)return-1;let f=0,y=tt._computeOutCode(t,e,a,r,n,o),T=tt._computeOutCode(i,s,a,r,n,o);for(;;){if(!(y|T)){f=2;break}if(y&T)break;let d=0,c=0,A=0;const b=y!==0?y:T;4&b?(d=t+(i-t)*(r-e)/(s-e),c=r,u!==null&&(A=.5*-Math.PI)):8&b?(d=t+(i-t)*(o-e)/(s-e),c=o,u!==null&&(A=.5*Math.PI)):2&b?(c=e+(s-e)*(n-t)/(i-t),d=n,u!==null&&(A=0)):1&b&&(c=e+(s-e)*(a-t)/(i-t),d=a,u!==null&&(A=Math.PI)),b===y?(t=d,e=c,y=tt._computeOutCode(t,e,a,r,n,o),u!==null&&(u.x=A)):(i=d,s=c,T=tt._computeOutCode(i,s,a,r,n,o),u!==null&&(u.y=A))}return f&&(m?(f=2,h!==null&&(h.x=i,h.y=s),_!==null&&(_.x=i,_.y=i),u!==null&&(u.x=u.y+Math.PI)):p?(f=1,h!==null&&(h.x=t,h.y=e),_!==null&&(_.x=t,_.y=e),u!==null&&(u.y=u.x+Math.PI)):(f=3,h!==null&&(h.x=t,h.y=e),_!==null&&(_.x=i,_.y=s))),f}_onClear(){super._onClear(),this.type=0}containsPoint(t,e){const i=.5*this.width;if(t>=-i&&t<=i){const s=.5*this.height;if(e>=-s&&e<=s)return!0}return!1}intersectsSegment(t,e,i,s,a=null,r=null,n=null){const o=.5*this.width,h=.5*this.height;return tt.rectangleIntersectsSegment(t,e,i,s,-o,-h,o,h,a,r,n)}};class It extends Et{static toString(){return"[class dragonBones.EllipseData]"}static ellipseIntersectsSegment(t,e,i,s,a,r,n,o,h=null,_=null,u=null){const m=n/o,p=m*m,f=i-t,y=(s*=m)-(e*=m),T=Math.sqrt(f*f+y*y),d=f/T,c=y/T,A=(a-t)*d+(r-e)*c,b=n*n,E=b-(t*t+e*e)+A*A;let O=0;if(E>=0){const S=Math.sqrt(E),x=A-S,I=A+S,C=x<0?-1:x<=T?0:1,k=I<0?-1:I<=T?0:1,R=C*k;if(R<0)return-1;R===0&&(C===-1?(O=2,i=t+I*d,s=(e+I*c)/m,h!==null&&(h.x=i,h.y=s),_!==null&&(_.x=i,_.y=s),u!==null&&(u.x=Math.atan2(s/b*p,i/b),u.y=u.x+Math.PI)):k===1?(O=1,t+=x*d,e=(e+x*c)/m,h!==null&&(h.x=t,h.y=e),_!==null&&(_.x=t,_.y=e),u!==null&&(u.x=Math.atan2(e/b*p,t/b),u.y=u.x+Math.PI)):(O=3,h!==null&&(h.x=t+x*d,h.y=(e+x*c)/m,u!==null&&(u.x=Math.atan2(h.y/b*p,h.x/b))),_!==null&&(_.x=t+I*d,_.y=(e+I*c)/m,u!==null&&(u.y=Math.atan2(_.y/b*p,_.x/b)))))}return O}_onClear(){super._onClear(),this.type=1}containsPoint(t,e){const i=.5*this.width;if(t>=-i&&t<=i){const s=.5*this.height;if(e>=-s&&e<=s)return e*=i/s,Math.sqrt(t*t+e*e)<=i}return!1}intersectsSegment(t,e,i,s,a=null,r=null,n=null){return It.ellipseIntersectsSegment(t,e,i,s,0,0,.5*this.width,.5*this.height,a,r,n)}}let we=class Jt extends Et{constructor(){super(...arguments),this.vertices=[]}static toString(){return"[class dragonBones.PolygonBoundingBoxData]"}static polygonIntersectsSegment(t,e,i,s,a,r=null,n=null,o=null){t===i&&(t=i+1e-6),e===s&&(e=s+1e-6);const h=a.length,_=t-i,u=e-s,m=t*s-e*i;let p=0,f=a[h-2],y=a[h-1],T=0,d=0,c=0,A=0,b=0,E=0;for(let O=0;O<h;O+=2){const S=a[O],x=a[O+1];f===S&&(f=S+1e-4),y===x&&(y=x+1e-4);const I=f-S,C=y-x,k=f*x-y*S,R=_*C-u*I,N=(m*I-_*k)/R;if((N>=f&&N<=S||N>=S&&N<=f)&&(_===0||N>=t&&N<=i||N>=i&&N<=t)){const w=(m*C-u*k)/R;if((w>=y&&w<=x||w>=x&&w<=y)&&(u===0||w>=e&&w<=s||w>=s&&w<=e)){if(n===null){c=N,A=w,b=N,E=w,p++,o!==null&&(o.x=Math.atan2(x-y,S-f)-.5*Math.PI,o.y=o.x);break}{let v=N-t;v<0&&(v=-v),p===0?(T=v,d=v,c=N,A=w,b=N,E=w,o!==null&&(o.x=Math.atan2(x-y,S-f)-.5*Math.PI,o.y=o.x)):(v<T&&(T=v,c=N,A=w,o!==null&&(o.x=Math.atan2(x-y,S-f)-.5*Math.PI)),v>d&&(d=v,b=N,E=w,o!==null&&(o.y=Math.atan2(x-y,S-f)-.5*Math.PI))),p++}}}f=S,y=x}return p===1?(r!==null&&(r.x=c,r.y=A),n!==null&&(n.x=c,n.y=A),o!==null&&(o.y=o.x+Math.PI)):p>1&&(p++,r!==null&&(r.x=c,r.y=A),n!==null&&(n.x=b,n.y=E)),p}_onClear(){super._onClear(),this.type=2,this.x=0,this.y=0,this.vertices.length=0}containsPoint(t,e){let i=!1;if(t>=this.x&&t<=this.width&&e>=this.y&&e<=this.height)for(let s=0,a=this.vertices.length,r=a-2;s<a;s+=2){const n=this.vertices[r+1],o=this.vertices[s+1];if(o<e&&n>=e||n<e&&o>=e){const h=this.vertices[r],_=this.vertices[s];(e-o)*(h-_)/(n-o)+_<t&&(i=!i)}r=s}return i}intersectsSegment(t,e,i,s,a=null,r=null,n=null){let o=0;return Qt.rectangleIntersectsSegment(t,e,i,s,this.x,this.y,this.x+this.width,this.y+this.height,null,null,null)!==0&&(o=Jt.polygonIntersectsSegment(t,e,i,s,this.vertices,a,r,n)),o}},Ce=class extends D{static toString(){return"[class dragonBones.CanvasData]"}_onClear(){this.hasBackground=!1,this.color=0,this.x=0,this.y=0,this.width=0,this.height=0}},te=class extends D{_onClear(){this.order=0,this.name="",this.type=0,this.target=null,this.root=null,this.bone=null}};class Be extends te{static toString(){return"[class dragonBones.IKConstraintData]"}_onClear(){super._onClear(),this.scaleEnabled=!1,this.bendPositive=!1,this.weight=1}}let Pe=class extends te{constructor(){super(...arguments),this.bones=[]}static toString(){return"[class dragonBones.PathConstraintData]"}_onClear(){super._onClear(),this.pathSlot=null,this.pathDisplayData=null,this.bones.length=0,this.positionMode=0,this.spacingMode=1,this.rotateMode=1,this.position=0,this.spacing=0,this.rotateOffset=0,this.rotateMix=0,this.translateMix=0}AddBone(t){this.bones.push(t)}},Ne=class extends D{constructor(){super(...arguments),this.frameIndices=[],this.cachedFrames=[],this.armatureNames=[],this.armatures={},this.userData=null}static toString(){return"[class dragonBones.DragonBonesData]"}_onClear(){for(let t in this.armatures)this.armatures[t].returnToPool(),delete this.armatures[t];this.userData!==null&&this.userData.returnToPool(),this.autoSearch=!1,this.frameRate=0,this.version="",this.name="",this.stage=null,this.frameIndices.length=0,this.cachedFrames.length=0,this.armatureNames.length=0,this.binary=null,this.intArray=null,this.floatArray=null,this.frameIntArray=null,this.frameFloatArray=null,this.frameArray=null,this.timelineArray=null,this.colorArray=null,this.userData=null}addArmature(t){t.name in this.armatures?console.warn("Same armature: "+t.name):(t.parent=this,this.armatures[t.name]=t,this.armatureNames.push(t.name))}getArmature(t){return t in this.armatures?this.armatures[t]:null}},ve=class extends D{constructor(){super(...arguments),this.displays={}}static toString(){return"[class dragonBones.SkinData]"}_onClear(){for(let t in this.displays){const e=this.displays[t];for(const i of e)i!==null&&i.returnToPool();delete this.displays[t]}this.name="",this.parent=null}addDisplay(t,e){t in this.displays||(this.displays[t]=[]),e!==null&&(e.parent=this),this.displays[t].push(e)}getDisplay(t,e){const i=this.getDisplays(t);if(i!==null){for(const s of i)if(s!==null&&s.name===e)return s}return null}getDisplays(t){return t in this.displays?this.displays[t]:null}},Re=class extends D{constructor(){super(...arguments),this.textures={}}_onClear(){for(let t in this.textures)this.textures[t].returnToPool(),delete this.textures[t];this.autoSearch=!1,this.width=0,this.height=0,this.scale=1,this.name="",this.imagePath=""}copyFrom(t){this.autoSearch=t.autoSearch,this.scale=t.scale,this.width=t.width,this.height=t.height,this.name=t.name,this.imagePath=t.imagePath;for(let e in this.textures)this.textures[e].returnToPool(),delete this.textures[e];for(let e in t.textures){const i=this.createTexture();i.copyFrom(t.textures[e]),this.textures[e]=i}}addTexture(t){t.name in this.textures?console.warn("Same texture: "+t.name):(t.parent=this,this.textures[t.name]=t)}getTexture(t){return t in this.textures?this.textures[t]:null}},ee=class ie extends D{constructor(){super(...arguments),this.region=new bt,this.frame=null}static createRectangle(){return new bt}_onClear(){this.rotated=!1,this.name="",this.region.clear(),this.parent=null,this.frame=null}copyFrom(t){this.rotated=t.rotated,this.name=t.name,this.region.copyFrom(t.region),this.parent=t.parent,this.frame===null&&t.frame!==null?this.frame=ie.createRectangle():this.frame!==null&&t.frame===null&&(this.frame=null),this.frame!==null&&t.frame!==null&&this.frame.copyFrom(t.frame)}};class yt extends D{constructor(){super(...arguments),this.ints=[],this.floats=[],this.strings=[]}static toString(){return"[class dragonBones.UserData]"}_onClear(){this.ints.length=0,this.floats.length=0,this.strings.length=0}addInt(t){this.ints.push(t)}addFloat(t){this.floats.push(t)}addString(t){this.strings.push(t)}getInt(t=0){return t>=0&&t<this.ints.length?this.ints[t]:0}getFloat(t=0){return t>=0&&t<this.floats.length?this.floats[t]:0}getString(t=0){return t>=0&&t<this.strings.length?this.strings[t]:""}}class Ut extends D{constructor(){super(...arguments),this.data=null}static toString(){return"[class dragonBones.ActionData]"}_onClear(){this.data!==null&&this.data.returnToPool(),this.type=0,this.name="",this.bone=null,this.slot=null,this.data=null}}class g extends l{constructor(){super(...arguments),this._rawTextureAtlasIndex=0,this._rawBones=[],this._data=null,this._armature=null,this._bone=null,this._geometry=null,this._slot=null,this._skin=null,this._mesh=null,this._animation=null,this._timeline=null,this._rawTextureAtlases=null,this._frameValueType=0,this._defaultColorOffset=-1,this._prevClockwise=0,this._prevRotation=0,this._frameDefaultValue=0,this._frameValueScale=1,this._helpMatrixA=new it,this._helpMatrixB=new it,this._helpTransform=new F,this._helpColorTransform=new mt,this._helpPoint=new ft,this._helpArray=[],this._intArray=[],this._floatArray=[],this._frameIntArray=[],this._frameFloatArray=[],this._frameArray=[],this._timelineArray=[],this._colorArray=[],this._cacheRawMeshes=[],this._cacheMeshes=[],this._actionFrames=[],this._weightSlotPose={},this._weightBonePoses={},this._cacheBones={},this._slotChildActions={}}static _getBoolean(t,e,i){if(e in t){const s=t[e],a=typeof s;if(a==="boolean")return s;if(a!=="string")return!!s;switch(s){case"0":case"NaN":case"":case"false":case"null":case"undefined":return!1;default:return!0}}return i}static _getNumber(t,e,i){if(e in t){const s=t[e];return s===null||s==="NaN"?i:+s||0}return i}static _getString(t,e,i){if(e in t){const s=t[e];return typeof s=="string"?s:s.toString()}return i}_getCurvePoint(t,e,i,s,a,r,n,o,h,_){const u=1-h,m=u*u,p=h*h,f=u*m,y=3*h*m,T=3*u*p,d=h*p;_.x=f*t+y*i+T*a+d*n,_.y=f*e+y*s+T*r+d*o}_samplingEasingCurve(t,e){const i=t.length;if(i%3==1){let s=-2;for(let a=0,r=e.length;a<r;++a){let n=(a+1)/(r+1);for(;(s+6<i?t[s+6]:1)<n;)s+=6;const o=s>=0&&s+6<i,h=o?t[s]:0,_=o?t[s+1]:0,u=t[s+2],m=t[s+3],p=t[s+4],f=t[s+5],y=o?t[s+6]:1,T=o?t[s+7]:1;let d=0,c=1;for(;c-d>1e-4;){const A=.5*(c+d);this._getCurvePoint(h,_,u,m,p,f,y,T,A,this._helpPoint),n-this._helpPoint.x>0?d=A:c=A}e[a]=this._helpPoint.y}return!0}{let s=0;for(let a=0,r=e.length;a<r;++a){let n=(a+1)/(r+1);for(;t[s+6]<n;)s+=6;const o=t[s],h=t[s+1],_=t[s+2],u=t[s+3],m=t[s+4],p=t[s+5],f=t[s+6],y=t[s+7];let T=0,d=1;for(;d-T>1e-4;){const c=.5*(d+T);this._getCurvePoint(o,h,_,u,m,p,f,y,c,this._helpPoint),n-this._helpPoint.x>0?T=c:d=c}e[a]=this._helpPoint.y}return!1}}_parseActionDataInFrame(t,e,i,s){l.EVENT in t&&this._mergeActionFrame(t[l.EVENT],e,10,i,s),l.SOUND in t&&this._mergeActionFrame(t[l.SOUND],e,11,i,s),l.ACTION in t&&this._mergeActionFrame(t[l.ACTION],e,0,i,s),l.EVENTS in t&&this._mergeActionFrame(t[l.EVENTS],e,10,i,s),l.ACTIONS in t&&this._mergeActionFrame(t[l.ACTIONS],e,0,i,s)}_mergeActionFrame(t,e,i,s,a){const r=this._armature.actions.length,n=this._parseActionData(t,i,s,a);let o=0,h=null;for(const _ of n)this._armature.addAction(_,!1);this._actionFrames.length===0&&(h=new Tt,h.frameStart=0,this._actionFrames.push(h),h=null);for(const _ of this._actionFrames){if(_.frameStart===e){h=_;break}if(_.frameStart>e)break;o++}h===null&&(h=new Tt,h.frameStart=e,this._actionFrames.splice(o,0,h));for(let _=0;_<n.length;++_)h.actions.push(r+_)}_parseArmature(t,e){const i=D.borrowObject(ue);if(i.name=g._getString(t,l.NAME,""),i.frameRate=g._getNumber(t,l.FRAME_RATE,this._data.frameRate),i.scale=e,l.TYPE in t&&typeof t[l.TYPE]=="string"?i.type=l._getArmatureType(t[l.TYPE]):i.type=g._getNumber(t,l.TYPE,0),i.frameRate===0&&(i.frameRate=24),this._armature=i,l.CANVAS in t){const s=t[l.CANVAS],a=D.borrowObject(Ce);l.COLOR in s?a.hasBackground=!0:a.hasBackground=!1,a.color=g._getNumber(s,l.COLOR,0),a.x=g._getNumber(s,l.X,0)*i.scale,a.y=g._getNumber(s,l.Y,0)*i.scale,a.width=g._getNumber(s,l.WIDTH,0)*i.scale,a.height=g._getNumber(s,l.HEIGHT,0)*i.scale,i.canvas=a}if(l.AABB in t){const s=t[l.AABB];i.aabb.x=g._getNumber(s,l.X,0)*i.scale,i.aabb.y=g._getNumber(s,l.Y,0)*i.scale,i.aabb.width=g._getNumber(s,l.WIDTH,0)*i.scale,i.aabb.height=g._getNumber(s,l.HEIGHT,0)*i.scale}if(l.BONE in t){const s=t[l.BONE];for(const a of s){const r=g._getString(a,l.PARENT,""),n=this._parseBone(a);if(r.length>0){const o=i.getBone(r);o!==null?n.parent=o:(r in this._cacheBones||(this._cacheBones[r]=[]),this._cacheBones[r].push(n))}if(n.name in this._cacheBones){for(const o of this._cacheBones[n.name])o.parent=n;delete this._cacheBones[n.name]}i.addBone(n),this._rawBones.push(n)}}if(l.IK in t){const s=t[l.IK];for(const a of s){const r=this._parseIKConstraint(a);r&&i.addConstraint(r)}}if(i.sortBones(),l.SLOT in t){let s=0;const a=t[l.SLOT];for(const r of a)i.addSlot(this._parseSlot(r,s++))}if(l.SKIN in t){const s=t[l.SKIN];for(const a of s)i.addSkin(this._parseSkin(a))}if(l.PATH_CONSTRAINT in t){const s=t[l.PATH_CONSTRAINT];for(const a of s){const r=this._parsePathConstraint(a);r&&i.addConstraint(r)}}for(let s=0,a=this._cacheRawMeshes.length;s<a;++s){const r=this._cacheRawMeshes[s],n=g._getString(r,l.SHARE,"");if(n.length===0)continue;let o=g._getString(r,l.SKIN,l.DEFAULT_NAME);o.length===0&&(o=l.DEFAULT_NAME);const h=i.getMesh(o,"",n);h!==null&&this._cacheMeshes[s].geometry.shareFrom(h.geometry)}if(l.ANIMATION in t){const s=t[l.ANIMATION];for(const a of s){const r=this._parseAnimation(a);i.addAnimation(r)}}if(l.DEFAULT_ACTIONS in t){const s=this._parseActionData(t[l.DEFAULT_ACTIONS],0,null,null);for(const a of s)if(i.addAction(a,!0),a.type===0){const r=i.getAnimation(a.name);r!==null&&(i.defaultAnimation=r)}}if(l.ACTIONS in t){const s=this._parseActionData(t[l.ACTIONS],0,null,null);for(const a of s)i.addAction(a,!1)}this._rawBones.length=0,this._cacheRawMeshes.length=0,this._cacheMeshes.length=0,this._armature=null;for(let s in this._weightSlotPose)delete this._weightSlotPose[s];for(let s in this._weightBonePoses)delete this._weightBonePoses[s];for(let s in this._cacheBones)delete this._cacheBones[s];for(let s in this._slotChildActions)delete this._slotChildActions[s];return i}_parseBone(t){let e=0;if(e=l.TYPE in t&&typeof t[l.TYPE]=="string"?l._getBoneType(t[l.TYPE]):g._getNumber(t,l.TYPE,0),e===0){const s=this._armature.scale,a=D.borrowObject(Wt);return a.inheritTranslation=g._getBoolean(t,l.INHERIT_TRANSLATION,!0),a.inheritRotation=g._getBoolean(t,l.INHERIT_ROTATION,!0),a.inheritScale=g._getBoolean(t,l.INHERIT_SCALE,!0),a.inheritReflection=g._getBoolean(t,l.INHERIT_REFLECTION,!0),a.length=g._getNumber(t,l.LENGTH,0)*s,a.alpha=g._getNumber(t,l.ALPHA,1),a.name=g._getString(t,l.NAME,""),l.TRANSFORM in t&&this._parseTransform(t[l.TRANSFORM],a.transform,s),a}const i=D.borrowObject(me);return i.alpha=g._getNumber(t,l.ALPHA,1),i.name=g._getString(t,l.NAME,""),i.segmentX=g._getNumber(t,l.SEGMENT_X,0),i.segmentY=g._getNumber(t,l.SEGMENT_Y,0),this._parseGeometry(t,i.geometry),i}_parseIKConstraint(t){const e=this._armature.getBone(g._getString(t,l.BONE,""));if(e===null)return null;const i=this._armature.getBone(g._getString(t,l.TARGET,""));if(i===null)return null;const s=g._getNumber(t,l.CHAIN,0),a=D.borrowObject(Be);return a.scaleEnabled=g._getBoolean(t,l.SCALE,!1),a.bendPositive=g._getBoolean(t,l.BEND_POSITIVE,!0),a.weight=g._getNumber(t,l.WEIGHT,1),a.name=g._getString(t,l.NAME,""),a.type=0,a.target=i,s>0&&e.parent!==null?(a.root=e.parent,a.bone=e):(a.root=e,a.bone=null),a}_parsePathConstraint(t){const e=this._armature.getSlot(g._getString(t,l.TARGET,""));if(e===null)return null;const i=this._armature.defaultSkin;if(i===null)return null;const s=i.getDisplay(e.name,g._getString(t,l.TARGET_DISPLAY,e.name));if(s===null||!(s instanceof Bt))return null;const a=t[l.BONES];if(a===null||a.length===0)return null;const r=D.borrowObject(Pe);for(var n of(r.name=g._getString(t,l.NAME,""),r.type=1,r.pathSlot=e,r.pathDisplayData=s,r.target=e.parent,r.positionMode=l._getPositionMode(g._getString(t,l.POSITION_MODE,"")),r.spacingMode=l._getSpacingMode(g._getString(t,l.SPACING_MODE,"")),r.rotateMode=l._getRotateMode(g._getString(t,l.ROTATE_MODE,"")),r.position=g._getNumber(t,l.POSITION,0),r.spacing=g._getNumber(t,l.SPACING,0),r.rotateOffset=g._getNumber(t,l.ROTATE_OFFSET,0),r.rotateMix=g._getNumber(t,l.ROTATE_MIX,1),r.translateMix=g._getNumber(t,l.TRANSLATE_MIX,1),a)){const o=this._armature.getBone(n);o!==null&&(r.AddBone(o),r.root===null&&(r.root=o))}return r}_parseSlot(t,e){const i=D.borrowObject(ht);return i.displayIndex=g._getNumber(t,l.DISPLAY_INDEX,0),i.zOrder=e,i.zIndex=g._getNumber(t,l.Z_INDEX,0),i.alpha=g._getNumber(t,l.ALPHA,1),i.name=g._getString(t,l.NAME,""),i.parent=this._armature.getBone(g._getString(t,l.PARENT,"")),l.BLEND_MODE in t&&typeof t[l.BLEND_MODE]=="string"?i.blendMode=l._getBlendMode(t[l.BLEND_MODE]):i.blendMode=g._getNumber(t,l.BLEND_MODE,0),l.COLOR in t?(i.color=ht.createColor(),this._parseColorTransform(t[l.COLOR],i.color)):i.color=ht.DEFAULT_COLOR,l.ACTIONS in t&&(this._slotChildActions[i.name]=this._parseActionData(t[l.ACTIONS],0,null,null)),i}_parseSkin(t){const e=D.borrowObject(ve);if(e.name=g._getString(t,l.NAME,l.DEFAULT_NAME),e.name.length===0&&(e.name=l.DEFAULT_NAME),l.SLOT in t){const i=t[l.SLOT];this._skin=e;for(const s of i){const a=g._getString(s,l.NAME,""),r=this._armature.getSlot(a);if(r!==null){if(this._slot=r,l.DISPLAY in s){const n=s[l.DISPLAY];for(const o of n)o?e.addDisplay(a,this._parseDisplay(o)):e.addDisplay(a,null)}this._slot=null}}this._skin=null}return e}_parseDisplay(t){const e=g._getString(t,l.NAME,""),i=g._getString(t,l.PATH,"");let s=0,a=null;switch(s=l.TYPE in t&&typeof t[l.TYPE]=="string"?l._getDisplayType(t[l.TYPE]):g._getNumber(t,l.TYPE,s),s){case 0:{const r=a=D.borrowObject(le);r.name=e,r.path=i.length>0?i:e,this._parsePivot(t,r);break}case 1:{const r=a=D.borrowObject(oe);if(r.name=e,r.path=i.length>0?i:e,r.inheritAnimation=!0,l.ACTIONS in t){const n=this._parseActionData(t[l.ACTIONS],0,null,null);for(const o of n)r.addAction(o)}else if(this._slot.name in this._slotChildActions){const n=this._skin.getDisplays(this._slot.name);if(n===null?this._slot.displayIndex===0:this._slot.displayIndex===n.length){for(const o of this._slotChildActions[this._slot.name])r.addAction(o);delete this._slotChildActions[this._slot.name]}}break}case 2:{const r=a=D.borrowObject(he);r.geometry.inheritDeform=g._getBoolean(t,l.INHERIT_DEFORM,!0),r.name=e,r.path=i.length>0?i:e,l.SHARE in t?(r.geometry.data=this._data,this._cacheRawMeshes.push(t),this._cacheMeshes.push(r)):this._parseMesh(t,r);break}case 3:{const r=this._parseBoundingBox(t);if(r!==null){const n=a=D.borrowObject(_e);n.name=e,n.path=i.length>0?i:e,n.boundingBox=r}break}case 4:{const r=t[l.LENGTHS],n=a=D.borrowObject(Bt);n.closed=g._getBoolean(t,l.CLOSED,!1),n.constantSpeed=g._getBoolean(t,l.CONSTANT_SPEED,!1),n.name=e,n.path=i.length>0?i:e,n.curveLengths.length=r.length;for(let o=0,h=r.length;o<h;++o)n.curveLengths[o]=r[o];this._parsePath(t,n);break}}return a!==null&&l.TRANSFORM in t&&this._parseTransform(t[l.TRANSFORM],a.transform,this._armature.scale),a}_parsePath(t,e){this._parseGeometry(t,e.geometry)}_parsePivot(t,e){if(l.PIVOT in t){const i=t[l.PIVOT];e.pivot.x=g._getNumber(i,l.X,0),e.pivot.y=g._getNumber(i,l.Y,0)}else e.pivot.x=.5,e.pivot.y=.5}_parseMesh(t,e){if(this._parseGeometry(t,e.geometry),l.WEIGHTS in t){const i=t[l.SLOT_POSE],s=t[l.BONE_POSE],a=this._skin.name+"_"+this._slot.name+"_"+e.name;this._weightSlotPose[a]=i,this._weightBonePoses[a]=s}}_parseBoundingBox(t){let e=null,i=0;switch(i=l.SUB_TYPE in t&&typeof t[l.SUB_TYPE]=="string"?l._getBoundingBoxType(t[l.SUB_TYPE]):g._getNumber(t,l.SUB_TYPE,i),i){case 0:e=D.borrowObject(Qt);break;case 1:e=D.borrowObject(It);break;case 2:e=this._parsePolygonBoundingBox(t)}return e!==null&&(e.color=g._getNumber(t,l.COLOR,0),e.type!==0&&e.type!==1||(e.width=g._getNumber(t,l.WIDTH,0),e.height=g._getNumber(t,l.HEIGHT,0))),e}_parsePolygonBoundingBox(t){const e=D.borrowObject(we);if(l.VERTICES in t){const i=this._armature.scale,s=t[l.VERTICES],a=e.vertices;a.length=s.length;for(let r=0,n=s.length;r<n;r+=2){const o=s[r]*i,h=s[r+1]*i;a[r]=o,a[r+1]=h,r===0?(e.x=o,e.y=h,e.width=o,e.height=h):(o<e.x?e.x=o:o>e.width&&(e.width=o),h<e.y?e.y=h:h>e.height&&(e.height=h))}e.width-=e.x,e.height-=e.y}else console.warn(`Data error.
 Please reexport DragonBones Data to fixed the bug.`);return e}_parseAnimation(t){const e=D.borrowObject(Zt);if(e.blendType=l._getAnimationBlendType(g._getString(t,l.BLEND_TYPE,"")),e.frameCount=g._getNumber(t,l.DURATION,0),e.playTimes=g._getNumber(t,l.PLAY_TIMES,1),e.duration=e.frameCount/this._armature.frameRate,e.fadeInTime=g._getNumber(t,l.FADE_IN_TIME,0),e.scale=g._getNumber(t,l.SCALE,1),e.name=g._getString(t,l.NAME,l.DEFAULT_NAME),e.name.length===0&&(e.name=l.DEFAULT_NAME),e.frameIntOffset=this._frameIntArray.length,e.frameFloatOffset=this._frameFloatArray.length,e.frameOffset=this._frameArray.length,this._animation=e,l.FRAME in t){const i=t[l.FRAME],s=i.length;if(s>0)for(let a=0,r=0;a<s;++a){const n=i[a];this._parseActionDataInFrame(n,r,null,null),r+=g._getNumber(n,l.DURATION,1)}}if(l.Z_ORDER in t&&(this._animation.zOrderTimeline=this._parseTimeline(t[l.Z_ORDER],null,l.FRAME,1,0,0,this._parseZOrderFrame)),l.BONE in t){const i=t[l.BONE];for(const s of i)this._parseBoneTimeline(s)}if(l.SLOT in t){const i=t[l.SLOT];for(const s of i)this._parseSlotTimeline(s)}if(l.FFD in t){const i=t[l.FFD];for(const s of i){let a=g._getString(s,l.SKIN,l.DEFAULT_NAME);const r=g._getString(s,l.SLOT,""),n=g._getString(s,l.NAME,"");if(a.length===0&&(a=l.DEFAULT_NAME),this._slot=this._armature.getSlot(r),this._mesh=this._armature.getMesh(a,r,n),this._slot===null||this._mesh===null)continue;const o=this._parseTimeline(s,null,l.FRAME,22,2,0,this._parseSlotDeformFrame);o!==null&&this._animation.addSlotTimeline(r,o),this._slot=null,this._mesh=null}}if(l.IK in t){const i=t[l.IK];for(const s of i){const a=g._getString(s,l.NAME,"");if(this._armature.getConstraint(a)===null)continue;const r=this._parseTimeline(s,null,l.FRAME,30,1,2,this._parseIKConstraintFrame);r!==null&&this._animation.addConstraintTimeline(a,r)}}if(this._actionFrames.length>0&&(this._animation.actionTimeline=this._parseTimeline(null,this._actionFrames,"",0,0,0,this._parseActionFrame),this._actionFrames.length=0),l.TIMELINE in t){const i=t[l.TIMELINE];for(const s of i){const a=g._getNumber(s,l.TYPE,0),r=g._getString(s,l.NAME,"");let n=null;switch(a){case 0:case 1:break;case 20:case 23:case 60:case 24:case 40:case 41:if(a===20?(this._frameValueType=0,this._frameValueScale=1):(this._frameValueType=1,this._frameValueScale=a===23?1:a===40||a===41?1e4:100),this._frameDefaultValue=a===60||a===24||a===41?1:0,a===40&&e.blendType!==0){n=D.borrowObject(qt);const o=n;o.x=g._getNumber(s,l.X,0),o.y=g._getNumber(s,l.Y,0)}n=this._parseTimeline(s,null,l.FRAME,a,this._frameValueType,1,this._parseSingleValueFrame,n);break;case 11:case 12:case 13:case 30:case 42:a===30||a===42?(this._frameValueType=1,this._frameValueScale=a===42?1e4:100):(this._frameValueScale=a===12?F.DEG_RAD:1,this._frameValueType=2),this._frameDefaultValue=a===13||a===30?1:0,n=this._parseTimeline(s,null,l.FRAME,a,this._frameValueType,2,this._parseDoubleValueFrame);break;case 50:{const o=this._armature.getBone(r);if(o===null)continue;this._geometry=o.geometry,n=this._parseTimeline(s,null,l.FRAME,a,2,0,this._parseDeformFrame),this._geometry=null;break}case 22:this._geometry=null;for(const o in this._armature.skins){const h=this._armature.skins[o];for(const _ in h.displays){const u=h.displays[_];for(const m of u)if(m!==null&&m.name===r){this._geometry=m.geometry;break}}}if(this._geometry===null)continue;n=this._parseTimeline(s,null,l.FRAME,a,2,0,this._parseDeformFrame),this._geometry=null;break;case 21:n=this._parseTimeline(s,null,l.FRAME,a,1,1,this._parseSlotColorFrame)}if(n!==null)switch(a){case 0:case 1:break;case 11:case 12:case 13:case 50:case 60:this._animation.addBoneTimeline(r,n);break;case 20:case 21:case 22:case 23:case 24:this._animation.addSlotTimeline(r,n);break;case 30:this._animation.addConstraintTimeline(r,n);break;case 40:case 41:case 42:this._animation.addAnimationTimeline(r,n)}}}return this._animation=null,e}_parseTimeline(t,e,i,s,a,r,n,o=null){if(t!==null&&i.length>0&&i in t&&(e=t[i]),e===null)return null;const h=e.length;if(h===0)return null;const _=this._frameIntArray.length,u=this._frameFloatArray.length,m=this._timelineArray.length;switch(o===null&&(o=D.borrowObject(Mt)),o.type=s,o.offset=m,this._frameValueType=a,this._timeline=o,this._timelineArray.length+=5+h,t!==null?(this._timelineArray[m+0]=Math.round(100*g._getNumber(t,l.SCALE,1)),this._timelineArray[m+1]=Math.round(100*g._getNumber(t,l.OFFSET,0))):(this._timelineArray[m+0]=100,this._timelineArray[m+1]=0),this._timelineArray[m+2]=h,this._timelineArray[m+3]=r,this._frameValueType){case 0:this._timelineArray[m+4]=0;break;case 1:this._timelineArray[m+4]=_-this._animation.frameIntOffset;break;case 2:this._timelineArray[m+4]=u-this._animation.frameFloatOffset}if(h===1)o.frameIndicesOffset=-1,this._timelineArray[m+5+0]=n.call(this,e[0],0,0)-this._animation.frameOffset;else{const p=this._animation.frameCount+1,f=this._data.frameIndices,y=f.length;f.length+=p,o.frameIndicesOffset=y;for(let T=0,d=0,c=0,A=0;T<p;++T){if(c+A<=T&&d<h){const b=e[d];c=T,A=d===h-1?this._animation.frameCount-c:b instanceof Tt?this._actionFrames[d+1].frameStart-c:g._getNumber(b,l.DURATION,1),this._timelineArray[m+5+d]=n.call(this,b,c,A)-this._animation.frameOffset,d++}f[y+T]=d-1}}return this._timeline=null,o}_parseBoneTimeline(t){const e=this._armature.getBone(g._getString(t,l.NAME,""));if(e!==null){if(this._bone=e,this._slot=this._armature.getSlot(this._bone.name),l.TRANSLATE_FRAME in t){this._frameDefaultValue=0,this._frameValueScale=1;const i=this._parseTimeline(t,null,l.TRANSLATE_FRAME,11,2,2,this._parseDoubleValueFrame);i!==null&&this._animation.addBoneTimeline(e.name,i)}if(l.ROTATE_FRAME in t){this._frameDefaultValue=0,this._frameValueScale=1;const i=this._parseTimeline(t,null,l.ROTATE_FRAME,12,2,2,this._parseBoneRotateFrame);i!==null&&this._animation.addBoneTimeline(e.name,i)}if(l.SCALE_FRAME in t){this._frameDefaultValue=1,this._frameValueScale=1;const i=this._parseTimeline(t,null,l.SCALE_FRAME,13,2,2,this._parseBoneScaleFrame);i!==null&&this._animation.addBoneTimeline(e.name,i)}if(l.FRAME in t){const i=this._parseTimeline(t,null,l.FRAME,10,2,6,this._parseBoneAllFrame);i!==null&&this._animation.addBoneTimeline(e.name,i)}this._bone=null,this._slot=null}}_parseSlotTimeline(t){const e=this._armature.getSlot(g._getString(t,l.NAME,""));if(e===null)return;let i=null,s=null;this._slot=e,i=l.DISPLAY_FRAME in t?this._parseTimeline(t,null,l.DISPLAY_FRAME,20,0,0,this._parseSlotDisplayFrame):this._parseTimeline(t,null,l.FRAME,20,0,0,this._parseSlotDisplayFrame),s=l.COLOR_FRAME in t?this._parseTimeline(t,null,l.COLOR_FRAME,21,1,1,this._parseSlotColorFrame):this._parseTimeline(t,null,l.FRAME,21,1,1,this._parseSlotColorFrame),i!==null&&this._animation.addSlotTimeline(e.name,i),s!==null&&this._animation.addSlotTimeline(e.name,s),this._slot=null}_parseFrame(t,e,i){const s=this._frameArray.length;return this._frameArray.length+=1,this._frameArray[s+0]=e,s}_parseTweenFrame(t,e,i){const s=this._parseFrame(t,e,i);if(i>0)if(l.CURVE in t){const a=i+1;this._helpArray.length=a;const r=this._samplingEasingCurve(t[l.CURVE],this._helpArray);this._frameArray.length+=2+this._helpArray.length,this._frameArray[s+1]=2,this._frameArray[s+2]=r?a:-a;for(let n=0;n<a;++n)this._frameArray[s+3+n]=Math.round(1e4*this._helpArray[n])}else{let r=-2;l.TWEEN_EASING in t&&(r=g._getNumber(t,l.TWEEN_EASING,-2)),r===-2?(this._frameArray.length+=1,this._frameArray[s+1]=0):r===0?(this._frameArray.length+=1,this._frameArray[s+1]=1):r<0?(this._frameArray.length+=2,this._frameArray[s+1]=3,this._frameArray[s+2]=Math.round(100*-r)):r<=1?(this._frameArray.length+=2,this._frameArray[s+1]=4,this._frameArray[s+2]=Math.round(100*r)):(this._frameArray.length+=2,this._frameArray[s+1]=5,this._frameArray[s+2]=Math.round(100*r-100))}else this._frameArray.length+=1,this._frameArray[s+1]=0;return s}_parseSingleValueFrame(t,e,i){let s=0;switch(this._frameValueType){case 0:s=this._parseFrame(t,e,i),this._frameArray.length+=1,this._frameArray[s+1]=g._getNumber(t,l.VALUE,this._frameDefaultValue);break;case 1:{s=this._parseTweenFrame(t,e,i);const a=this._frameIntArray.length;this._frameIntArray.length+=1,this._frameIntArray[a]=Math.round(g._getNumber(t,l.VALUE,this._frameDefaultValue)*this._frameValueScale);break}case 2:{s=this._parseTweenFrame(t,e,i);const a=this._frameFloatArray.length;this._frameFloatArray.length+=1,this._frameFloatArray[a]=g._getNumber(t,l.VALUE,this._frameDefaultValue)*this._frameValueScale;break}}return s}_parseDoubleValueFrame(t,e,i){let s=0;switch(this._frameValueType){case 0:s=this._parseFrame(t,e,i),this._frameArray.length+=2,this._frameArray[s+1]=g._getNumber(t,l.X,this._frameDefaultValue),this._frameArray[s+2]=g._getNumber(t,l.Y,this._frameDefaultValue);break;case 1:{s=this._parseTweenFrame(t,e,i);const a=this._frameIntArray.length;this._frameIntArray.length+=2,this._frameIntArray[a]=Math.round(g._getNumber(t,l.X,this._frameDefaultValue)*this._frameValueScale),this._frameIntArray[a+1]=Math.round(g._getNumber(t,l.Y,this._frameDefaultValue)*this._frameValueScale);break}case 2:{s=this._parseTweenFrame(t,e,i);const a=this._frameFloatArray.length;this._frameFloatArray.length+=2,this._frameFloatArray[a]=g._getNumber(t,l.X,this._frameDefaultValue)*this._frameValueScale,this._frameFloatArray[a+1]=g._getNumber(t,l.Y,this._frameDefaultValue)*this._frameValueScale;break}}return s}_parseActionFrame(t,e,i){const s=this._frameArray.length,a=t.actions.length;this._frameArray.length+=2+a,this._frameArray[s+0]=e,this._frameArray[s+0+1]=a;for(let r=0;r<a;++r)this._frameArray[s+0+2+r]=t.actions[r];return s}_parseZOrderFrame(t,e,i){const s=this._parseFrame(t,e,i);if(l.Z_ORDER in t){const a=t[l.Z_ORDER];if(a.length>0){const r=this._armature.sortedSlots.length,n=new Array(r-a.length/2),o=new Array(r);for(let m=0;m<n.length;++m)n[m]=0;for(let m=0;m<r;++m)o[m]=-1;let h=0,_=0;for(let m=0,p=a.length;m<p;m+=2){const f=a[m],y=a[m+1];for(;h!==f;)n[_++]=h++;o[h+y]=h++}for(;h<r;)n[_++]=h++;this._frameArray.length+=1+r,this._frameArray[s+1]=r;let u=r;for(;u--;)o[u]===-1?this._frameArray[s+2+u]=n[--_]||0:this._frameArray[s+2+u]=o[u]||0;return s}}return this._frameArray.length+=1,this._frameArray[s+1]=0,s}_parseBoneAllFrame(t,e,i){this._helpTransform.identity(),l.TRANSFORM in t&&this._parseTransform(t[l.TRANSFORM],this._helpTransform,1);let s=this._helpTransform.rotation;e!==0&&(this._prevClockwise===0?s=this._prevRotation+F.normalizeRadian(s-this._prevRotation):((this._prevClockwise>0?s>=this._prevRotation:s<=this._prevRotation)&&(this._prevClockwise=this._prevClockwise>0?this._prevClockwise-1:this._prevClockwise+1),s=this._prevRotation+s-this._prevRotation+F.PI_D*this._prevClockwise)),this._prevClockwise=g._getNumber(t,l.TWEEN_ROTATE,0),this._prevRotation=s;const a=this._parseTweenFrame(t,e,i);let r=this._frameFloatArray.length;return this._frameFloatArray.length+=6,this._frameFloatArray[r++]=this._helpTransform.x,this._frameFloatArray[r++]=this._helpTransform.y,this._frameFloatArray[r++]=s,this._frameFloatArray[r++]=this._helpTransform.skew,this._frameFloatArray[r++]=this._helpTransform.scaleX,this._frameFloatArray[r++]=this._helpTransform.scaleY,this._parseActionDataInFrame(t,e,this._bone,this._slot),a}_parseBoneTranslateFrame(t,e,i){const s=this._parseTweenFrame(t,e,i);let a=this._frameFloatArray.length;return this._frameFloatArray.length+=2,this._frameFloatArray[a++]=g._getNumber(t,l.X,0),this._frameFloatArray[a++]=g._getNumber(t,l.Y,0),s}_parseBoneRotateFrame(t,e,i){let s=g._getNumber(t,l.ROTATE,0)*F.DEG_RAD;e!==0&&(this._prevClockwise===0?s=this._prevRotation+F.normalizeRadian(s-this._prevRotation):((this._prevClockwise>0?s>=this._prevRotation:s<=this._prevRotation)&&(this._prevClockwise=this._prevClockwise>0?this._prevClockwise-1:this._prevClockwise+1),s=this._prevRotation+s-this._prevRotation+F.PI_D*this._prevClockwise)),this._prevClockwise=g._getNumber(t,l.CLOCK_WISE,0),this._prevRotation=s;const a=this._parseTweenFrame(t,e,i);let r=this._frameFloatArray.length;return this._frameFloatArray.length+=2,this._frameFloatArray[r++]=s,this._frameFloatArray[r++]=g._getNumber(t,l.SKEW,0)*F.DEG_RAD,a}_parseBoneScaleFrame(t,e,i){const s=this._parseTweenFrame(t,e,i);let a=this._frameFloatArray.length;return this._frameFloatArray.length+=2,this._frameFloatArray[a++]=g._getNumber(t,l.X,1),this._frameFloatArray[a++]=g._getNumber(t,l.Y,1),s}_parseSlotDisplayFrame(t,e,i){const s=this._parseFrame(t,e,i);return this._frameArray.length+=1,l.VALUE in t?this._frameArray[s+1]=g._getNumber(t,l.VALUE,0):this._frameArray[s+1]=g._getNumber(t,l.DISPLAY_INDEX,0),this._parseActionDataInFrame(t,e,this._slot.parent,this._slot),s}_parseSlotColorFrame(t,e,i){const s=this._parseTweenFrame(t,e,i);let a=-1;if(l.VALUE in t||l.COLOR in t){const n=l.VALUE in t?t[l.VALUE]:t[l.COLOR];for(let o in n){this._parseColorTransform(n,this._helpColorTransform),a=this._colorArray.length,this._colorArray.length+=8,this._colorArray[a++]=Math.round(100*this._helpColorTransform.alphaMultiplier),this._colorArray[a++]=Math.round(100*this._helpColorTransform.redMultiplier),this._colorArray[a++]=Math.round(100*this._helpColorTransform.greenMultiplier),this._colorArray[a++]=Math.round(100*this._helpColorTransform.blueMultiplier),this._colorArray[a++]=Math.round(this._helpColorTransform.alphaOffset),this._colorArray[a++]=Math.round(this._helpColorTransform.redOffset),this._colorArray[a++]=Math.round(this._helpColorTransform.greenOffset),this._colorArray[a++]=Math.round(this._helpColorTransform.blueOffset),a-=8;break}}a<0&&(this._defaultColorOffset<0&&(this._defaultColorOffset=a=this._colorArray.length,this._colorArray.length+=8,this._colorArray[a++]=100,this._colorArray[a++]=100,this._colorArray[a++]=100,this._colorArray[a++]=100,this._colorArray[a++]=0,this._colorArray[a++]=0,this._colorArray[a++]=0,this._colorArray[a++]=0),a=this._defaultColorOffset);const r=this._frameIntArray.length;return this._frameIntArray.length+=1,this._frameIntArray[r]=a,s}_parseSlotDeformFrame(t,e,i){const s=this._frameFloatArray.length,a=this._parseTweenFrame(t,e,i),r=l.VERTICES in t?t[l.VERTICES]:null,n=g._getNumber(t,l.OFFSET,0),o=this._intArray[this._mesh.geometry.offset+0],h=this._mesh.parent.name+"_"+this._slot.name+"_"+this._mesh.name,_=this._mesh.geometry.weight;let u=0,m=0,p=0,f=0;if(_!==null){const y=this._weightSlotPose[h];this._helpMatrixA.copyFromArray(y,0),this._frameFloatArray.length+=2*_.count,p=_.offset+2+_.bones.length}else this._frameFloatArray.length+=2*o;for(let y=0;y<2*o;y+=2)if(r===null?(u=0,m=0):(u=y<n||y-n>=r.length?0:r[y-n],m=y+1<n||y+1-n>=r.length?0:r[y+1-n]),_!==null){const T=this._weightBonePoses[h],d=this._intArray[p++];this._helpMatrixA.transformPoint(u,m,this._helpPoint,!0),u=this._helpPoint.x,m=this._helpPoint.y;for(let c=0;c<d;++c){const A=this._intArray[p++];this._helpMatrixB.copyFromArray(T,7*A+1),this._helpMatrixB.invert(),this._helpMatrixB.transformPoint(u,m,this._helpPoint,!0),this._frameFloatArray[s+f++]=this._helpPoint.x,this._frameFloatArray[s+f++]=this._helpPoint.y}}else this._frameFloatArray[s+y]=u,this._frameFloatArray[s+y+1]=m;if(e===0){const y=this._frameIntArray.length;this._frameIntArray.length+=5,this._frameIntArray[y+0]=this._mesh.geometry.offset,this._frameIntArray[y+1]=this._frameFloatArray.length-s,this._frameIntArray[y+2]=this._frameFloatArray.length-s,this._frameIntArray[y+3]=0,this._frameIntArray[y+4]=s-this._animation.frameFloatOffset,this._timelineArray[this._timeline.offset+3]=y-this._animation.frameIntOffset}return a}_parseIKConstraintFrame(t,e,i){const s=this._parseTweenFrame(t,e,i);let a=this._frameIntArray.length;return this._frameIntArray.length+=2,this._frameIntArray[a++]=g._getBoolean(t,l.BEND_POSITIVE,!0)?1:0,this._frameIntArray[a++]=Math.round(100*g._getNumber(t,l.WEIGHT,1)),s}_parseActionData(t,e,i,s){const a=new Array;if(typeof t=="string"){const r=D.borrowObject(Ut);r.type=e,r.name=t,r.bone=i,r.slot=s,a.push(r)}else if(t instanceof Array)for(const r of t){const n=D.borrowObject(Ut);if(l.GOTO_AND_PLAY in r?(n.type=0,n.name=g._getString(r,l.GOTO_AND_PLAY,"")):(l.TYPE in r&&typeof r[l.TYPE]=="string"?n.type=l._getActionType(r[l.TYPE]):n.type=g._getNumber(r,l.TYPE,e),n.name=g._getString(r,l.NAME,"")),l.BONE in r){const h=g._getString(r,l.BONE,"");n.bone=this._armature.getBone(h)}else n.bone=i;if(l.SLOT in r){const h=g._getString(r,l.SLOT,"");n.slot=this._armature.getSlot(h)}else n.slot=s;let o=null;if(l.INTS in r){o===null&&(o=D.borrowObject(yt));const h=r[l.INTS];for(const _ of h)o.addInt(_)}if(l.FLOATS in r){o===null&&(o=D.borrowObject(yt));const h=r[l.FLOATS];for(const _ of h)o.addFloat(_)}if(l.STRINGS in r){o===null&&(o=D.borrowObject(yt));const h=r[l.STRINGS];for(const _ of h)o.addString(_)}n.data=o,a.push(n)}return a}_parseDeformFrame(t,e,i){const s=this._frameFloatArray.length,a=this._parseTweenFrame(t,e,i),r=l.VERTICES in t?t[l.VERTICES]:l.VALUE in t?t[l.VALUE]:null,n=g._getNumber(t,l.OFFSET,0),o=this._intArray[this._geometry.offset+0];let h=0,_=0;if(this._geometry.weight===null){this._frameFloatArray.length+=2*o;for(let u=0;u<2*o;u+=2)r!==null?(h=u<n||u-n>=r.length?0:r[u-n],_=u+1<n||u+1-n>=r.length?0:r[u+1-n]):(h=0,_=0),this._frameFloatArray[s+u]=h,this._frameFloatArray[s+u+1]=_}if(e===0){const u=this._frameIntArray.length;this._frameIntArray.length+=5,this._frameIntArray[u+0]=this._geometry.offset,this._frameIntArray[u+1]=this._frameFloatArray.length-s,this._frameIntArray[u+2]=this._frameFloatArray.length-s,this._frameIntArray[u+3]=0,this._frameIntArray[u+4]=s-this._animation.frameFloatOffset,this._timelineArray[this._timeline.offset+3]=u-this._animation.frameIntOffset}return a}_parseTransform(t,e,i){e.x=g._getNumber(t,l.X,0)*i,e.y=g._getNumber(t,l.Y,0)*i,l.ROTATE in t||l.SKEW in t?(e.rotation=F.normalizeRadian(g._getNumber(t,l.ROTATE,0)*F.DEG_RAD),e.skew=F.normalizeRadian(g._getNumber(t,l.SKEW,0)*F.DEG_RAD)):(l.SKEW_X in t||l.SKEW_Y in t)&&(e.rotation=F.normalizeRadian(g._getNumber(t,l.SKEW_Y,0)*F.DEG_RAD),e.skew=F.normalizeRadian(g._getNumber(t,l.SKEW_X,0)*F.DEG_RAD)-e.rotation),e.scaleX=g._getNumber(t,l.SCALE_X,1),e.scaleY=g._getNumber(t,l.SCALE_Y,1)}_parseColorTransform(t,e){e.alphaMultiplier=.01*g._getNumber(t,l.ALPHA_MULTIPLIER,100),e.redMultiplier=.01*g._getNumber(t,l.RED_MULTIPLIER,100),e.greenMultiplier=.01*g._getNumber(t,l.GREEN_MULTIPLIER,100),e.blueMultiplier=.01*g._getNumber(t,l.BLUE_MULTIPLIER,100),e.alphaOffset=g._getNumber(t,l.ALPHA_OFFSET,0),e.redOffset=g._getNumber(t,l.RED_OFFSET,0),e.greenOffset=g._getNumber(t,l.GREEN_OFFSET,0),e.blueOffset=g._getNumber(t,l.BLUE_OFFSET,0)}_parseGeometry(t,e){const i=t[l.VERTICES],s=Math.floor(i.length/2);let a=0;const r=this._intArray.length,n=this._floatArray.length;e.offset=r,e.data=this._data,this._intArray.length+=4,this._intArray[r+0]=s,this._intArray[r+2]=n,this._intArray[r+3]=-1,this._floatArray.length+=2*s;for(let o=0,h=2*s;o<h;++o)this._floatArray[n+o]=i[o];if(l.TRIANGLES in t){const o=t[l.TRIANGLES];a=Math.floor(o.length/3),this._intArray.length+=3*a;for(let h=0,_=3*a;h<_;++h)this._intArray[r+4+h]=o[h]}if(this._intArray[r+1]=a,l.UVS in t){const o=t[l.UVS],h=n+2*s;this._floatArray.length+=2*s;for(let _=0,u=2*s;_<u;++_)this._floatArray[h+_]=o[_]}if(l.WEIGHTS in t){const o=t[l.WEIGHTS],h=Math.floor(o.length-s)/2,_=this._intArray.length,u=this._floatArray.length;let m=0;const p=this._armature.sortedBones,f=D.borrowObject(Ht);if(f.count=h,f.offset=_,this._intArray.length+=2+m+s+h,this._intArray[_+1]=u,l.BONE_POSE in t){const y=t[l.SLOT_POSE],T=t[l.BONE_POSE],d=new Array;m=Math.floor(T.length/7),d.length=m;for(let c=0;c<m;++c){const A=T[7*c],b=this._rawBones[A];f.addBone(b),d[c]=A,this._intArray[_+2+c]=p.indexOf(b)}this._floatArray.length+=3*h,this._helpMatrixA.copyFromArray(y,0);for(let c=0,A=0,b=_+2+m,E=u;c<s;++c){const O=2*c,S=this._intArray[b++]=o[A++];let x=this._floatArray[n+O],I=this._floatArray[n+O+1];this._helpMatrixA.transformPoint(x,I,this._helpPoint),x=this._helpPoint.x,I=this._helpPoint.y;for(let C=0;C<S;++C){const k=o[A++],R=d.indexOf(k);this._helpMatrixB.copyFromArray(T,7*R+1),this._helpMatrixB.invert(),this._helpMatrixB.transformPoint(x,I,this._helpPoint),this._intArray[b++]=R,this._floatArray[E++]=o[A++],this._floatArray[E++]=this._helpPoint.x,this._floatArray[E++]=this._helpPoint.y}}}else{const y=t[l.BONES];m=y.length;for(let T=0;T<m;T++){const d=y[T],c=this._rawBones[d];f.addBone(c),this._intArray[_+2+T]=p.indexOf(c)}this._floatArray.length+=3*h;for(let T=0,d=0,c=0,A=_+2+m,b=u;T<h;T++){const E=o[d++];this._intArray[A++]=E;for(let O=0;O<E;O++){const S=o[d++],x=o[d++],I=i[c++],C=i[c++];this._intArray[A++]=y.indexOf(S),this._floatArray[b++]=x,this._floatArray[b++]=I,this._floatArray[b++]=C}}}e.weight=f}}_parseArray(t){this._intArray.length=0,this._floatArray.length=0,this._frameIntArray.length=0,this._frameFloatArray.length=0,this._frameArray.length=0,this._timelineArray.length=0,this._colorArray.length=0}_modifyArray(){this._intArray.length%Int16Array.BYTES_PER_ELEMENT!=0&&this._intArray.push(0),this._frameIntArray.length%Int16Array.BYTES_PER_ELEMENT!=0&&this._frameIntArray.push(0),this._frameArray.length%Int16Array.BYTES_PER_ELEMENT!=0&&this._frameArray.push(0),this._timelineArray.length%Uint16Array.BYTES_PER_ELEMENT!=0&&this._timelineArray.push(0),this._timelineArray.length%Int16Array.BYTES_PER_ELEMENT!=0&&this._colorArray.push(0);const t=this._intArray.length*Int16Array.BYTES_PER_ELEMENT,e=this._floatArray.length*Float32Array.BYTES_PER_ELEMENT,i=this._frameIntArray.length*Int16Array.BYTES_PER_ELEMENT,s=this._frameFloatArray.length*Float32Array.BYTES_PER_ELEMENT,a=this._frameArray.length*Int16Array.BYTES_PER_ELEMENT,r=this._timelineArray.length*Uint16Array.BYTES_PER_ELEMENT,n=this._colorArray.length*Int16Array.BYTES_PER_ELEMENT,o=new ArrayBuffer(t+e+i+s+a+r+n),h=new Int16Array(o,0,this._intArray.length),_=new Float32Array(o,t,this._floatArray.length),u=new Int16Array(o,t+e,this._frameIntArray.length),m=new Float32Array(o,t+e+i,this._frameFloatArray.length),p=new Int16Array(o,t+e+i+s,this._frameArray.length),f=new Uint16Array(o,t+e+i+s+a,this._timelineArray.length),y=new Int16Array(o,t+e+i+s+a+r,this._colorArray.length);for(let T=0,d=this._intArray.length;T<d;++T)h[T]=this._intArray[T];for(let T=0,d=this._floatArray.length;T<d;++T)_[T]=this._floatArray[T];for(let T=0,d=this._frameIntArray.length;T<d;++T)u[T]=this._frameIntArray[T];for(let T=0,d=this._frameFloatArray.length;T<d;++T)m[T]=this._frameFloatArray[T];for(let T=0,d=this._frameArray.length;T<d;++T)p[T]=this._frameArray[T];for(let T=0,d=this._timelineArray.length;T<d;++T)f[T]=this._timelineArray[T];for(let T=0,d=this._colorArray.length;T<d;++T)y[T]=this._colorArray[T];this._data.binary=o,this._data.intArray=h,this._data.floatArray=_,this._data.frameIntArray=u,this._data.frameFloatArray=m,this._data.frameArray=p,this._data.timelineArray=f,this._data.colorArray=y,this._defaultColorOffset=-1}parseDragonBonesData(t,e=1){console.assert(t!=null,"Data error.");const i=g._getString(t,l.VERSION,""),s=g._getString(t,l.COMPATIBLE_VERSION,"");if(l.DATA_VERSIONS.indexOf(i)>=0||l.DATA_VERSIONS.indexOf(s)>=0){const a=D.borrowObject(Ne);if(a.version=i,a.name=g._getString(t,l.NAME,""),a.frameRate=g._getNumber(t,l.FRAME_RATE,24),a.frameRate===0&&(a.frameRate=24),l.ARMATURE in t){this._data=a,this._parseArray(t);const r=t[l.ARMATURE];for(const n of r)a.addArmature(this._parseArmature(n,e));this._data.binary||this._modifyArray(),l.STAGE in t?a.stage=a.getArmature(g._getString(t,l.STAGE,"")):a.armatureNames.length>0&&(a.stage=a.getArmature(a.armatureNames[0])),this._data=null}return l.TEXTURE_ATLAS in t&&(this._rawTextureAtlases=t[l.TEXTURE_ATLAS]),a}return console.assert(!1,"Nonsupport data version: "+i+`
Please convert DragonBones data to support version.
Read more: https://github.com/DragonBones/Tools/`),null}parseTextureAtlasData(t,e,i=1){if(console.assert(t!==void 0),t===null){if(this._rawTextureAtlases===null||this._rawTextureAtlases.length===0)return!1;const s=this._rawTextureAtlases[this._rawTextureAtlasIndex++];return this.parseTextureAtlasData(s,e,i),this._rawTextureAtlasIndex>=this._rawTextureAtlases.length&&(this._rawTextureAtlasIndex=0,this._rawTextureAtlases=null),!0}if(e.width=g._getNumber(t,l.WIDTH,0),e.height=g._getNumber(t,l.HEIGHT,0),e.scale=i===1?1/g._getNumber(t,l.SCALE,1):i,e.name=g._getString(t,l.NAME,""),e.imagePath=g._getString(t,l.IMAGE_PATH,""),l.SUB_TEXTURE in t){const s=t[l.SUB_TEXTURE];for(let a=0,r=s.length;a<r;++a){const n=s[a],o=g._getNumber(n,l.FRAME_WIDTH,-1),h=g._getNumber(n,l.FRAME_HEIGHT,-1),_=e.createTexture();_.rotated=g._getBoolean(n,l.ROTATED,!1),_.name=g._getString(n,l.NAME,""),_.region.x=g._getNumber(n,l.X,0),_.region.y=g._getNumber(n,l.Y,0),_.region.width=g._getNumber(n,l.WIDTH,0),_.region.height=g._getNumber(n,l.HEIGHT,0),o>0&&h>0&&(_.frame=ee.createRectangle(),_.frame.x=g._getNumber(n,l.FRAME_X,0),_.frame.y=g._getNumber(n,l.FRAME_Y,0),_.frame.width=o,_.frame.height=h),e.addTexture(_)}}return!0}static getInstance(){return g._objectDataParserInstance===null&&(g._objectDataParserInstance=new g),g._objectDataParserInstance}}g._objectDataParserInstance=null;class Tt{constructor(){this.frameStart=0,this.actions=[]}}let se=class st extends g{_inRange(t,e,i){return e<=t&&t<=i}_decodeUTF8(t){let e,i=0,s="",a=0,r=0,n=0,o=0;for(;t.length>i;){let h=t[i++];if(h===-1)e=r!==0?65533:-1;else if(r===0)this._inRange(h,0,127)?e=h:(this._inRange(h,194,223)?(r=1,o=128,a=h-192):this._inRange(h,224,239)?(r=2,o=2048,a=h-224):this._inRange(h,240,244)&&(r=3,o=65536,a=h-240),a*=Math.pow(64,r),e=null);else if(this._inRange(h,128,191))if(n+=1,a+=(h-128)*Math.pow(64,r-n),n!==r)e=null;else{let _=a,u=o;a=0,r=0,n=0,o=0,e=this._inRange(_,u,1114111)&&!this._inRange(_,55296,57343)?_:h}else a=0,r=0,n=0,o=0,i--,e=h;e!==null&&e!==-1&&(e<=65535?e>0&&(s+=String.fromCharCode(e)):(e-=65536,s+=String.fromCharCode(55296+(e>>10&1023)),s+=String.fromCharCode(56320+(1023&e))))}return s}_parseBinaryTimeline(t,e,i=null){const s=i!==null?i:D.borrowObject(Mt);s.type=t,s.offset=e,this._timeline=s;const a=this._timelineArrayBuffer[s.offset+2];if(a===1)s.frameIndicesOffset=-1;else{let r=0;const n=this._animation.frameCount+1,o=this._data.frameIndices;r=o.length,o.length+=n,s.frameIndicesOffset=r;for(let h=0,_=0,u=0,m=0;h<n;++h)u+m<=h&&_<a&&(u=this._frameArrayBuffer[this._animation.frameOffset+this._timelineArrayBuffer[s.offset+5+_]],m=_===a-1?this._animation.frameCount-u:this._frameArrayBuffer[this._animation.frameOffset+this._timelineArrayBuffer[s.offset+5+_+1]]-u,_++),o[r+h]=_-1}return this._timeline=null,s}_parseAnimation(t){const e=D.borrowObject(Zt);e.blendType=l._getAnimationBlendType(g._getString(t,l.BLEND_TYPE,"")),e.frameCount=g._getNumber(t,l.DURATION,0),e.playTimes=g._getNumber(t,l.PLAY_TIMES,1),e.duration=e.frameCount/this._armature.frameRate,e.fadeInTime=g._getNumber(t,l.FADE_IN_TIME,0),e.scale=g._getNumber(t,l.SCALE,1),e.name=g._getString(t,l.NAME,l.DEFAULT_NAME),e.name.length===0&&(e.name=l.DEFAULT_NAME);const i=t[l.OFFSET];if(e.frameIntOffset=i[0],e.frameFloatOffset=i[1],e.frameOffset=i[2],this._animation=e,l.ACTION in t&&(e.actionTimeline=this._parseBinaryTimeline(0,t[l.ACTION])),l.Z_ORDER in t&&(e.zOrderTimeline=this._parseBinaryTimeline(1,t[l.Z_ORDER])),l.BONE in t){const s=t[l.BONE];for(let a in s){const r=s[a],n=this._armature.getBone(a);if(n!==null)for(let o=0,h=r.length;o<h;o+=2){const _=r[o],u=r[o+1],m=this._parseBinaryTimeline(_,u);this._animation.addBoneTimeline(n.name,m)}}}if(l.SLOT in t){const s=t[l.SLOT];for(let a in s){const r=s[a],n=this._armature.getSlot(a);if(n!==null)for(let o=0,h=r.length;o<h;o+=2){const _=r[o],u=r[o+1],m=this._parseBinaryTimeline(_,u);this._animation.addSlotTimeline(n.name,m)}}}if(l.CONSTRAINT in t){const s=t[l.CONSTRAINT];for(let a in s){const r=s[a],n=this._armature.getConstraint(a);if(n!==null)for(let o=0,h=r.length;o<h;o+=2){const _=r[o],u=r[o+1],m=this._parseBinaryTimeline(_,u);this._animation.addConstraintTimeline(n.name,m)}}}if(l.TIMELINE in t){const s=t[l.TIMELINE];for(const a of s){const r=g._getNumber(a,l.OFFSET,0);if(r>=0){const n=g._getNumber(a,l.TYPE,0),o=g._getString(a,l.NAME,"");let h=null;if(n===40&&e.blendType!==0){h=D.borrowObject(qt);const _=h;_.x=g._getNumber(a,l.X,0),_.y=g._getNumber(a,l.Y,0)}switch(h=this._parseBinaryTimeline(n,r,h),n){case 0:case 1:break;case 11:case 12:case 13:case 50:case 60:this._animation.addBoneTimeline(o,h);break;case 20:case 21:case 22:case 23:case 24:this._animation.addSlotTimeline(o,h);break;case 30:this._animation.addConstraintTimeline(o,h);break;case 40:case 41:case 42:this._animation.addAnimationTimeline(o,h)}}}}return this._animation=null,e}_parseGeometry(t,e){e.offset=t[l.OFFSET],e.data=this._data;let i=this._intArrayBuffer[e.offset+3];if(i<-1&&(i+=65536),i>=0){const s=D.borrowObject(Ht),a=this._intArrayBuffer[e.offset+0],r=this._intArrayBuffer[i+0];s.offset=i;for(let h=0;h<r;++h){const _=this._intArrayBuffer[i+2+h];s.addBone(this._rawBones[_])}let n=i+2+r,o=0;for(let h=0,_=a;h<_;++h){const u=this._intArrayBuffer[n++];o+=u,n+=u}s.count=o,e.weight=s}}_parseArray(t){const e=t[l.OFFSET],i=e[1],s=e[3],a=e[5],r=e[7],n=e[9],o=e[11],h=e.length>12?e[13]:0,_=new Int16Array(this._binary,this._binaryOffset+e[0],i/Int16Array.BYTES_PER_ELEMENT),u=new Float32Array(this._binary,this._binaryOffset+e[2],s/Float32Array.BYTES_PER_ELEMENT),m=new Int16Array(this._binary,this._binaryOffset+e[4],a/Int16Array.BYTES_PER_ELEMENT),p=new Float32Array(this._binary,this._binaryOffset+e[6],r/Float32Array.BYTES_PER_ELEMENT),f=new Int16Array(this._binary,this._binaryOffset+e[8],n/Int16Array.BYTES_PER_ELEMENT),y=new Uint16Array(this._binary,this._binaryOffset+e[10],o/Uint16Array.BYTES_PER_ELEMENT),T=h>0?new Int16Array(this._binary,this._binaryOffset+e[12],h/Uint16Array.BYTES_PER_ELEMENT):_;this._data.binary=this._binary,this._data.intArray=this._intArrayBuffer=_,this._data.floatArray=u,this._data.frameIntArray=m,this._data.frameFloatArray=p,this._data.frameArray=this._frameArrayBuffer=f,this._data.timelineArray=this._timelineArrayBuffer=y,this._data.colorArray=T}parseDragonBonesData(t,e=1){console.assert(t!=null&&t instanceof ArrayBuffer,"Data error.");const i=new Uint8Array(t,0,8);if(i[0]!==68||i[1]!==66||i[2]!==68||i[3]!==84)return console.assert(!1,"Nonsupport data."),null;const s=new Uint32Array(t,8,1)[0],a=new Uint8Array(t,12,s),r=this._decodeUTF8(a),n=JSON.parse(r);return this._binaryOffset=12+s,this._binary=t,super.parseDragonBonesData(n,e)}static getInstance(){return st._binaryDataParserInstance===null&&(st._binaryDataParserInstance=new st),st._binaryDataParserInstance}};se._binaryDataParserInstance=null;let xt=class J{constructor(t=null){this.autoSearch=!1,this._dragonBonesDataMap={},this._textureAtlasDataMap={},this._dragonBones=null,this._dataParser=null,J._objectParser===null&&(J._objectParser=new g),J._binaryParser===null&&(J._binaryParser=new se),this._dataParser=t!==null?t:J._objectParser}_isSupportMesh(){return!0}_getTextureData(t,e){if(t in this._textureAtlasDataMap)for(const i of this._textureAtlasDataMap[t]){const s=i.getTexture(e);if(s!==null)return s}if(this.autoSearch){for(let i in this._textureAtlasDataMap)for(const s of this._textureAtlasDataMap[i])if(s.autoSearch){const a=s.getTexture(e);if(a!==null)return a}}return null}_fillBuildArmaturePackage(t,e,i,s,a){let r=null,n=null;if(e.length>0&&e in this._dragonBonesDataMap&&(r=this._dragonBonesDataMap[e],n=r.getArmature(i)),n===null&&(e.length===0||this.autoSearch)){for(let o in this._dragonBonesDataMap)if(r=this._dragonBonesDataMap[o],(e.length===0||r.autoSearch)&&(n=r.getArmature(i),n!==null)){e=o;break}}if(n!==null){if(t.dataName=e,t.textureAtlasName=a,t.data=r,t.armature=n,t.skin=null,s.length>0&&(t.skin=n.getSkin(s),t.skin===null&&this.autoSearch))for(let o in this._dragonBonesDataMap){const h=this._dragonBonesDataMap[o].getArmature(s);if(h!==null){t.skin=h.defaultSkin;break}}return t.skin===null&&(t.skin=n.defaultSkin),!0}return!1}_buildBones(t,e){for(const i of t.armature.sortedBones)D.borrowObject(i.type===0?Kt:Fe).init(i,e)}_buildSlots(t,e){const i=t.skin,s=t.armature.defaultSkin;if(i===null||s===null)return;const a={};for(let r in s.displays){const n=s.getDisplays(r);a[r]=n}if(i!==s)for(let r in i.displays){const n=i.getDisplays(r);a[r]=n}for(const r of t.armature.sortedSlots){const n=r.name in a?a[r.name]:null,o=this._buildSlot(t,r,e);if(n!==null){o.displayFrameCount=n.length;for(let h=0,_=o.displayFrameCount;h<_;++h){const u=n[h];if(o.replaceRawDisplayData(u,h),u!==null){if(t.textureAtlasName.length>0){const p=this._getTextureData(t.textureAtlasName,u.path);o.replaceTextureData(p,h)}const m=this._getSlotDisplay(t,u,o);o.replaceDisplay(m,h)}else o.replaceDisplay(null)}}o._setDisplayIndex(r.displayIndex,!0)}}_buildConstraints(t,e){const i=t.armature.constraints;for(let s in i){const a=i[s];switch(a.type){case 0:const r=D.borrowObject(Yt);r.init(a,e),e._addConstraint(r);break;case 1:const n=D.borrowObject(Me);n.init(a,e),e._addConstraint(n);break;default:const o=D.borrowObject(Yt);o.init(a,e),e._addConstraint(o)}}}_buildChildArmature(t,e,i){return this.buildArmature(i.path,t!==null?t.dataName:"","",t!==null?t.textureAtlasName:"")}_getSlotDisplay(t,e,i){const s=t!==null?t.dataName:e.parent.parent.parent.name;let a=null;switch(e.type){case 0:{const r=e;r.texture===null&&(r.texture=this._getTextureData(s,e.path)),a=i.rawDisplay;break}case 2:{const r=e;r.texture===null&&(r.texture=this._getTextureData(s,r.path)),a=this._isSupportMesh()?i.meshDisplay:i.rawDisplay;break}case 1:{const r=e,n=this._buildChildArmature(t,i,r);if(n!==null){if(n.inheritAnimation=r.inheritAnimation,!n.inheritAnimation){const o=r.actions.length>0?r.actions:n.armatureData.defaultActions;if(o.length>0)for(const h of o){const _=D.borrowObject(P);P.actionDataToInstance(h,_,i.armature),_.slot=i,i.armature._bufferAction(_,!1)}else n.animation.play()}r.armature=n.armatureData}a=n;break}}return a}parseDragonBonesData(t,e=null,i=1){const s=t instanceof ArrayBuffer?J._binaryParser:this._dataParser,a=s.parseDragonBonesData(t,i);for(;;){const r=this._buildTextureAtlasData(null,null);if(!s.parseTextureAtlasData(null,r,i)){r.returnToPool();break}this.addTextureAtlasData(r,e)}return a!==null&&this.addDragonBonesData(a,e),a}parseTextureAtlasData(t,e,i=null,s=1){const a=this._buildTextureAtlasData(null,null);return this._dataParser.parseTextureAtlasData(t,a,s),this._buildTextureAtlasData(a,e||null),this.addTextureAtlasData(a,i),a}updateTextureAtlases(t,e){const i=this.getTextureAtlasData(e);if(i!==null)for(let s=0,a=i.length;s<a;++s)s<t.length&&this._buildTextureAtlasData(i[s],t[s])}getDragonBonesData(t){return t in this._dragonBonesDataMap?this._dragonBonesDataMap[t]:null}addDragonBonesData(t,e=null){if((e=e!==null?e:t.name)in this._dragonBonesDataMap){if(this._dragonBonesDataMap[e]===t)return;console.warn("Can not add same name data: "+e)}else this._dragonBonesDataMap[e]=t}removeDragonBonesData(t,e=!0){t in this._dragonBonesDataMap&&(e&&this._dragonBones.bufferObject(this._dragonBonesDataMap[t]),delete this._dragonBonesDataMap[t])}getTextureAtlasData(t){return t in this._textureAtlasDataMap?this._textureAtlasDataMap[t]:null}addTextureAtlasData(t,e=null){const i=(e=e!==null?e:t.name)in this._textureAtlasDataMap?this._textureAtlasDataMap[e]:this._textureAtlasDataMap[e]=[];i.indexOf(t)<0&&i.push(t)}removeTextureAtlasData(t,e=!0){if(t in this._textureAtlasDataMap){const i=this._textureAtlasDataMap[t];if(e)for(const s of i)this._dragonBones.bufferObject(s);delete this._textureAtlasDataMap[t]}}getArmatureData(t,e=""){const i=new Xt;return this._fillBuildArmaturePackage(i,e,t,"","")?i.armature:null}clear(t=!0){for(let e in this._dragonBonesDataMap)t&&this._dragonBones.bufferObject(this._dragonBonesDataMap[e]),delete this._dragonBonesDataMap[e];for(let e in this._textureAtlasDataMap){if(t){const i=this._textureAtlasDataMap[e];for(const s of i)this._dragonBones.bufferObject(s)}delete this._textureAtlasDataMap[e]}}buildArmature(t,e="",i="",s=""){const a=new Xt;if(!this._fillBuildArmaturePackage(a,e||"",t,i||"",s||""))return console.warn("No armature data: "+t+", "+(e!==null?e:"")),null;const r=this._buildArmature(a);return this._buildBones(a,r),this._buildSlots(a,r),this._buildConstraints(a,r),r.invalidUpdate(null,!0),r.advanceTime(0),r}replaceDisplay(t,e,i=-1){if(i<0&&(i=t.displayIndex),i<0&&(i=0),t.replaceDisplayData(e,i),e!==null){let s=this._getSlotDisplay(null,e,t);if(e.type===0){const a=t.getDisplayFrameAt(i).rawDisplayData;a!==null&&a.type===2&&(s=t.meshDisplay)}t.replaceDisplay(s,i)}else t.replaceDisplay(null,i)}replaceSlotDisplay(t,e,i,s,a,r=-1){const n=this.getArmatureData(e,t||"");if(n===null||n.defaultSkin===null)return!1;const o=n.defaultSkin.getDisplay(i,s);return this.replaceDisplay(a,o,r),!0}replaceSlotDisplayList(t,e,i,s){const a=this.getArmatureData(e,t||"");if(!a||!a.defaultSkin)return!1;const r=a.defaultSkin.getDisplays(i);if(!r)return!1;s.displayFrameCount=r.length;for(let n=0,o=s.displayFrameCount;n<o;++n){const h=r[n];this.replaceDisplay(s,h,n)}return!0}replaceSkin(t,e,i=!1,s=null){let a=!1;const r=e.parent.defaultSkin;for(const n of t.getSlots()){if(s!==null&&s.indexOf(n.name)>=0)continue;let o=e.getDisplays(n.name);if(o!==null||(r!==null&&e!==r&&(o=r.getDisplays(n.name)),o!==null)){n.displayFrameCount=o.length;for(let h=0,_=n.displayFrameCount;h<_;++h){const u=o[h];n.replaceRawDisplayData(u,h),u!==null?n.replaceDisplay(this._getSlotDisplay(null,u,n),h):n.replaceDisplay(null,h)}a=!0}else i&&(n.displayFrameCount=0)}return a}replaceAnimation(t,e,i=!0){const s=e.defaultSkin;if(s===null)return!1;if(i)t.animation.animations=e.animations;else{const a=t.animation.animations,r={};for(let n in a)r[n]=a[n];for(let n in e.animations)r[n]=e.animations[n];t.animation.animations=r}for(const a of t.getSlots()){let r=0;for(const n of a.displayList){if(n instanceof et){const o=s.getDisplays(a.name);if(o!==null&&r<o.length){const h=o[r];if(h!==null&&h.type===1){const _=this.getArmatureData(h.path,h.parent.parent.parent.name);_&&this.replaceAnimation(n,_,i)}}}r++}}return!0}getAllDragonBonesData(){return this._dragonBonesDataMap}getAllTextureAtlasData(){return this._textureAtlasDataMap}get clock(){return this._dragonBones.clock}get dragonBones(){return this._dragonBones}};xt._objectParser=null,xt._binaryParser=null;class Xt{constructor(){this.dataName="",this.textureAtlasName="",this.skin=null}}class jt extends Ft{constructor(){super(),this.debugDraw=!1,this._debugDraw=!1,this._armature=null,this._debugDrawer=null,this._debugDrawerChildren=new Map}dbInit(t){this._armature=t}dbClear(){this._debugDrawer!==null&&(this._debugDrawerChildren.clear(),this._debugDrawer.destroy()),this._armature=null,this._debugDrawer=null,super.destroy()}dbUpdate(){const t=q.debugDraw||this.debugDraw;if(t||this._debugDraw)if(this._debugDraw=t,this._debugDraw){if(this._debugDrawer===null){this._debugDrawer=new Ft;const a=new wt;this._debugDrawer.addChild(a)}this.addChild(this._debugDrawer);const e=this._debugDrawer.getChildAt(0);e.clear();const i=this._armature.getBones();for(let a=0,r=i.length;a<r;++a){const n=i[a],o=n.boneData.length,h=n.globalTransformMatrix.tx,_=n.globalTransformMatrix.ty,u=h+n.globalTransformMatrix.a*o,m=_+n.globalTransformMatrix.b*o;e.moveTo(h,_),e.lineTo(u,m),e.stroke({width:2,color:65535,alpha:.7}),e.circle(h,_,3),e.fill({color:65535,alpha:.7})}const s=this._armature.getSlots();for(let a=0,r=s.length;a<r;++a){const n=s[a],o=n.boundingBoxData;if(o){let h=this._debugDrawerChildren.get(n.name);switch(h||(h=new wt,this._debugDrawerChildren.set(n.name,h),this._debugDrawer.addChild(h)),h.clear(),o.type){case 0:h.rect(.5*-o.width,.5*-o.height,o.width,o.height);break;case 1:h.ellipse(.5*-o.width,.5*-o.height,o.width,o.height);break;case 2:const u=o.vertices;for(let m=0,p=u.length;m<p;m+=2){const f=u[m],y=u[m+1];m===0?h.moveTo(f,y):h.lineTo(f,y)}h.lineTo(u[0],u[1])}e.stroke({width:2,color:65535,alpha:.7}),n.updateTransformAndMatrix(),n.updateGlobalTransform();const _=n.global;h.updateTransform({x:_.x,y:_.y,scaleX:_.scaleX,scaleY:_.scaleY,rotation:_.rotation,skewX:_.skew,skewY:0,pivotX:n._pivotX,pivotY:n._pivotY})}else{const h=this._debugDrawerChildren.get(n.name);h&&(this._debugDrawerChildren.delete(n.name),this._debugDrawer.removeChild(h))}}}else this._debugDrawer!==null&&this._debugDrawer.parent===this&&this.removeChild(this._debugDrawer)}dispose(t=!0){this._armature!==null&&(this._armature.dispose(),this._armature=null)}destroy(){this.dispose()}dispatchDBEvent(t,e){this.emit(t,e)}hasDBEventListener(t){return this.listenerCount(t)>0}addDBEventListener(t,e,i){this.addListener(t,e,i)}removeDBEventListener(t,e,i){this.removeListener(t,e,i)}get armature(){return this._armature}get animation(){return this._armature.animation}}class ae extends Re{constructor(){super(...arguments),this._renderTexture=null}static toString(){return"[class dragonBones.PixiTextureAtlasData]"}_onClear(){super._onClear(),this._renderTexture,this._renderTexture=null}createTexture(){return D.borrowObject(ke)}get renderTexture(){return this._renderTexture}set renderTexture(t){if(this._renderTexture!==t)if(this._renderTexture=t,this._renderTexture!==null)for(let e in this.textures){const i=this.textures[e];i.renderTexture=new At({source:this._renderTexture.source,frame:new gt(i.region.x,i.region.y,i.region.width,i.region.height),orig:new gt(i.region.x,i.region.y,i.region.width,i.region.height),trim:new gt(0,0,i.region.width,i.region.height),rotate:i.rotated?re.S:0})}else for(let e in this.textures)this.textures[e].renderTexture=null}}class ke extends ee{constructor(){super(...arguments),this.renderTexture=null}static toString(){return"[class dragonBones.PixiTextureData]"}_onClear(){super._onClear(),this.renderTexture!==null&&this.renderTexture.destroy(!1),this.renderTexture=null}}class Le extends Ie{static toString(){return"[class dragonBones.PixiSlot]"}_onClear(){super._onClear(),this._textureScale=1,this._renderDisplay=null}_initDisplay(t,e){}_disposeDisplay(t,e){e||t.destroy()}_onUpdateDisplay(){this._renderDisplay=this._display?this._display:this._rawDisplay}_addDisplay(){this._armature.display.addChild(this._renderDisplay)}_replaceDisplay(t){const e=this._armature.display,i=t;e.addChild(this._renderDisplay),e.swapChildren(this._renderDisplay,i),e.removeChild(i),this._textureScale=1}_removeDisplay(){this._renderDisplay.parent.removeChild(this._renderDisplay)}_updateZOrder(){const t=this._armature.display;t.getChildIndex(this._renderDisplay)!==this._zOrder&&t.addChildAt(this._renderDisplay,this._zOrder)}_updateVisible(){this._renderDisplay.visible=this._parent.visible&&this._visible}_updateBlendMode(){if(this._renderDisplay instanceof ut)switch(this._blendMode){case 0:this._renderDisplay.blendMode="normal";break;case 1:this._renderDisplay.blendMode="add";break;case 3:this._renderDisplay.blendMode="darken";break;case 4:this._renderDisplay.blendMode="difference";break;case 6:this._renderDisplay.blendMode="hard-light";break;case 9:this._renderDisplay.blendMode="lighten";break;case 10:this._renderDisplay.blendMode="multiply";break;case 11:this._renderDisplay.blendMode="overlay";break;case 12:this._renderDisplay.blendMode="screen"}}_updateColor(){const t=this._colorTransform.alphaMultiplier*this._globalAlpha;if(this._renderDisplay.alpha=t,this._renderDisplay instanceof ut||this._renderDisplay instanceof Gt){const e=(Math.round(255*this._colorTransform.redMultiplier)<<16)+(Math.round(255*this._colorTransform.greenMultiplier)<<8)+Math.round(255*this._colorTransform.blueMultiplier);this._renderDisplay.tint=e}}_updateFrame(){let t=this._textureData;if(this._displayIndex>=0&&this._display!==null&&t!==null){let e=t.parent;this._armature.replacedTexture!==null&&(this._armature._replaceTextureAtlasData===null?(e=D.borrowObject(ae),e.copyFrom(t.parent),e.renderTexture=this._armature.replacedTexture,this._armature._replaceTextureAtlasData=e):e=this._armature._replaceTextureAtlasData,t=e.getTexture(t.name));const i=t.renderTexture;if(i!==null){if(this._geometryData!==null){const s=this._geometryData.data,a=s.intArray,r=s.floatArray,n=a[this._geometryData.offset+0],o=a[this._geometryData.offset+1];let h=a[this._geometryData.offset+2];h<0&&(h+=65536);const _=h+2*n,u=this._armature._armatureData.scale,m=this._renderDisplay,p=new Float32Array(2*n),f=new Float32Array(2*n),y=new Uint16Array(3*o);for(let c=0,A=2*n;c<A;++c)p[c]=r[h+c]*u;for(let c=0;c<3*o;++c)y[c]=a[this._geometryData.offset+4+c];for(let c=0,A=2*n;c<A;c+=2){const b=r[_+c],E=r[_+c+1];t.rotated?(f[c]=1-E,f[c+1]=b):(f[c]=b,f[c+1]=E)}this._textureScale=1,m.texture=i,m.vertices=p,m.geometry.uvs=f,m.geometry.indices=y;const T=this._geometryData.weight!==null,d=this._parent._boneData.type!==0;(T||d)&&this._identityTransform()}else this._textureScale=t.parent.scale*this._armature._armatureData.scale,this._renderDisplay.texture=i;return void(this._visibleDirty=!0)}}if(this._geometryData!==null){const e=this._renderDisplay;e.texture=null,e.x=0,e.y=0,e.visible=!1}else{const e=this._renderDisplay;e.texture=null,e.x=0,e.y=0,e.visible=!1}}_updateMesh(){const t=this._armature._armatureData.scale,e=this._displayFrame.deformVertices,i=this._geometryBones,s=this._geometryData,a=s.weight,r=e.length>0&&s.inheritDeform,n=this._renderDisplay;if(a!==null){const o=s.data,h=o.intArray,_=o.floatArray,u=h[s.offset+0];let m=h[a.offset+1];m<0&&(m+=65536);for(let p=0,f=0,y=a.offset+2+i.length,T=m,d=0;p<u;++p){const c=h[y++];let A=0,b=0;for(let E=0;E<c;++E){const O=i[h[y++]];if(O!==null){const S=O.globalTransformMatrix,x=_[T++];let I=_[T++]*t,C=_[T++]*t;r&&(I+=e[d++],C+=e[d++]),A+=(S.a*I+S.c*C+S.tx)*x,b+=(S.b*I+S.d*C+S.ty)*x}}n.vertices[f++]=A,n.vertices[f++]=b}}else{const o=this._parent._boneData.type!==0,h=s.data,_=h.intArray,u=h.floatArray,m=_[s.offset+0];let p=_[s.offset+2];p<0&&(p+=65536);for(let f=0,y=2*m;f<y;f+=2){let T=u[p+f]*t,d=u[p+f+1]*t;if(r&&(T+=e[f],d+=e[f+1]),o){const c=this._parent._getGlobalTransformMatrix(T,d);n.vertices[f]=c.a*T+c.c*d+c.tx,n.vertices[f+1]=c.b*T+c.d*d+c.ty}else n.vertices[f]=T,n.vertices[f+1]=d}}}_updateTransform(){this.updateGlobalTransform();const t=this.global;if(this._renderDisplay===this._rawDisplay||this._renderDisplay===this._meshDisplay){const e=t.x-(this.globalTransformMatrix.a*this._pivotX+this.globalTransformMatrix.c*this._pivotY),i=t.y-(this.globalTransformMatrix.b*this._pivotX+this.globalTransformMatrix.d*this._pivotY);this._renderDisplay.updateTransform({x:e,y:i,scaleX:t.scaleX*this._textureScale,scaleY:t.scaleY*this._textureScale,rotation:t.rotation,skewX:-t.skew,skewY:0})}else this._renderDisplay.position.set(t.x,t.y),this._renderDisplay.rotation=t.rotation,this._renderDisplay.skew.set(-t.skew,0),this._renderDisplay.scale.set(t.scaleX,t.scaleY)}_identityTransform(){this._renderDisplay.updateTransform({x:0,y:0,pivotX:0,pivotY:0,scaleX:1,scaleY:1,rotation:0,skewX:0,skewY:0})}}function Ve(M){const t=ot.cache._cache;for(const[e,i]of t)if(i===M)return e;return null}function Ye(M,t){const e=Ct.dirname(M);return Ct.join(e,t)}class G extends xt{static _clockHandler(t){this._dragonBonesInstance.advanceTime(t.deltaMS/1e3)}static advanceTime(t){this._dragonBonesInstance&&this._dragonBonesInstance.advanceTime(t)}static get factory(){return G._factory===null&&(G._factory=new G(null,G.useSharedTicker)),G._factory}static newInstance(t=!0){return G._factory===null&&(G._factory=new G(null,t)),G._factory}constructor(t=null,e=!0){if(super(t),G._dragonBonesInstance===null){const i=new jt;G._dragonBonesInstance=new q(i),e&&ne.shared.add(G._clockHandler,G)}this._dragonBones=G._dragonBonesInstance}_buildTextureAtlasData(t,e){return t?t.renderTexture=e:t=D.borrowObject(ae),t}_buildArmature(t){const e=D.borrowObject(et),i=new jt;return e.init(t.armature,i,i,this._dragonBones),e}_buildSlot(t,e,i){const s=D.borrowObject(Le);return s.init(e,i,new ut(At.EMPTY),new Gt({texture:At.EMPTY})),s}buildArmatureDisplay(t,e="",i="",s=""){const a=this.buildArmature(t,e||"",i||"",s||"");return a!==null?(this._dragonBones.clock.add(a),a.display):null}getTextureDisplay(t,e=null){const i=this._getTextureData(e!==null?e:"",t);return i!==null&&i.renderTexture!==null?new ut(i.renderTexture):null}get soundEventManager(){return this._dragonBones.eventManager}parseDragonBonesData(t,e=null,i=1){return typeof t=="string"&&(t=ot.cache.get(t)),super.parseDragonBonesData(t,e,i)}parseTextureAtlasData(t,e,i=null,s=1){let a=t;if(typeof t=="string"&&(a=ot.cache.get(t)),!e){let r=Ve(a);e=Ye(r,a.imagePath)}return typeof e=="string"&&(e=ot.cache.get(e)),super.parseTextureAtlasData(a,e,i,s)}}G._dragonBonesInstance=null,G._factory=null,G.useSharedTicker=!0;export{G as g};
